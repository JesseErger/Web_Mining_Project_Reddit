[{"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": 1, "children": [{"kind": "t3", "data": {"is_crosspostable": false, "subreddit_id": "t5_2tex6", "approved_at_utc": null, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "thumbnail_width": null, "subreddit": "ProgrammerHumor", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Because they hate classes.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Because they hate classes.", "likes": null, "suggested_sort": null, "mod_note": null, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "saved": false, "id": "5lkr4f", "banned_at_utc": null, "mod_reason_title": null, "view_count": null, "archived": true, "clicked": false, "no_follow": false, "author": "DestinationVoid", "num_crossposts": 0, "link_flair_text": null, "can_mod_post": false, "send_replies": true, "pinned": false, "score": 1064, "approved_by": null, "over_18": false, "domain": "self.ProgrammerHumor", "hidden": false, "num_comments": 68, "thumbnail": "self", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "contest_mode": false, "gilded": 0, "locked": false, "downs": 0, "brand_safe": true, "subreddit_subscribers": 482121, "secure_media_embed": {}, "media_embed": {}, "stickied": false, "can_gild": false, "thumbnail_height": null, "parent_whitelist_status": "all_ads", "name": "t3_5lkr4f", "spoiler": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/", "subreddit_type": "public", "whitelist_status": "all_ads", "report_reasons": null, "created": 1483383810.0, "url": "https://www.reddit.com/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/", "author_flair_text": null, "quarantine": false, "title": "Why do functional programmers homeschool their kids?", "created_utc": 1483355010.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "distinguished": null, "media": null, "upvote_ratio": 0.92, "mod_reports": [], "is_self": true, "visited": false, "num_reports": null, "is_video": false, "ups": 1064}}], "before": null}}, {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 319, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 41, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "dbws5d4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "gandalfx", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwq8cf", "score": 41, "approved_by": null, "downs": 0, "body": "I was expecting something about side effects.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I was expecting something about side effects.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbws5d4", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbws5d4/", "num_reports": null, "stickied": false, "created": 1483409639.0, "author_flair_text": null, "created_utc": 1483380839.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 14, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "dbwwiod", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Workaphobia", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwq8cf", "score": 14, "approved_by": null, "downs": 0, "body": "\"Because they're purists\"", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;Because they&amp;#39;re purists&amp;quot;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwwiod", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwwiod/", "num_reports": null, "stickied": false, "created": 1483414942.0, "author_flair_text": null, "created_utc": 1483386142.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 12, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "dbwxdw2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "kgram", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwq8cf", "score": 12, "approved_by": null, "downs": 0, "body": "Maybe something like \"why are so many functional programmers anarchists? They love statelessness.\" ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Maybe something like &amp;quot;why are so many functional programmers anarchists? They love statelessness.&amp;quot; &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwxdw2", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwxdw2/", "num_reports": null, "stickied": false, "created": 1483416037.0, "author_flair_text": null, "created_utc": 1483387237.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dby4oyp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "albertorestifo", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwq8cf", "score": 2, "approved_by": null, "downs": 0, "body": "Something something real joke in the comments", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Something something real joke in the comments&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dby4oyp", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dby4oyp/", "num_reports": null, "stickied": false, "created": 1483489474.0, "author_flair_text": null, "created_utc": 1483460674.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dc1h6r9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "mike413", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwq8cf", "score": 2, "approved_by": null, "downs": 0, "body": "also putting anything on the bus is inefficient.  the roundtrip takes all day.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;also putting anything on the bus is inefficient.  the roundtrip takes all day.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dc1h6r9", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dc1h6r9/", "num_reports": null, "stickied": false, "created": 1483669233.0, "author_flair_text": null, "created_utc": 1483640433.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwq8cf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "allnewtape", "can_mod_post": false, "send_replies": true, "parent_id": "t3_5lkr4f", "score": 319, "approved_by": null, "downs": 0, "body": "Why not \"because they do not like depending on the state\"?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Why not &amp;quot;because they do not like depending on the state&amp;quot;?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwq8cf", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwq8cf/", "num_reports": null, "stickied": false, "created": 1483407123.0, "author_flair_text": null, "created_utc": 1483378323.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 181, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 142, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 55, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 27, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 16, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 9, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 9, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "dbx6ayj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Joald", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwtlck", "score": 9, "approved_by": null, "downs": 0, "body": "I THINK WE WERE TALKING ABOUT DIFFERENT KINDS OF HUMANS. PLEASE EXPERIENCE ACTUAL HUMANS OVER AT [/R/TOTALLYNOTROBOTS](http://www.reddit.com/r/totallynotrobots)", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I THINK WE WERE TALKING ABOUT DIFFERENT KINDS OF HUMANS. PLEASE EXPERIENCE ACTUAL HUMANS OVER AT &lt;a href=\"http://www.reddit.com/r/totallynotrobots\"&gt;/R/TOTALLYNOTROBOTS&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbx6ayj", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbx6ayj/", "num_reports": null, "stickied": false, "created": 1483427568.0, "author_flair_text": null, "created_utc": 1483398768.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dby57bn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "c_delta", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dby53pi", "score": 1, "approved_by": null, "downs": 0, "body": "I was not talking about programming contexts at all. There are lots of variables that change all the time in real life, which is why they are called variables. Think prices, quantities in stock, funds, populations or every single physical quantity.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I was not talking about programming contexts at all. There are lots of variables that change all the time in real life, which is why they are called variables. Think prices, quantities in stock, funds, populations or every single physical quantity.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dby57bn", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dby57bn/", "num_reports": null, "stickied": false, "created": 1483490120.0, "author_flair_text": null, "created_utc": 1483461320.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 9, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dbybli9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Evennot", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dby53pi", "score": 1, "approved_by": null, "downs": 0, "body": "Dunno, most math concepts look very alien-minded to me (except for differential equations). Imperative programming concepts are much more relatable. When I was a little kid and didn't know anything about programming I tried to figure out Batch scripts on IBM XT. I invented variables by echoing things into files and IF statement by letting scripts halt on errors I control. And I couldn't predict most of math concepts before I actually read about them. Even basic epsilon proofs in University. I guess it's a matter of a mindset.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Dunno, most math concepts look very alien-minded to me (except for differential equations). Imperative programming concepts are much more relatable. When I was a little kid and didn&amp;#39;t know anything about programming I tried to figure out Batch scripts on IBM XT. I invented variables by echoing things into files and IF statement by letting scripts halt on errors I control. And I couldn&amp;#39;t predict most of math concepts before I actually read about them. Even basic epsilon proofs in University. I guess it&amp;#39;s a matter of a mindset.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbybli9", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbybli9/", "num_reports": null, "stickied": false, "created": 1483497661.0, "author_flair_text": null, "created_utc": 1483468861.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 9, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dby53pi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "antonivs", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbxvema", "score": 3, "approved_by": null, "downs": 0, "body": "That's a uniquely \"imperative language\" perspective on variables. It doesn't reflect how variables are used in mathematics, for example.\n\nThe perspective on variables in mathematics and in functional languages is that a variable is given a value in a particular context, and once given a value, it doesn't change within that context. So it can't \"have a different value in the future than it had in the past.\"\n\nFrom that perspective, what you're describing is essentially creating a new context, with a new instance of the variable, with a new value. You're not actually changing the value that was given to the variable in the past, since that would be impossible.\n\nThis might seem like a picky distinction if it's new to you, but if you look at how compilers work, even for imperative languages, they often make this distinction internally because it's an important one for reasoning about what's happening in code. I'm referring to what's known as [static single assignment](https://en.wikipedia.org/wiki/Static_single_assignment_form): \"requires that each variable is assigned exactly once\".\n\nBasically, an imperative language is a language that's sloppy about representing the relationship between variables, values, and time, which leads to numerous kinds of bugs, workarounds (\"avoid global variables\"), and has to be compensated for by  compilers in various ways.\n", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s a uniquely &amp;quot;imperative language&amp;quot; perspective on variables. It doesn&amp;#39;t reflect how variables are used in mathematics, for example.&lt;/p&gt;\n\n&lt;p&gt;The perspective on variables in mathematics and in functional languages is that a variable is given a value in a particular context, and once given a value, it doesn&amp;#39;t change within that context. So it can&amp;#39;t &amp;quot;have a different value in the future than it had in the past.&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;From that perspective, what you&amp;#39;re describing is essentially creating a new context, with a new instance of the variable, with a new value. You&amp;#39;re not actually changing the value that was given to the variable in the past, since that would be impossible.&lt;/p&gt;\n\n&lt;p&gt;This might seem like a picky distinction if it&amp;#39;s new to you, but if you look at how compilers work, even for imperative languages, they often make this distinction internally because it&amp;#39;s an important one for reasoning about what&amp;#39;s happening in code. I&amp;#39;m referring to what&amp;#39;s known as &lt;a href=\"https://en.wikipedia.org/wiki/Static_single_assignment_form\"&gt;static single assignment&lt;/a&gt;: &amp;quot;requires that each variable is assigned exactly once&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;Basically, an imperative language is a language that&amp;#39;s sloppy about representing the relationship between variables, values, and time, which leads to numerous kinds of bugs, workarounds (&amp;quot;avoid global variables&amp;quot;), and has to be compensated for by  compilers in various ways.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dby53pi", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dby53pi/", "num_reports": null, "stickied": false, "created": 1483489994.0, "author_flair_text": null, "created_utc": 1483461194.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 8, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbxvema", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "c_delta", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwtlck", "score": 1, "approved_by": null, "downs": 0, "body": "That is why it is a variable. Because it can have a different value in the future than it had in the past.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That is why it is a variable. Because it can have a different value in the future than it had in the past.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbxvema", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbxvema/", "num_reports": null, "stickied": false, "created": 1483471959.0, "author_flair_text": null, "created_utc": 1483443159.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwtlck", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "antonivs", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwt0n2", "score": 9, "approved_by": null, "downs": 0, "body": "Actually, no humans are used to imperative languages, since we don't have time machines and can't actually change the value we gave to a variable in the past.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Actually, no humans are used to imperative languages, since we don&amp;#39;t have time machines and can&amp;#39;t actually change the value we gave to a variable in the past.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwtlck", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwtlck/", "num_reports": null, "stickied": false, "created": 1483411364.0, "author_flair_text": null, "created_utc": 1483382564.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwt0n2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Joald", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwrum1", "score": 6, "approved_by": null, "downs": 0, "body": "As all actual humans are.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As all actual humans are.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwt0n2", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwt0n2/", "num_reports": null, "stickied": false, "created": 1483410692.0, "author_flair_text": null, "created_utc": 1483381892.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 8, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "more", "data": {"count": 0, "name": "t1__", "id": "_", "parent_id": "t1_dbx0ytk", "depth": 10, "children": []}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbx0ytk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "bekk3", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbx07nk", "score": 1, "approved_by": null, "downs": 0, "body": "Wow, TIL. I had always thought C was considered functional due to the lack of classes, but I see now that it is considered imperative. Thanks.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wow, TIL. I had always thought C was considered functional due to the lack of classes, but I see now that it is considered imperative. Thanks.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbx0ytk", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbx0ytk/", "num_reports": null, "stickied": false, "created": 1483420493.0, "author_flair_text": null, "created_utc": 1483391693.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 9, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbx07nk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "an_actual_human", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwywfg", "score": 1, "approved_by": null, "downs": 0, "body": "Functional languages discourage the use of variables or don't have them at all.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Functional languages discourage the use of variables or don&amp;#39;t have them at all.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbx07nk", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbx07nk/", "num_reports": null, "stickied": false, "created": 1483419540.0, "author_flair_text": null, "created_utc": 1483390740.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 8, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwywfg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "bekk3", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwvf22", "score": 1, "approved_by": null, "downs": 0, "body": "Really? I was always under the impression that the ++ operator would just reassign the variable to one plus itself?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Really? I was always under the impression that the ++ operator would just reassign the variable to one plus itself?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwywfg", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwywfg/", "num_reports": null, "stickied": false, "created": 1483417937.0, "author_flair_text": null, "created_utc": 1483389137.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": -1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 0, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": -5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "more", "data": {"count": 0, "name": "t1__", "id": "_", "parent_id": "t1_dbwypae", "depth": 10, "children": []}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwypae", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "an_actual_human", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwy0rp", "score": -5, "approved_by": null, "downs": 0, "body": "Do you get why I would correct it to ++ without exposure to the idea of immutability? If you don't, you somehow chose the wrong subjectively unfunny thing of the two. If you do, pray tell, because it doesn't make sense to me.", "edited": false, "author_flair_css_class": null, "collapsed": true, "is_submitter": false, "collapsed_reason": "comment score below threshold", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do you get why I would correct it to ++ without exposure to the idea of immutability? If you don&amp;#39;t, you somehow chose the wrong subjectively unfunny thing of the two. If you do, pray tell, because it doesn&amp;#39;t make sense to me.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwypae", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwypae/", "num_reports": null, "stickied": false, "created": 1483417691.0, "author_flair_text": null, "created_utc": 1483388891.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 9, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwy0rp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "brown_monkey_", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwvxfu", "score": 0, "approved_by": null, "downs": 0, "body": "Oh, so that was intentional. Not sure I get why it's funny though. It would make more sense if /u/mnbvas said ++ and you had corrected to +1. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh, so that was intentional. Not sure I get why it&amp;#39;s funny though. It would make more sense if &lt;a href=\"/u/mnbvas\"&gt;/u/mnbvas&lt;/a&gt; said ++ and you had corrected to +1. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwy0rp", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwy0rp/", "num_reports": null, "stickied": false, "created": 1483416844.0, "author_flair_text": null, "created_utc": 1483388044.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 8, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwvxfu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "an_actual_human", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwvf22", "score": -1, "approved_by": null, "downs": 0, "body": "Yeah, thatsthejoke.hs. I'm not sure why you'd think otherwise. My initial comment wouldn't make sense that way.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, thatsthejoke.hs. I&amp;#39;m not sure why you&amp;#39;d think otherwise. My initial comment wouldn&amp;#39;t make sense that way.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwvxfu", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwvxfu/", "num_reports": null, "stickied": false, "created": 1483414194.0, "author_flair_text": null, "created_utc": 1483385394.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwvf22", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "brown_monkey_", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwt8xx", "score": 8, "approved_by": null, "downs": 0, "body": "The ++ operator changes the value of a variable, which is not allowed in functional programming. In functional programming, all data is supposed to be immutable, so you cannot change a value, only create new data with the value updated. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The ++ operator changes the value of a variable, which is not allowed in functional programming. In functional programming, all data is supposed to be immutable, so you cannot change a value, only create new data with the value updated. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwvf22", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwvf22/", "num_reports": null, "stickied": false, "created": 1483413558.0, "author_flair_text": null, "created_utc": 1483384758.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwt8xx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "an_actual_human", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwrum1", "score": 1, "approved_by": null, "downs": 0, "body": "I'm not sure I get it.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not sure I get it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwt8xx", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwt8xx/", "num_reports": null, "stickied": false, "created": 1483410959.0, "author_flair_text": null, "created_utc": 1483382159.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwrum1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "brown_monkey_", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwqf8s", "score": 16, "approved_by": null, "downs": 0, "body": "I don't think so. I'm pretty sure /u/an_actual_human is just used to imperative languages. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t think so. I&amp;#39;m pretty sure &lt;a href=\"/u/an_actual_human\"&gt;/u/an_actual_human&lt;/a&gt; is just used to imperative languages. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwrum1", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwrum1/", "num_reports": null, "stickied": false, "created": 1483409254.0, "author_flair_text": null, "created_utc": 1483380454.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dbx70h2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "youtubefactsbot", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbx702a", "score": 1, "approved_by": null, "downs": 0, "body": "&gt;[**Dead Dove Do Not Eat [0:08]**](http://youtu.be/YUKmq7UMJys)\n\n&gt;&gt; \n\n&gt; [*^SpikeyEtc*](https://www.youtube.com/channel/UCwoks7qAqLPhUVVel-c0S0g) ^in ^People ^&amp; ^Blogs\n\n&gt;*^498,540 ^views ^since ^Jan ^2012*\n\n[^bot ^info](/r/youtubefactsbot/wiki/index)", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=\"http://youtu.be/YUKmq7UMJys\"&gt;&lt;strong&gt;Dead Dove Do Not Eat [0:08]&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.youtube.com/channel/UCwoks7qAqLPhUVVel-c0S0g\"&gt;&lt;em&gt;&lt;sup&gt;SpikeyEtc&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt; &lt;sup&gt;in&lt;/sup&gt; &lt;sup&gt;People&lt;/sup&gt; &lt;sup&gt;&amp;amp;&lt;/sup&gt; &lt;sup&gt;Blogs&lt;/sup&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;&lt;sup&gt;498,540&lt;/sup&gt; &lt;sup&gt;views&lt;/sup&gt; &lt;sup&gt;since&lt;/sup&gt; &lt;sup&gt;Jan&lt;/sup&gt; &lt;sup&gt;2012&lt;/sup&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=\"/r/youtubefactsbot/wiki/index\"&gt;&lt;sup&gt;bot&lt;/sup&gt; &lt;sup&gt;info&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbx70h2", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbx70h2/", "num_reports": null, "stickied": false, "created": 1483428509.0, "author_flair_text": null, "created_utc": 1483399709.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbx702a", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "an_actual_human", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbx6sre", "score": 2, "approved_by": null, "downs": 0, "body": "https://www.youtube.com/watch?v=YUKmq7UMJys\n", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.youtube.com/watch?v=YUKmq7UMJys\"&gt;https://www.youtube.com/watch?v=YUKmq7UMJys&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbx702a", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbx702a/", "num_reports": null, "stickied": false, "created": 1483428493.0, "author_flair_text": null, "created_utc": 1483399693.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbx6sre", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "DuckRabbitMilkStout", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwqf8s", "score": 2, "approved_by": null, "downs": 0, "body": "    $ cat thatsthejoke.hs\n    ++1\n    $ runghc thatsthejoke.hs\n    \n    thatsthejoke.hs:1:1: error: parse error on input \u2018++\u2019", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;$ cat thatsthejoke.hs\n++1\n$ runghc thatsthejoke.hs\n\nthatsthejoke.hs:1:1: error: parse error on input \u2018++\u2019\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbx6sre", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbx6sre/", "num_reports": null, "stickied": false, "created": 1483428230.0, "author_flair_text": null, "created_utc": 1483399430.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwqf8s", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "an_actual_human", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwqbrq", "score": 27, "approved_by": null, "downs": 0, "body": "thatsthejoke.hs", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;thatsthejoke.hs&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwqf8s", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwqf8s/", "num_reports": null, "stickied": false, "created": 1483407375.0, "author_flair_text": null, "created_utc": 1483378575.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwqbrq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "limegut", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwlvky", "score": 55, "approved_by": null, "downs": 0, "body": "Mutability :(", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Mutability :(&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwqbrq", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwqbrq/", "num_reports": null, "stickied": false, "created": 1483407246.0, "author_flair_text": null, "created_utc": 1483378446.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwlvky", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "an_actual_human", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwizqd", "score": 142, "approved_by": null, "downs": 0, "body": "More like ++ amirite.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;More like ++ amirite.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwlvky", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwlvky/", "num_reports": null, "stickied": false, "created": 1483400867.0, "author_flair_text": null, "created_utc": 1483372067.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "dbwzk9s", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "marcosdumay", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwizqd", "score": 6, "approved_by": null, "downs": 0, "body": "(+1) for trying", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;(+1) for trying&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwzk9s", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwzk9s/", "num_reports": null, "stickied": false, "created": 1483418743.0, "author_flair_text": null, "created_utc": 1483389943.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "dbwjrqf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "superking2", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwizqd", "score": 5, "approved_by": null, "downs": 0, "body": "I caught what they were doing there, finally.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I caught what they were doing there, finally.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwjrqf", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwjrqf/", "num_reports": null, "stickied": false, "created": 1483397003.0, "author_flair_text": null, "created_utc": 1483368203.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dbybhr6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbxxxdq", "score": 2, "approved_by": null, "downs": 0, "body": "Ok cool thanks! But yeah I guess if I do end up having to do some C# I will probably just use a more standard OOP style :/\n\nAnd yeah Monads aren't really much more complicated than functors. `join` is a pretty simple function and most people don't have too much trouble with `Functor`. I think people just really want some sort of physical analogy, which can be pretty tough (I think the site I linked does a pretty good job), when really a `Monad` is just the above function plus a `Functor`, which isn't really anything physical (and I guess an `Applicative`, but you get that for free from `fmap` and `join` or from `&gt;&gt;=` alone).\n\nI guess the one other thing you have to think about with these classes is you do have to make sure the instances are law abiding. `Functor` has the `fmap id = id` and `fmap (f . g) = fmap f . fmap g` laws, `Monad` has the `pure a &gt;&gt;= f = f a`, `m &gt;&gt;= pure = m` and `(m &gt;&gt;= f) &gt;&gt;= g = m &gt;&gt;= (\\x -&gt; f x &gt;&gt;= g)` laws.\n\nThese laws are actually pretty important to have, because even though you may think that you aren't doing anything based on those laws, pretty much anything that violates those laws will cause surprise and be unintuitive. Also the associativity stuff does allow you to reformat and clean up your code pretty nicely without worrying too much about potentially changing behavior.\n\n`Applicative` is also pretty cool, it gives you `&lt;*&gt;` which has type `Applicative f =&gt; f (a -&gt; b) -&gt; f a -&gt; f b`, which basically means combining an applicative of functions with an applicative of inputs to get an applicative of outputs. So like with a list `[(+ 1), (+ 2)] &lt;*&gt; [10, 20]` gives `[11, 21, 12, 22]`.\n\nApplicatives are less powerful than Monads `fs &lt;*&gt; xs = fs &gt;&gt;= (\\f -&gt; f &lt;$&gt; xs)`, but that does mean there are a few types they work on that Monads don't (`ZipList` and certain analyzable parsers come to mind). Applicative notation `f &lt;$&gt; foo &lt;*&gt; bar &lt;*&gt; baz` can be very useful sometimes, particularly when writing a parser, you usually end up writing them almost entirely out of `&lt;$&gt;` `&lt;*&gt;` and `&lt;|&gt;`.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ok cool thanks! But yeah I guess if I do end up having to do some C# I will probably just use a more standard OOP style :/&lt;/p&gt;\n\n&lt;p&gt;And yeah Monads aren&amp;#39;t really much more complicated than functors. &lt;code&gt;join&lt;/code&gt; is a pretty simple function and most people don&amp;#39;t have too much trouble with &lt;code&gt;Functor&lt;/code&gt;. I think people just really want some sort of physical analogy, which can be pretty tough (I think the site I linked does a pretty good job), when really a &lt;code&gt;Monad&lt;/code&gt; is just the above function plus a &lt;code&gt;Functor&lt;/code&gt;, which isn&amp;#39;t really anything physical (and I guess an &lt;code&gt;Applicative&lt;/code&gt;, but you get that for free from &lt;code&gt;fmap&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; or from &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; alone).&lt;/p&gt;\n\n&lt;p&gt;I guess the one other thing you have to think about with these classes is you do have to make sure the instances are law abiding. &lt;code&gt;Functor&lt;/code&gt; has the &lt;code&gt;fmap id = id&lt;/code&gt; and &lt;code&gt;fmap (f . g) = fmap f . fmap g&lt;/code&gt; laws, &lt;code&gt;Monad&lt;/code&gt; has the &lt;code&gt;pure a &amp;gt;&amp;gt;= f = f a&lt;/code&gt;, &lt;code&gt;m &amp;gt;&amp;gt;= pure = m&lt;/code&gt; and &lt;code&gt;(m &amp;gt;&amp;gt;= f) &amp;gt;&amp;gt;= g = m &amp;gt;&amp;gt;= (\\x -&amp;gt; f x &amp;gt;&amp;gt;= g)&lt;/code&gt; laws.&lt;/p&gt;\n\n&lt;p&gt;These laws are actually pretty important to have, because even though you may think that you aren&amp;#39;t doing anything based on those laws, pretty much anything that violates those laws will cause surprise and be unintuitive. Also the associativity stuff does allow you to reformat and clean up your code pretty nicely without worrying too much about potentially changing behavior.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Applicative&lt;/code&gt; is also pretty cool, it gives you &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; which has type &lt;code&gt;Applicative f =&amp;gt; f (a -&amp;gt; b) -&amp;gt; f a -&amp;gt; f b&lt;/code&gt;, which basically means combining an applicative of functions with an applicative of inputs to get an applicative of outputs. So like with a list &lt;code&gt;[(+ 1), (+ 2)] &amp;lt;*&amp;gt; [10, 20]&lt;/code&gt; gives &lt;code&gt;[11, 21, 12, 22]&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Applicatives are less powerful than Monads &lt;code&gt;fs &amp;lt;*&amp;gt; xs = fs &amp;gt;&amp;gt;= (\\f -&amp;gt; f &amp;lt;$&amp;gt; xs)&lt;/code&gt;, but that does mean there are a few types they work on that Monads don&amp;#39;t (&lt;code&gt;ZipList&lt;/code&gt; and certain analyzable parsers come to mind). Applicative notation &lt;code&gt;f &amp;lt;$&amp;gt; foo &amp;lt;*&amp;gt; bar &amp;lt;*&amp;gt; baz&lt;/code&gt; can be very useful sometimes, particularly when writing a parser, you usually end up writing them almost entirely out of &lt;code&gt;&amp;lt;$&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;|&amp;gt;&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbybhr6", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbybhr6/", "num_reports": null, "stickied": false, "created": 1483497541.0, "author_flair_text": null, "created_utc": 1483468741.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbxxxdq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "mnbvas", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbxd7gr", "score": 1, "approved_by": null, "downs": 0, "body": "Here's an attempt at a C# functor:\n\n    interface IFunctor&lt;TSelf, T&gt;\n    {\n        IFunctor&lt;TSelf, U&gt; Fmap&lt;U&gt;(Func&lt;T, U&gt; function);\n    }\n\n`TSelf` is just for type safety. Value `f a` would come from `this`. [`Func`](https://msdn.microsoft.com/en-us/library/bb549151(v=vs.110\\).aspx) and [`Action`](https://msdn.microsoft.com/en-us/library/system.action(v=vs.110\\).aspx) bring almost first-class functions.  \nRather ugly, wouldn't recommend using this kind of stuff.\n\nMaybe [LINQ](https://en.wikipedia.org/wiki/Language_Integrated_Query) could bring some ideas - it [turns `IEnumerable&lt;T&gt;` into a lazy list monad](https://ericlippert.com/2013/03/25/monads-part-ten/).\n\n---\n\nThanks for the link. So it appears monads _are_ that \"simple\".", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s an attempt at a C# functor:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;interface IFunctor&amp;lt;TSelf, T&amp;gt;\n{\n    IFunctor&amp;lt;TSelf, U&amp;gt; Fmap&amp;lt;U&amp;gt;(Func&amp;lt;T, U&amp;gt; function);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;TSelf&lt;/code&gt; is just for type safety. Value &lt;code&gt;f a&lt;/code&gt; would come from &lt;code&gt;this&lt;/code&gt;. &lt;a href=\"https://msdn.microsoft.com/en-us/library/bb549151(v=vs.110).aspx\"&gt;&lt;code&gt;Func&lt;/code&gt;&lt;/a&gt; and &lt;a href=\"https://msdn.microsoft.com/en-us/library/system.action(v=vs.110).aspx\"&gt;&lt;code&gt;Action&lt;/code&gt;&lt;/a&gt; bring almost first-class functions.&lt;br/&gt;\nRather ugly, wouldn&amp;#39;t recommend using this kind of stuff.&lt;/p&gt;\n\n&lt;p&gt;Maybe &lt;a href=\"https://en.wikipedia.org/wiki/Language_Integrated_Query\"&gt;LINQ&lt;/a&gt; could bring some ideas - it &lt;a href=\"https://ericlippert.com/2013/03/25/monads-part-ten/\"&gt;turns &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; into a lazy list monad&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Thanks for the link. So it appears monads &lt;em&gt;are&lt;/em&gt; that &amp;quot;simple&amp;quot;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbxxxdq", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbxxxdq/", "num_reports": null, "stickied": false, "created": 1483478619.0, "author_flair_text": null, "created_utc": 1483449819.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbxd7gr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbx6lxp", "score": 2, "approved_by": null, "downs": 0, "body": "Do you know if C# or Java have some sort of way of doing an equivalent kind of thing to a `Functor`? Because a `Monad` while conceptually more complicated isn't really all that different in terms of difficulty of a language supporting it.\n\nA Monad is a type class with one operation (as well as a constraint that the type must already be an `Applicative` and a `Functor`):\n\n     (&gt;&gt;=) :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b\n\nI find it is simpler to explain with `join` instead of `&gt;&gt;=`, because you can make `&gt;&gt;=` out of `join` and `fmap`: `x &gt;&gt;= f = join $ fmap f x`, and you can make `join` out of `&gt;&gt;=` with `join x = x &gt;&gt;= id`.\n\n    join :: Monad m =&gt; m (m a) -&gt; m a\n\nSo you can think of a Monad as any Functor where you can convert a double nested monad into a single nested monad.\n\nExamples of this are `[[a]]` can be made into `[a]` by just concatenating all the sublists, `[[1, 2], [3, 4]] -&gt; [1, 2, 3, 4]`. `Maybe (Maybe a)` can be made into `a` by just converting `Just Nothing` and `Nothing` to  `Nothing`, and `Just (Just x)` to `Just x`. `IO (IO x)` can be converted to an `IO` by sequencing the events one after the other, with the outer event going first.\n\nNow all this doesn't really help build an intuition, but if you are more type / math minded it might be enough to understand what is going on.\n\nhttp://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html\n\nHere is what I found that best gave me an intuition for what. The analogues and pictures are IMO really good, even if they doesn't technical get the full picture. Once you have an intuition you just kind of have to think more about the types to fully understand all the uses of a Monad.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do you know if C# or Java have some sort of way of doing an equivalent kind of thing to a &lt;code&gt;Functor&lt;/code&gt;? Because a &lt;code&gt;Monad&lt;/code&gt; while conceptually more complicated isn&amp;#39;t really all that different in terms of difficulty of a language supporting it.&lt;/p&gt;\n\n&lt;p&gt;A Monad is a type class with one operation (as well as a constraint that the type must already be an &lt;code&gt;Applicative&lt;/code&gt; and a &lt;code&gt;Functor&lt;/code&gt;):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; (&amp;gt;&amp;gt;=) :: Monad m =&amp;gt; m a -&amp;gt; (a -&amp;gt; m b) -&amp;gt; m b\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I find it is simpler to explain with &lt;code&gt;join&lt;/code&gt; instead of &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;, because you can make &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; out of &lt;code&gt;join&lt;/code&gt; and &lt;code&gt;fmap&lt;/code&gt;: &lt;code&gt;x &amp;gt;&amp;gt;= f = join $ fmap f x&lt;/code&gt;, and you can make &lt;code&gt;join&lt;/code&gt; out of &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; with &lt;code&gt;join x = x &amp;gt;&amp;gt;= id&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;join :: Monad m =&amp;gt; m (m a) -&amp;gt; m a\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So you can think of a Monad as any Functor where you can convert a double nested monad into a single nested monad.&lt;/p&gt;\n\n&lt;p&gt;Examples of this are &lt;code&gt;[[a]]&lt;/code&gt; can be made into &lt;code&gt;[a]&lt;/code&gt; by just concatenating all the sublists, &lt;code&gt;[[1, 2], [3, 4]] -&amp;gt; [1, 2, 3, 4]&lt;/code&gt;. &lt;code&gt;Maybe (Maybe a)&lt;/code&gt; can be made into &lt;code&gt;a&lt;/code&gt; by just converting &lt;code&gt;Just Nothing&lt;/code&gt; and &lt;code&gt;Nothing&lt;/code&gt; to  &lt;code&gt;Nothing&lt;/code&gt;, and &lt;code&gt;Just (Just x)&lt;/code&gt; to &lt;code&gt;Just x&lt;/code&gt;. &lt;code&gt;IO (IO x)&lt;/code&gt; can be converted to an &lt;code&gt;IO&lt;/code&gt; by sequencing the events one after the other, with the outer event going first.&lt;/p&gt;\n\n&lt;p&gt;Now all this doesn&amp;#39;t really help build an intuition, but if you are more type / math minded it might be enough to understand what is going on.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html\"&gt;http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Here is what I found that best gave me an intuition for what. The analogues and pictures are IMO really good, even if they doesn&amp;#39;t technical get the full picture. Once you have an intuition you just kind of have to think more about the types to fully understand all the uses of a Monad.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbxd7gr", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbxd7gr/", "num_reports": null, "stickied": false, "created": 1483436702.0, "author_flair_text": null, "created_utc": 1483407902.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbx6lxp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "mnbvas", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbx4wu6", "score": 2, "approved_by": null, "downs": 0, "body": "Thanks for the `Functor` writeup, though luckily I'm past that - after dozens of tutorials, my understanding is that monads are a sort of containers with associated computation (a bit like a closure), which can easily be combined together.\n\nI doubt that is really that \"simple\", as it feels like I'm missing something really big.\n\n---\n\nThe problem with C# for me is the Microsoft stack (although it's sort of OSS now, and there are new IDEs coming up) and the necessity for an IDE.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for the &lt;code&gt;Functor&lt;/code&gt; writeup, though luckily I&amp;#39;m past that - after dozens of tutorials, my understanding is that monads are a sort of containers with associated computation (a bit like a closure), which can easily be combined together.&lt;/p&gt;\n\n&lt;p&gt;I doubt that is really that &amp;quot;simple&amp;quot;, as it feels like I&amp;#39;m missing something really big.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;The problem with C# for me is the Microsoft stack (although it&amp;#39;s sort of OSS now, and there are new IDEs coming up) and the necessity for an IDE.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbx6lxp", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbx6lxp/", "num_reports": null, "stickied": false, "created": 1483427981.0, "author_flair_text": null, "created_utc": 1483399181.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbx4wu6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbx4he2", "score": 2, "approved_by": null, "downs": 0, "body": "&gt; Pretty sure that's Eq a =&gt; a -&gt; a -&gt; Bool :P\n\nPssh, I like `dog == dog` to return a brand new dog, I have no idea what you are talking about. ^^^^fixed\n\nThe rest of the stuff is cool to know, thanks! As I may end up having to do C# or similar due to Haskell's lower industry usage. I know that a lot of OOP languages have been trying to do various kinds of things in order to obtain the functionality that is almost free in functional languages.\n\nMonads can be a little hard to grasp, but if you focus on just `Functor` then maybe you might know what C# has or has not done to obtain similar functionality.\n\n`Functor` is a type class with one function/operator of type `Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b`, where `f` is a type constructor (e.g `[]` which takes in an element type, or `(-&gt;) a` which takes in a return type) so it's simply a way to generically map over all objects where such a thing is possible (lists, maps, arrays, functions, optinals etc.)\n\nTwo example implementations of `fmap` are:\n\n    instance Functor [] where\n        fmap = map\n\n    map :: (a -&gt; b) -&gt; [a] -&gt; [b]\n    map f (x : xs) = f x : map f xs\n    map _ [] = []\n\n    instance Functor ((-&gt;) a) where\n        fmap = (.)\n\n    (.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; (a -&gt; c)\n    (f . g) x = f (g x)", "edited": 1483397221.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Pretty sure that&amp;#39;s Eq a =&amp;gt; a -&amp;gt; a -&amp;gt; Bool :P&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Pssh, I like &lt;code&gt;dog == dog&lt;/code&gt; to return a brand new dog, I have no idea what you are talking about. &lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;fixed&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/p&gt;\n\n&lt;p&gt;The rest of the stuff is cool to know, thanks! As I may end up having to do C# or similar due to Haskell&amp;#39;s lower industry usage. I know that a lot of OOP languages have been trying to do various kinds of things in order to obtain the functionality that is almost free in functional languages.&lt;/p&gt;\n\n&lt;p&gt;Monads can be a little hard to grasp, but if you focus on just &lt;code&gt;Functor&lt;/code&gt; then maybe you might know what C# has or has not done to obtain similar functionality.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Functor&lt;/code&gt; is a type class with one function/operator of type &lt;code&gt;Functor f =&amp;gt; (a -&amp;gt; b) -&amp;gt; f a -&amp;gt; f b&lt;/code&gt;, where &lt;code&gt;f&lt;/code&gt; is a type constructor (e.g &lt;code&gt;[]&lt;/code&gt; which takes in an element type, or &lt;code&gt;(-&amp;gt;) a&lt;/code&gt; which takes in a return type) so it&amp;#39;s simply a way to generically map over all objects where such a thing is possible (lists, maps, arrays, functions, optinals etc.)&lt;/p&gt;\n\n&lt;p&gt;Two example implementations of &lt;code&gt;fmap&lt;/code&gt; are:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;instance Functor [] where\n    fmap = map\n\nmap :: (a -&amp;gt; b) -&amp;gt; [a] -&amp;gt; [b]\nmap f (x : xs) = f x : map f xs\nmap _ [] = []\n\ninstance Functor ((-&amp;gt;) a) where\n    fmap = (.)\n\n(.) :: (b -&amp;gt; c) -&amp;gt; (a -&amp;gt; b) -&amp;gt; (a -&amp;gt; c)\n(f . g) x = f (g x)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbx4wu6", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbx4wu6/", "num_reports": null, "stickied": false, "created": 1483425708.0, "author_flair_text": null, "created_utc": 1483396908.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dc0ca53", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tarmen", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbx4he2", "score": 1, "approved_by": null, "downs": 0, "body": "Pretty sure for monads you would require higher kinded types, not sure if c# has those.\n\nExplanation for monads in case anyone is interested:  \nIn functional prorammng you use a function called map very often\n\n    map :: (a-&gt;b) -&gt; List a -&gt; List b\n    map (+1) [1, 2, 3] == [2, 3, 4]\n\ntake the items in a list and apply some function to each. You can abstract that to more than lists! Everything from trees, to possibly missing values to futures in async programming... \n\nSo it would be useful to give this concept a name so that we can abstract over it. In functional languages its called functor but I am gonna call it mappable. A mappable  data structure f means that we can take some value `f a` and apply a function `a -&gt; b` so that we get`f b`.  \n\nWe can use that to abstract over all sorts of stuff, even nullable types. Say we have some possibly failed computation and get a value `Maybe a`. Instead of branching all the time to check for failure we can just map our functions and the plumbing is handled for us!\n\nLets use a more complicated example:\n\n    line = tryReadLine :: Maybe String\n    evenBetterLine = map (append \"000\")  line :: Maybe String\n    number = map tryParseNumber evenBetterLine :: Maybe (Maybe Int)\n\nOh noes, we can't add 1 to our number because we now have nested maybes. Is our mappable type doomed?  \nNo, because we can just flatten our maybes. `join :: Maybe (Maybe Int) -&gt; Maybe Int` or more generally `join :: f (f a) -&gt; f a`  \nThen we can do things like\n\n    number = join (map tryParseNumber tryReadLine) :: Maybe Int\n\nwhich is kind of verbose. What if we just defined an alias for this pattern?\n\n    bind f m = join (map f m)\n\nNow we can use bind to combine functions of type `a -&gt; m b`!\n\n    number = bind tryParseNumber tryReadLine :: Maybe Int\n\nwhich can be transitioned into c#'s async await syntax. Write bind as operator:\n     \n    tryReadLine &gt;&gt;= tryParseNumber\n\nadd unnecessary variable:\n\n    tryReadLine &gt;&gt;= \\line -&gt; tryParseNumber line\n\nsyntax sugar:\n\n        line = await tryReadLine\n        return (tryParseNumber line)\n\nAnd that is all a monad is, a way to combine functions of type `a -&gt; m b` while abstracting the m away! It is exactly the same as `await` in c# but with a generic m instead of futures.", "edited": 1483575539.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Pretty sure for monads you would require higher kinded types, not sure if c# has those.&lt;/p&gt;\n\n&lt;p&gt;Explanation for monads in case anyone is interested:&lt;br/&gt;\nIn functional prorammng you use a function called map very often&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;map :: (a-&amp;gt;b) -&amp;gt; List a -&amp;gt; List b\nmap (+1) [1, 2, 3] == [2, 3, 4]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;take the items in a list and apply some function to each. You can abstract that to more than lists! Everything from trees, to possibly missing values to futures in async programming... &lt;/p&gt;\n\n&lt;p&gt;So it would be useful to give this concept a name so that we can abstract over it. In functional languages its called functor but I am gonna call it mappable. A mappable  data structure f means that we can take some value &lt;code&gt;f a&lt;/code&gt; and apply a function &lt;code&gt;a -&amp;gt; b&lt;/code&gt; so that we get&lt;code&gt;f b&lt;/code&gt;.  &lt;/p&gt;\n\n&lt;p&gt;We can use that to abstract over all sorts of stuff, even nullable types. Say we have some possibly failed computation and get a value &lt;code&gt;Maybe a&lt;/code&gt;. Instead of branching all the time to check for failure we can just map our functions and the plumbing is handled for us!&lt;/p&gt;\n\n&lt;p&gt;Lets use a more complicated example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;line = tryReadLine :: Maybe String\nevenBetterLine = map (append &amp;quot;000&amp;quot;)  line :: Maybe String\nnumber = map tryParseNumber evenBetterLine :: Maybe (Maybe Int)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Oh noes, we can&amp;#39;t add 1 to our number because we now have nested maybes. Is our mappable type doomed?&lt;br/&gt;\nNo, because we can just flatten our maybes. &lt;code&gt;join :: Maybe (Maybe Int) -&amp;gt; Maybe Int&lt;/code&gt; or more generally &lt;code&gt;join :: f (f a) -&amp;gt; f a&lt;/code&gt;&lt;br/&gt;\nThen we can do things like&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;number = join (map tryParseNumber tryReadLine) :: Maybe Int\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which is kind of verbose. What if we just defined an alias for this pattern?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;bind f m = join (map f m)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now we can use bind to combine functions of type &lt;code&gt;a -&amp;gt; m b&lt;/code&gt;!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;number = bind tryParseNumber tryReadLine :: Maybe Int\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which can be transitioned into c#&amp;#39;s async await syntax. Write bind as operator:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;tryReadLine &amp;gt;&amp;gt;= tryParseNumber\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;add unnecessary variable:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;tryReadLine &amp;gt;&amp;gt;= \\line -&amp;gt; tryParseNumber line\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;syntax sugar:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    line = await tryReadLine\n    return (tryParseNumber line)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And that is all a monad is, a way to combine functions of type &lt;code&gt;a -&amp;gt; m b&lt;/code&gt; while abstracting the m away! It is exactly the same as &lt;code&gt;await&lt;/code&gt; in c# but with a generic m instead of futures.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dc0ca53", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dc0ca53/", "num_reports": null, "stickied": false, "created": 1483602284.0, "author_flair_text": null, "created_utc": 1483573484.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbx4he2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "mnbvas", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbx3eo5", "score": 3, "approved_by": null, "downs": 0, "body": "&gt; `==` in haskell has type `Eq a =&gt; a -&gt; a -&gt; a`\n\nPretty sure that's `Eq a =&gt; a -&gt; a -&gt; Bool` :P\n\n---\n\nMany things you mentioned are actually doable with C#'s generics (which aren't as neutered as Java's), albeit much less expressively.\n\n[`IEquatable&lt;T&gt;`](https://msdn.microsoft.com/en-us/library/ms131187(v=vs.110\\).aspx) is basically `Eq a`.\n\nNot sure about the Monad friends, I have yet to break the Monad barrier.\n\n`someFunc :: (Eq a, SomeClass a) =&gt; a -&gt; Bool` could be\n\n    bool SomeFunc&lt;T&gt;(T x) where T : IEquatable&lt;T&gt;, ISome&lt;T&gt; { }\n\n---\n\nThough in the end C# gets really ugly when doing these kinds of functional stuff.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;&lt;code&gt;==&lt;/code&gt; in haskell has type &lt;code&gt;Eq a =&amp;gt; a -&amp;gt; a -&amp;gt; a&lt;/code&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Pretty sure that&amp;#39;s &lt;code&gt;Eq a =&amp;gt; a -&amp;gt; a -&amp;gt; Bool&lt;/code&gt; :P&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Many things you mentioned are actually doable with C#&amp;#39;s generics (which aren&amp;#39;t as neutered as Java&amp;#39;s), albeit much less expressively.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://msdn.microsoft.com/en-us/library/ms131187(v=vs.110).aspx\"&gt;&lt;code&gt;IEquatable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; is basically &lt;code&gt;Eq a&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Not sure about the Monad friends, I have yet to break the Monad barrier.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;someFunc :: (Eq a, SomeClass a) =&amp;gt; a -&amp;gt; Bool&lt;/code&gt; could be&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;bool SomeFunc&amp;lt;T&amp;gt;(T x) where T : IEquatable&amp;lt;T&amp;gt;, ISome&amp;lt;T&amp;gt; { }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Though in the end C# gets really ugly when doing these kinds of functional stuff.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbx4he2", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbx4he2/", "num_reports": null, "stickied": false, "created": 1483425133.0, "author_flair_text": null, "created_utc": 1483396333.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbx3eo5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwizqd", "score": 3, "approved_by": null, "downs": 0, "body": "On a side note type classes are pretty dope, they are basically interfaces but way better in pretty much every way.\n\nThey compile to faster code: better type erasure due to lack of things like `.equals` being able to take in any `Object` where you have to use `instanceof`.\n\nThey allow for more expressive and complex functions: `==` in haskell has type `Eq a =&gt; a -&gt; a -&gt; Bool` whereas the equivalent `.equals` in Java has effective type `a -&gt; b -&gt; Bool` which stops things like `Cat cat = new Cat(); cat.equals(new Dog())` from being type errors when they definitely should be, as the types mean that the answer is always going to be False, which basically means it's useless code.\n\nA better example of the above might be `+` which has type `Num a =&gt; a -&gt; a -&gt; a` whereas without type classes it would have to have effective type `Num a =&gt; a -&gt; b -&gt; a`, but if `b != a` you basically have to throw an exception. At least with `==` you get `False` which isn't wrong, just a bit useless.\n\nYou also get the awesomeness that is parametricity, which you couldn't practically have with normal interfaces as then you can't use `instanceof` so you cannot implement `.equals`.\n\nAlso type classes are decoupled from the data type itself. So if you later create a new type class that you think all your types and your libraries types should use, then you can implement it just fine for all those types without editing any of the libraries. With interfaces you cannot do such a thing.\n\nAlso things like `Functor`, `Applicative`, `Monad`, `Foldable` etc. don't really work with interfaces, because you specify them for a type constructor instead of just a type.\n\nTaking in a value that implements multiple type classes (but is still generic among all objects that implement both those type classes) is easy. You just do something like `(Eq a, Num a) =&gt; a`, whereas it is a huge pain with interfaces.\n\nThere is still way more advantages than that, and few to no disadvantages, see [here](http://stackoverflow.com/a/8123973/1513295).", "edited": 1483396772.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;On a side note type classes are pretty dope, they are basically interfaces but way better in pretty much every way.&lt;/p&gt;\n\n&lt;p&gt;They compile to faster code: better type erasure due to lack of things like &lt;code&gt;.equals&lt;/code&gt; being able to take in any &lt;code&gt;Object&lt;/code&gt; where you have to use &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;They allow for more expressive and complex functions: &lt;code&gt;==&lt;/code&gt; in haskell has type &lt;code&gt;Eq a =&amp;gt; a -&amp;gt; a -&amp;gt; Bool&lt;/code&gt; whereas the equivalent &lt;code&gt;.equals&lt;/code&gt; in Java has effective type &lt;code&gt;a -&amp;gt; b -&amp;gt; Bool&lt;/code&gt; which stops things like &lt;code&gt;Cat cat = new Cat(); cat.equals(new Dog())&lt;/code&gt; from being type errors when they definitely should be, as the types mean that the answer is always going to be False, which basically means it&amp;#39;s useless code.&lt;/p&gt;\n\n&lt;p&gt;A better example of the above might be &lt;code&gt;+&lt;/code&gt; which has type &lt;code&gt;Num a =&amp;gt; a -&amp;gt; a -&amp;gt; a&lt;/code&gt; whereas without type classes it would have to have effective type &lt;code&gt;Num a =&amp;gt; a -&amp;gt; b -&amp;gt; a&lt;/code&gt;, but if &lt;code&gt;b != a&lt;/code&gt; you basically have to throw an exception. At least with &lt;code&gt;==&lt;/code&gt; you get &lt;code&gt;False&lt;/code&gt; which isn&amp;#39;t wrong, just a bit useless.&lt;/p&gt;\n\n&lt;p&gt;You also get the awesomeness that is parametricity, which you couldn&amp;#39;t practically have with normal interfaces as then you can&amp;#39;t use &lt;code&gt;instanceof&lt;/code&gt; so you cannot implement &lt;code&gt;.equals&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Also type classes are decoupled from the data type itself. So if you later create a new type class that you think all your types and your libraries types should use, then you can implement it just fine for all those types without editing any of the libraries. With interfaces you cannot do such a thing.&lt;/p&gt;\n\n&lt;p&gt;Also things like &lt;code&gt;Functor&lt;/code&gt;, &lt;code&gt;Applicative&lt;/code&gt;, &lt;code&gt;Monad&lt;/code&gt;, &lt;code&gt;Foldable&lt;/code&gt; etc. don&amp;#39;t really work with interfaces, because you specify them for a type constructor instead of just a type.&lt;/p&gt;\n\n&lt;p&gt;Taking in a value that implements multiple type classes (but is still generic among all objects that implement both those type classes) is easy. You just do something like &lt;code&gt;(Eq a, Num a) =&amp;gt; a&lt;/code&gt;, whereas it is a huge pain with interfaces.&lt;/p&gt;\n\n&lt;p&gt;There is still way more advantages than that, and few to no disadvantages, see &lt;a href=\"http://stackoverflow.com/a/8123973/1513295\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbx3eo5", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbx3eo5/", "num_reports": null, "stickied": false, "created": 1483423728.0, "author_flair_text": null, "created_utc": 1483394928.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwizqd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "mnbvas", "can_mod_post": false, "send_replies": true, "parent_id": "t3_5lkr4f", "score": 181, "approved_by": null, "downs": 0, "body": "+1 for [trying](https://en.wikipedia.org/wiki/Type_class).", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;+1 for &lt;a href=\"https://en.wikipedia.org/wiki/Type_class\"&gt;trying&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwizqd", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwizqd/", "num_reports": null, "stickied": false, "created": 1483395335.0, "author_flair_text": null, "created_utc": 1483366535.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 15, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "dbwl9nc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "lolzfeminism", "can_mod_post": false, "send_replies": true, "parent_id": "t3_5lkr4f", "score": 15, "approved_by": null, "downs": 0, "body": "They have no state! ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;They have no state! &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwl9nc", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwl9nc/", "num_reports": null, "stickied": false, "created": 1483399831.0, "author_flair_text": null, "created_utc": 1483371031.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 16, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dbxucv4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "ryanplant-au", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwtgov", "score": 2, "approved_by": null, "downs": 0, "body": "[Marx was totally a Haskell lover.](https://en.wikipedia.org/wiki/Withering_away_of_the_state)", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Withering_away_of_the_state\"&gt;Marx was totally a Haskell lover.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbxucv4", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbxucv4/", "num_reports": null, "stickied": false, "created": 1483468660.0, "author_flair_text": null, "created_utc": 1483439860.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwtgov", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "qotob", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwqd9c", "score": 3, "approved_by": null, "downs": 0, "body": "+1 for Marx, the true FLOSS comrade.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;+1 for Marx, the true FLOSS comrade.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwtgov", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwtgov/", "num_reports": null, "stickied": false, "created": 1483411208.0, "author_flair_text": null, "created_utc": 1483382408.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwqd9c", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "nullmove", "can_mod_post": false, "send_replies": true, "parent_id": "t3_5lkr4f", "score": 16, "approved_by": null, "downs": 0, "body": "A spectre is haunting software industry :)", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A spectre is haunting software industry :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwqd9c", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwqd9c/", "num_reports": null, "stickied": false, "created": 1483407302.0, "author_flair_text": null, "created_utc": 1483378502.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 8, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "dbwr9x2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "zaphod0002", "can_mod_post": false, "send_replies": true, "parent_id": "t3_5lkr4f", "score": 8, "approved_by": null, "downs": 0, "body": "BECAUSE THEY LOVE INNER CLASSES\n\nthis is fun", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;BECAUSE THEY LOVE INNER CLASSES&lt;/p&gt;\n\n&lt;p&gt;this is fun&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwr9x2", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwr9x2/", "num_reports": null, "stickied": false, "created": 1483408500.0, "author_flair_text": null, "created_utc": 1483379700.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 11, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 26, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 27, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dby4ggm", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "hicklc01", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dby2zoy", "score": 1, "approved_by": null, "downs": 0, "body": "A cad is a man without class. C.A.D. is made with class. It's not ironic but moriset didn't help.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A cad is a man without class. C.A.D. is made with class. It&amp;#39;s not ironic but moriset didn&amp;#39;t help.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dby4ggm", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dby4ggm/", "num_reports": null, "stickied": false, "created": 1483489175.0, "author_flair_text": null, "created_utc": 1483460375.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dby2zoy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "hstde", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwznho", "score": 1, "approved_by": null, "downs": 0, "body": "and why is it ironic?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;and why is it ironic?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dby2zoy", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dby2zoy/", "num_reports": null, "stickied": false, "created": 1483487239.0, "author_flair_text": null, "created_utc": 1483458439.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwznho", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "hicklc01", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwxr45", "score": 2, "approved_by": null, "downs": 0, "body": "I didn't want to say ironic and couldn't think of a better word quickly", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I didn&amp;#39;t want to say ironic and couldn&amp;#39;t think of a better word quickly&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwznho", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwznho/", "num_reports": null, "stickied": false, "created": 1483418854.0, "author_flair_text": null, "created_utc": 1483390054.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwxr45", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Jaxkr", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwr1oe", "score": 5, "approved_by": null, "downs": 0, "body": "Why is that odd?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Why is that odd?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwxr45", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwxr45/", "num_reports": null, "stickied": false, "created": 1483416501.0, "author_flair_text": null, "created_utc": 1483387701.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dbwzpyw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "hicklc01", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbws9id", "score": 1, "approved_by": null, "downs": 0, "body": "Your right i had something i needed to attend to.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your right i had something i needed to attend to.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwzpyw", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwzpyw/", "num_reports": null, "stickied": false, "created": 1483418938.0, "author_flair_text": null, "created_utc": 1483390138.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbws9id", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "[deleted]", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwr1oe", "score": 1, "approved_by": null, "downs": 0, "body": "I always thought it was Computer Assisted Design. I guess they both work", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I always thought it was Computer Assisted Design. I guess they both work&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": false, "subreddit": "ProgrammerHumor", "name": "t1_dbws9id", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbws9id/", "num_reports": null, "stickied": false, "created": 1483409782.0, "author_flair_text": null, "created_utc": 1483380982.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwr1oe", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "hicklc01", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwmbii", "score": 3, "approved_by": null, "downs": 0, "body": "Odd that most computer aided design software is written in c++.\n\nhttp://www.dictionary.com/browse/cad", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Odd that most computer aided design software is written in c++.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.dictionary.com/browse/cad\"&gt;http://www.dictionary.com/browse/cad&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwr1oe", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwr1oe/", "num_reports": null, "stickied": false, "created": 1483408205.0, "author_flair_text": null, "created_utc": 1483379405.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwmbii", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "hstde", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwl08b", "score": 27, "approved_by": null, "downs": 0, "body": "Should have been \"C with class\" ... Hehe .. he .. heh", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Should have been &amp;quot;C with class&amp;quot; ... Hehe .. he .. heh&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwmbii", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwmbii/", "num_reports": null, "stickied": false, "created": 1483401581.0, "author_flair_text": null, "created_utc": 1483372781.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwl08b", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "DestinationVoid", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwksqx", "score": 26, "approved_by": null, "downs": 0, "body": "Fun fact: The initial version of *C++* was called \"*C with Classes*\"", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Fun fact: The initial version of &lt;em&gt;C++&lt;/em&gt; was called &amp;quot;&lt;em&gt;C with Classes&lt;/em&gt;&amp;quot;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwl08b", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwl08b/", "num_reports": null, "stickied": false, "created": 1483399381.0, "author_flair_text": null, "created_utc": 1483370581.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dbwzv0a", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "tanandblack", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbwksqx", "score": 1, "approved_by": null, "downs": 0, "body": "s/functional/C/g", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;s/functional/C/g&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwzv0a", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwzv0a/", "num_reports": null, "stickied": false, "created": 1483419110.0, "author_flair_text": null, "created_utc": 1483390310.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbwksqx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "eXeC64", "can_mod_post": false, "send_replies": true, "parent_id": "t3_5lkr4f", "score": 11, "approved_by": null, "downs": 0, "body": "s/functional/C/", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;s/functional/C/&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwksqx", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwksqx/", "num_reports": null, "stickied": false, "created": 1483399007.0, "author_flair_text": null, "created_utc": 1483370207.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "dbwt06k", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "arnedh", "can_mod_post": false, "send_replies": true, "parent_id": "t3_5lkr4f", "score": 5, "approved_by": null, "downs": 0, "body": "I feel the hate ...\n\nThe HATE for STATE", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I feel the hate ...&lt;/p&gt;\n\n&lt;p&gt;The HATE for STATE&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwt06k", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwt06k/", "num_reports": null, "stickied": false, "created": 1483410678.0, "author_flair_text": null, "created_utc": 1483381878.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 9, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "dbwtcnp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Cheekio", "can_mod_post": false, "send_replies": true, "parent_id": "t3_5lkr4f", "score": 9, "approved_by": null, "downs": 0, "body": "Same reason they're usually libertarians\n(they prefer to remain stateless)\n\nedit: yes, libertarianism in this joke can be replaced with anarchism, ancapitalism, primitivism, or any other babby's first political philosophy or social ordering construct.", "edited": 1483388864.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Same reason they&amp;#39;re usually libertarians\n(they prefer to remain stateless)&lt;/p&gt;\n\n&lt;p&gt;edit: yes, libertarianism in this joke can be replaced with anarchism, ancapitalism, primitivism, or any other babby&amp;#39;s first political philosophy or social ordering construct.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwtcnp", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwtcnp/", "num_reports": null, "stickied": false, "created": 1483411075.0, "author_flair_text": null, "created_utc": 1483382275.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dbwthan", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "guitaronin", "can_mod_post": false, "send_replies": true, "parent_id": "t3_5lkr4f", "score": 1, "approved_by": null, "downs": 0, "body": "mmm... /r/ProgrammerDadJokes", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;mmm... &lt;a href=\"/r/ProgrammerDadJokes\"&gt;/r/ProgrammerDadJokes&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwthan", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwthan/", "num_reports": null, "stickied": false, "created": 1483411228.0, "author_flair_text": null, "created_utc": 1483382428.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dbxok2u", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Guy1524", "can_mod_post": false, "send_replies": true, "parent_id": "t3_5lkr4f", "score": 1, "approved_by": null, "downs": 0, "body": "r/ProgrammerDadJokes ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"/r/ProgrammerDadJokes\"&gt;r/ProgrammerDadJokes&lt;/a&gt; &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbxok2u", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbxok2u/", "num_reports": null, "stickied": false, "created": 1483453294.0, "author_flair_text": null, "created_utc": 1483424494.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dbx7lqs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "mnbvas", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbx3r09", "score": 1, "approved_by": null, "downs": 0, "body": "On the topic of criticizing (hating) OOP, some thoughts on its popularity and pitfalls.\n\n---\n\nOne of the top reasons for OOP was physical simulation - even Stroustrup added it to C++ for that. It then went on to real object simulation and now simulates abstract virtual objects.\n\nThe main reason for OOP's apparent simplicity is the fact that most people seem understand the real world and how things and actors interact (cats and dogs are common in OOP examples). Thus it would seem people have an innate understanding of OOP, unlike procedural or declarative paradigms.\n\nHowever, it turns out proper OOP is really hard (SOLID, IoC, ...), actually mirroring the real world - who can actually understand what is really happening outside of highly reduced situations?\n\nFor an example, consider that legalese is actually not that far from code: a specific language with some common terms as included by default, others defined in the beginning; specifying some values based on other known values.  \nEvery day one can hear about some entity (ab)using an (un)intended legal loophole. How different is that from a bug or backdoor in code?  \nHumans have about 5000-6000 years of experience in law. Law still sucks, and OOP does too, as it draws many unsolved problems from the real world.\n\n---\n\nProcedural and declarative paradigms, on the other hand, focus more on the stuff that computers actually do - transform and shuffle data around, allowing, correct code.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;On the topic of criticizing (hating) OOP, some thoughts on its popularity and pitfalls.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;One of the top reasons for OOP was physical simulation - even Stroustrup added it to C++ for that. It then went on to real object simulation and now simulates abstract virtual objects.&lt;/p&gt;\n\n&lt;p&gt;The main reason for OOP&amp;#39;s apparent simplicity is the fact that most people seem understand the real world and how things and actors interact (cats and dogs are common in OOP examples). Thus it would seem people have an innate understanding of OOP, unlike procedural or declarative paradigms.&lt;/p&gt;\n\n&lt;p&gt;However, it turns out proper OOP is really hard (SOLID, IoC, ...), actually mirroring the real world - who can actually understand what is really happening outside of highly reduced situations?&lt;/p&gt;\n\n&lt;p&gt;For an example, consider that legalese is actually not that far from code: a specific language with some common terms as included by default, others defined in the beginning; specifying some values based on other known values.&lt;br/&gt;\nEvery day one can hear about some entity (ab)using an (un)intended legal loophole. How different is that from a bug or backdoor in code?&lt;br/&gt;\nHumans have about 5000-6000 years of experience in law. Law still sucks, and OOP does too, as it draws many unsolved problems from the real world.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Procedural and declarative paradigms, on the other hand, focus more on the stuff that computers actually do - transform and shuffle data around, allowing, correct code.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbx7lqs", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbx7lqs/", "num_reports": null, "stickied": false, "created": 1483429298.0, "author_flair_text": null, "created_utc": 1483400498.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbx3r09", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dbx08cx", "score": 6, "approved_by": null, "downs": 0, "body": "Functional programming generally revolves around using lots of functions to manipulate data, with heavy use of things like recursion, immutability and higher order functions. As opposed to object oriented programming which generally revolves around having a bunch of objects that communicate with one another, and have lots of methods, usually with a lot more mutation.\n\nI personally prefer the functional approach by a huge margin, object oriented programming is IMO vastly overused and almost never the best way to model things. Even things where conceptually things are all objects (because most of the time they aren't, like I wouldn't conceptualize a web request as an object, it's just a bunch of data) like games, you still end up with much better paradigms such as entity component systems (which are much more functional than they are object oriented, as they are about functions that manipulate a large amount of primitive data, although they do often involve some mutation).", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Functional programming generally revolves around using lots of functions to manipulate data, with heavy use of things like recursion, immutability and higher order functions. As opposed to object oriented programming which generally revolves around having a bunch of objects that communicate with one another, and have lots of methods, usually with a lot more mutation.&lt;/p&gt;\n\n&lt;p&gt;I personally prefer the functional approach by a huge margin, object oriented programming is IMO vastly overused and almost never the best way to model things. Even things where conceptually things are all objects (because most of the time they aren&amp;#39;t, like I wouldn&amp;#39;t conceptualize a web request as an object, it&amp;#39;s just a bunch of data) like games, you still end up with much better paradigms such as entity component systems (which are much more functional than they are object oriented, as they are about functions that manipulate a large amount of primitive data, although they do often involve some mutation).&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbx3r09", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbx3r09/", "num_reports": null, "stickied": false, "created": 1483424180.0, "author_flair_text": null, "created_utc": 1483395380.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dbx08cx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "LWielkiewicz", "can_mod_post": false, "send_replies": true, "parent_id": "t3_5lkr4f", "score": 1, "approved_by": null, "downs": 0, "body": "What is a functional programmer? =o", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What is a functional programmer? =o&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbx08cx", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbx08cx/", "num_reports": null, "stickied": false, "created": 1483419564.0, "author_flair_text": null, "created_utc": 1483390764.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": -1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5lkr4f", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dbwy7bs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "955559", "can_mod_post": false, "send_replies": true, "parent_id": "t3_5lkr4f", "score": -1, "approved_by": null, "downs": 0, "body": "to return values?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;to return values?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dbwy7bs", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5lkr4f/why_do_functional_programmers_homeschool_their/dbwy7bs/", "num_reports": null, "stickied": false, "created": 1483417069.0, "author_flair_text": null, "created_utc": 1483388269.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}]