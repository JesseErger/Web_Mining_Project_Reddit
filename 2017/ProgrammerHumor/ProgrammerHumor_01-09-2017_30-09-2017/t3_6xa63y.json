[{"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": 1, "children": [{"kind": "t3", "data": {"is_crosspostable": false, "subreddit_id": "t5_2tex6", "approved_at_utc": null, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "thumbnail_width": 140, "subreddit": "ProgrammerHumor", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "mod_note": null, "user_reports": [], "secure_media": null, "is_reddit_media_domain": true, "saved": false, "id": "6xa63y", "banned_at_utc": null, "mod_reason_title": null, "view_count": null, "archived": true, "clicked": false, "no_follow": false, "author": "uicoap", "num_crossposts": 0, "link_flair_text": null, "can_mod_post": false, "send_replies": true, "pinned": false, "score": 34, "approved_by": null, "over_18": false, "domain": "i.redd.it", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/B3moplfdV1p-pPJyB8nUgYNWr8cdeV8GCaYEEDDeMB0.jpg?s=12bdc69693b2959032098b6eb8a0c17d", "width": 495, "height": 260}, "resolutions": [{"url": "https://i.redditmedia.com/B3moplfdV1p-pPJyB8nUgYNWr8cdeV8GCaYEEDDeMB0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=63d8f05e173a44569f2f2132ee4cfc58", "width": 108, "height": 56}, {"url": "https://i.redditmedia.com/B3moplfdV1p-pPJyB8nUgYNWr8cdeV8GCaYEEDDeMB0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=5408e9df5cff9895a141ce43ec38307d", "width": 216, "height": 113}, {"url": "https://i.redditmedia.com/B3moplfdV1p-pPJyB8nUgYNWr8cdeV8GCaYEEDDeMB0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=9bd53f71b16e7845d42258218a39c050", "width": 320, "height": 168}], "variants": {}, "id": "RB9qAqIDmg8ypMYwUu8cNS24fF9tdCSZtg5k4T3ksoU"}], "enabled": true}, "num_comments": 9, "thumbnail": "https://b.thumbs.redditmedia.com/gsy1P60jDGAK0HcVh3WhEvPafS5LREK943Lw5lNHgXw.jpg", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "contest_mode": false, "gilded": 0, "locked": false, "downs": 0, "brand_safe": true, "subreddit_subscribers": 483233, "secure_media_embed": {}, "media_embed": {}, "post_hint": "image", "stickied": false, "can_gild": false, "thumbnail_height": 73, "parent_whitelist_status": "all_ads", "name": "t3_6xa63y", "spoiler": false, "permalink": "/r/ProgrammerHumor/comments/6xa63y/rthe_best_programming_language/", "subreddit_type": "public", "whitelist_status": "all_ads", "report_reasons": null, "created": 1504245780.0, "url": "https://i.redd.it/12dd8h8ab5jz.jpg", "author_flair_text": null, "quarantine": false, "title": "R(The best \"programming language\")", "created_utc": 1504216980.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "distinguished": null, "media": null, "upvote_ratio": 0.73, "mod_reports": [], "is_self": false, "visited": false, "num_reports": null, "is_video": false, "ups": 34}}], "before": null}}, {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 36, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_6xa63y", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "dmejj2d", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "10BillionDreams", "can_mod_post": false, "send_replies": true, "parent_id": "t3_6xa63y", "score": 36, "approved_by": null, "downs": 0, "body": "I'd say the funniest thing here is that people still refuse the understand the absolute basics of type coercion, but really it's just sad.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d say the funniest thing here is that people still refuse the understand the absolute basics of type coercion, but really it&amp;#39;s just sad.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dmejj2d", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/6xa63y/rthe_best_programming_language/dmejj2d/", "num_reports": null, "stickied": false, "created": 1504255089.0, "author_flair_text": null, "created_utc": 1504226289.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_6xa63y", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_6xa63y", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_6xa63y", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dmf509s", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "wolki", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dmf2f4h", "score": 3, "approved_by": null, "downs": 0, "body": "&gt; Accessing array element by boolean doesn't even make sense.\n\nCorrect otherwise, but this is not quite true in R. Accessing a vector (i.e. array) by a logical (i.e. boolean) will return the value if the logical is `TRUE`. R will also repeat the pattern if necessary.\n\nWith logical vectors of length 1 it will return the whole vector if the logical is `TRUE` and an empty vector if it is false, which is marginally useful. With longer logicals it becomes really handy, for example `a[c(TRUE, FALSE)]` will return the first and then every other element of `a`, and `a[a&gt;5]` will return every element of `a` that's greater than 5.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Accessing array element by boolean doesn&amp;#39;t even make sense.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Correct otherwise, but this is not quite true in R. Accessing a vector (i.e. array) by a logical (i.e. boolean) will return the value if the logical is &lt;code&gt;TRUE&lt;/code&gt;. R will also repeat the pattern if necessary.&lt;/p&gt;\n\n&lt;p&gt;With logical vectors of length 1 it will return the whole vector if the logical is &lt;code&gt;TRUE&lt;/code&gt; and an empty vector if it is false, which is marginally useful. With longer logicals it becomes really handy, for example &lt;code&gt;a[c(TRUE, FALSE)]&lt;/code&gt; will return the first and then every other element of &lt;code&gt;a&lt;/code&gt;, and &lt;code&gt;a[a&amp;gt;5]&lt;/code&gt; will return every element of &lt;code&gt;a&lt;/code&gt; that&amp;#39;s greater than 5.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dmf509s", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/6xa63y/rthe_best_programming_language/dmf509s/", "num_reports": null, "stickied": false, "created": 1504295193.0, "author_flair_text": null, "created_utc": 1504266393.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_6xa63y", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dmf5834", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "schmytzi", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dmf2f4h", "score": 3, "approved_by": null, "downs": 0, "body": "&gt; Accessing array element by boolean doesn't even make sense.\n\nIn R, it actually does and it's very straightforward.\nLet's say you've got a vector `a = 1:6` (it contains all integers from 1 to 6 inclusive).\nYou have two possiblities of accessing them: pass a vector of the indices of the elements you want or pass a vector of boolean values which has the same length as `a`.\nIn the second case you will get the values at the indices which are true in the vector you passed.\n\nThe second thing which comes into play here is recycling.\nWhen the boolean vector  `b` is shorter than `a` but `a`'s length is divisible by `b`'s length, `b` gets repeated until it has the same length as `a`. E.g you can access all elements with an even index by evaluating `a[c(FALSE,TRUE)]`.\nBecause of recycling, `a[TRUE]` returns all elements of `a` while `a[5]` returns the fifth element.  ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Accessing array element by boolean doesn&amp;#39;t even make sense.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;In R, it actually does and it&amp;#39;s very straightforward.\nLet&amp;#39;s say you&amp;#39;ve got a vector &lt;code&gt;a = 1:6&lt;/code&gt; (it contains all integers from 1 to 6 inclusive).\nYou have two possiblities of accessing them: pass a vector of the indices of the elements you want or pass a vector of boolean values which has the same length as &lt;code&gt;a&lt;/code&gt;.\nIn the second case you will get the values at the indices which are true in the vector you passed.&lt;/p&gt;\n\n&lt;p&gt;The second thing which comes into play here is recycling.\nWhen the boolean vector  &lt;code&gt;b&lt;/code&gt; is shorter than &lt;code&gt;a&lt;/code&gt; but &lt;code&gt;a&lt;/code&gt;&amp;#39;s length is divisible by &lt;code&gt;b&lt;/code&gt;&amp;#39;s length, &lt;code&gt;b&lt;/code&gt; gets repeated until it has the same length as &lt;code&gt;a&lt;/code&gt;. E.g you can access all elements with an even index by evaluating &lt;code&gt;a[c(FALSE,TRUE)]&lt;/code&gt;.\nBecause of recycling, &lt;code&gt;a[TRUE]&lt;/code&gt; returns all elements of &lt;code&gt;a&lt;/code&gt; while &lt;code&gt;a[5]&lt;/code&gt; returns the fifth element.  &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dmf5834", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/6xa63y/rthe_best_programming_language/dmf5834/", "num_reports": null, "stickied": false, "created": 1504295609.0, "author_flair_text": null, "created_utc": 1504266809.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_6xa63y", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dmf2qwq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "PapaKlin", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dmf2f4h", "score": 1, "approved_by": null, "downs": 0, "body": "Seems legit, thank you!", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Seems legit, thank you!&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dmf2qwq", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/6xa63y/rthe_best_programming_language/dmf2qwq/", "num_reports": null, "stickied": false, "created": 1504290011.0, "author_flair_text": null, "created_utc": 1504261211.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_6xa63y", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_6xa63y", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_6xa63y", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "dmhxvob", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Mr2-1782Man", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dmfyr0l", "score": 1, "approved_by": null, "downs": 0, "body": "I was referring to something like C++, Javascript and C# are so diluted they're really not C based anymore. But I digress.\n\nIt isn't the equality that kills you it's the negation. For C a logical negation will turn a 0 to a 1 and any non-zero into a 0. So for example the result of !!5 would be 1. Which I admit would mean that for precisely two cases this wouldn't happen. The Javascript spec follows the C spec in that false &lt;==&gt; 0 and true &lt;==&gt; 1, C# won't. So you'll get the same effect in Javascript.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I was referring to something like C++, Javascript and C# are so diluted they&amp;#39;re really not C based anymore. But I digress.&lt;/p&gt;\n\n&lt;p&gt;It isn&amp;#39;t the equality that kills you it&amp;#39;s the negation. For C a logical negation will turn a 0 to a 1 and any non-zero into a 0. So for example the result of !!5 would be 1. Which I admit would mean that for precisely two cases this wouldn&amp;#39;t happen. The Javascript spec follows the C spec in that false &amp;lt;==&amp;gt; 0 and true &amp;lt;==&amp;gt; 1, C# won&amp;#39;t. So you&amp;#39;ll get the same effect in Javascript.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dmhxvob", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/6xa63y/rthe_best_programming_language/dmhxvob/", "num_reports": null, "stickied": false, "created": 1504445195.0, "author_flair_text": null, "created_utc": 1504416395.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dmfyr0l", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "ritajalilip", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dmfiiqd", "score": 1, "approved_by": null, "downs": 0, "body": "The same thing? Not quite.\n\nJavascript, for example, compares an int to true negatively (except 1 == true).\n\nC# doesn't even let you compare ints to booleans, or coerce them that way anyway.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The same thing? Not quite.&lt;/p&gt;\n\n&lt;p&gt;Javascript, for example, compares an int to true negatively (except 1 == true).&lt;/p&gt;\n\n&lt;p&gt;C# doesn&amp;#39;t even let you compare ints to booleans, or coerce them that way anyway.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dmfyr0l", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/6xa63y/rthe_best_programming_language/dmfyr0l/", "num_reports": null, "stickied": false, "created": 1504330474.0, "author_flair_text": null, "created_utc": 1504301674.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dmfiiqd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Mr2-1782Man", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dmf2f4h", "score": 1, "approved_by": null, "downs": 0, "body": "As a bonus a C based language would end up doing the same thing.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As a bonus a C based language would end up doing the same thing.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dmfiiqd", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/6xa63y/rthe_best_programming_language/dmfiiqd/", "num_reports": null, "stickied": false, "created": 1504312291.0, "author_flair_text": null, "created_utc": 1504283491.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dmf2f4h", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "ritajalilip", "can_mod_post": false, "send_replies": true, "parent_id": "t1_dmejafo", "score": 4, "approved_by": null, "downs": 0, "body": "Disclaimer: never used R.\n\n!!b == b compares b coerced to boolean (by !ing it two times), so it probably coerces the right hand side to boolean as well.\n\nAssuming b is 5, for example, and if R converts non-0 ints to true:\n\n    !!5 == 5 =&gt;\n    true == 5 =&gt;\n    true == true =&gt; true\n\nSomething similar happens comparing array elements, but only the left hand side has the coercion happening, so it's something like:\n\n     a[true] == a[5] =&gt; false\n\n  Accessing array element by boolean doesn't even make sense.\n\n\nSomeone please correct me if I'm in a wrong.\n\n", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Disclaimer: never used R.&lt;/p&gt;\n\n&lt;p&gt;!!b == b compares b coerced to boolean (by !ing it two times), so it probably coerces the right hand side to boolean as well.&lt;/p&gt;\n\n&lt;p&gt;Assuming b is 5, for example, and if R converts non-0 ints to true:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;!!5 == 5 =&amp;gt;\ntrue == 5 =&amp;gt;\ntrue == true =&amp;gt; true\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Something similar happens comparing array elements, but only the left hand side has the coercion happening, so it&amp;#39;s something like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; a[true] == a[5] =&amp;gt; false\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Accessing array element by boolean doesn&amp;#39;t even make sense.&lt;/p&gt;\n\n&lt;p&gt;Someone please correct me if I&amp;#39;m in a wrong.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dmf2f4h", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/6xa63y/rthe_best_programming_language/dmf2f4h/", "num_reports": null, "stickied": false, "created": 1504289153.0, "author_flair_text": null, "created_utc": 1504260353.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "dmejafo", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "PapaKlin", "can_mod_post": false, "send_replies": true, "parent_id": "t3_6xa63y", "score": 4, "approved_by": null, "downs": 0, "body": "How?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_dmejafo", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/6xa63y/rthe_best_programming_language/dmejafo/", "num_reports": null, "stickied": false, "created": 1504254789.0, "author_flair_text": null, "created_utc": 1504225989.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}]