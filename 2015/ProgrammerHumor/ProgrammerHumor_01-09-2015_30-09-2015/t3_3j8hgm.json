[{"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": 1, "children": [{"kind": "t3", "data": {"is_crosspostable": false, "subreddit_id": "t5_2tex6", "approved_at_utc": null, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "thumbnail_width": 140, "subreddit": "ProgrammerHumor", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "mod_note": null, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "saved": false, "id": "3j8hgm", "banned_at_utc": null, "mod_reason_title": null, "view_count": null, "archived": true, "clicked": false, "no_follow": false, "author": "borick", "num_crossposts": 0, "link_flair_text": null, "can_mod_post": false, "send_replies": true, "pinned": false, "score": 152, "approved_by": null, "over_18": false, "domain": "cubedrone.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/nbZL9iLU39CYgnpL7PYMiqhqEx4n_DgqBCbbma-2AxM.jpg?s=383d2d43974323b6871194a0a1201c46", "width": 750, "height": 871}, "resolutions": [{"url": "https://i.redditmedia.com/nbZL9iLU39CYgnpL7PYMiqhqEx4n_DgqBCbbma-2AxM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=69f52d4de7aed5699c4a1b8b77f56315", "width": 108, "height": 125}, {"url": "https://i.redditmedia.com/nbZL9iLU39CYgnpL7PYMiqhqEx4n_DgqBCbbma-2AxM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=031c6c38bd510bab2776fb6d27fa6c38", "width": 216, "height": 250}, {"url": "https://i.redditmedia.com/nbZL9iLU39CYgnpL7PYMiqhqEx4n_DgqBCbbma-2AxM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=bfbc57b14654e094bc61cc3aacd4ce3f", "width": 320, "height": 371}, {"url": "https://i.redditmedia.com/nbZL9iLU39CYgnpL7PYMiqhqEx4n_DgqBCbbma-2AxM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=d9fcd5a861333a8ab9571469f51e5331", "width": 640, "height": 743}], "variants": {}, "id": "vHpHEDVJaHkR1a7HfcaywbZcdJuJn9Yil8soZQskJSY"}], "enabled": false}, "num_comments": 43, "thumbnail": "https://b.thumbs.redditmedia.com/5_iISuuS7p7JIjnjeuIV_FMNYdSZ5iB8zJEQnSygvLk.jpg", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "contest_mode": false, "gilded": 0, "locked": false, "downs": 0, "brand_safe": true, "subreddit_subscribers": 483233, "secure_media_embed": {}, "media_embed": {}, "post_hint": "link", "stickied": false, "can_gild": false, "thumbnail_height": 140, "parent_whitelist_status": "all_ads", "name": "t3_3j8hgm", "spoiler": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/", "subreddit_type": "public", "whitelist_status": "all_ads", "report_reasons": null, "created": 1441153107.0, "url": "http://cubedrone.com/comics/c/the-singleton-fairy", "author_flair_text": null, "quarantine": false, "title": "The singleton fairy!", "created_utc": 1441124307.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "distinguished": null, "media": null, "upvote_ratio": 0.88, "mod_reports": [], "is_self": false, "visited": false, "num_reports": null, "is_video": false, "ups": 152}}], "before": null}}, {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 11, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "cuool26", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "lolredditftw", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cuo6ndh", "score": 2, "approved_by": null, "downs": 0, "body": "Yea. I think when they say \"testing\" they mean \"unit testing.\"  But I've noticed a lot of developers think that way. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yea. I think when they say &amp;quot;testing&amp;quot; they mean &amp;quot;unit testing.&amp;quot;  But I&amp;#39;ve noticed a lot of developers think that way. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuool26", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuool26/", "num_reports": null, "stickied": false, "created": 1441263395.0, "author_flair_text": null, "created_utc": 1441234595.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cuo6ndh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Liver_and_Yumnions", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cunkanq", "score": 3, "approved_by": null, "downs": 0, "body": "I agree 100%.\n\nThis comic is talking about Dependency Injection.  The one and only use for Dependency Injection is being able to swap out ClassA for ClassB without altering the code in any way.  ClassA might need to talk to a database or an API.  In the test environment, it may be impossible to connect to those resources. There may be no \"Test\" version of the API that runs on a test server.  Hence ClassB is written by a test developer.  ClassB basically fakes a call the API.  Now you can test the entire system with the fake classes.  Dependency Injection systems I have seen allow you to change the classes by changing an application config.  That way you do not have to alter the developers code.\n\nThe tradition singleton pattern serves an instance of a concrete class via a static property.  This makes Dependency Injection hard.\n\nNot all automated testing relies upon Dependency Injection.  Here, we have complete environments with test instances of everything.  The test instances have snapshots of production data from the night before.  Hence, rather than talking to some dummy fake class, code that is being test talks to real, live data that acts and responds the same way it does in production.  I much prefer this.  \n\nI am glad I don't have to develop my code to work with production data and poorly written test classes.\n\nAlso, I am not defending singletons.  Inversion of Control is very important, but you do not have to use Dependency Injection to accomplish it.  I write SOLID code all day long without touching one of these IoC containers.  Anyway I dislike singletons for other reasons.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I agree 100%.&lt;/p&gt;\n\n&lt;p&gt;This comic is talking about Dependency Injection.  The one and only use for Dependency Injection is being able to swap out ClassA for ClassB without altering the code in any way.  ClassA might need to talk to a database or an API.  In the test environment, it may be impossible to connect to those resources. There may be no &amp;quot;Test&amp;quot; version of the API that runs on a test server.  Hence ClassB is written by a test developer.  ClassB basically fakes a call the API.  Now you can test the entire system with the fake classes.  Dependency Injection systems I have seen allow you to change the classes by changing an application config.  That way you do not have to alter the developers code.&lt;/p&gt;\n\n&lt;p&gt;The tradition singleton pattern serves an instance of a concrete class via a static property.  This makes Dependency Injection hard.&lt;/p&gt;\n\n&lt;p&gt;Not all automated testing relies upon Dependency Injection.  Here, we have complete environments with test instances of everything.  The test instances have snapshots of production data from the night before.  Hence, rather than talking to some dummy fake class, code that is being test talks to real, live data that acts and responds the same way it does in production.  I much prefer this.  &lt;/p&gt;\n\n&lt;p&gt;I am glad I don&amp;#39;t have to develop my code to work with production data and poorly written test classes.&lt;/p&gt;\n\n&lt;p&gt;Also, I am not defending singletons.  Inversion of Control is very important, but you do not have to use Dependency Injection to accomplish it.  I write SOLID code all day long without touching one of these IoC containers.  Anyway I dislike singletons for other reasons.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuo6ndh", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuo6ndh/", "num_reports": null, "stickied": false, "created": 1441235052.0, "author_flair_text": null, "created_utc": 1441206252.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cunkanq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "lolredditftw", "can_mod_post": false, "send_replies": true, "parent_id": "t3_3j8hgm", "score": 11, "approved_by": null, "downs": 0, "body": "IME, untestable code comes from a lack of a test plan. Not any one anti pattern. You end up with a dozen things keeping you from doing any automated testing and so you never do any. You could fix all of the problems, but you don't have time to refactor it. \n\nI like the comic though. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;IME, untestable code comes from a lack of a test plan. Not any one anti pattern. You end up with a dozen things keeping you from doing any automated testing and so you never do any. You could fix all of the problems, but you don&amp;#39;t have time to refactor it. &lt;/p&gt;\n\n&lt;p&gt;I like the comic though. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cunkanq", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cunkanq/", "num_reports": null, "stickied": false, "created": 1441177853.0, "author_flair_text": null, "created_utc": 1441149053.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 8, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 13, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "cunvtq4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "novacrazy", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cunkwhd", "score": 1, "approved_by": null, "downs": 0, "body": "I've been using Dreamhost's integrated Cloudflare support for a couple months now and it's been pretty great. It modifies your DNS entries to route through Cloudflare, then you can tweak caching and stuff from your Cloudflare account. Even gives you pretty graphs and some useful plugins.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been using Dreamhost&amp;#39;s integrated Cloudflare support for a couple months now and it&amp;#39;s been pretty great. It modifies your DNS entries to route through Cloudflare, then you can tweak caching and stuff from your Cloudflare account. Even gives you pretty graphs and some useful plugins.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cunvtq4", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cunvtq4/", "num_reports": null, "stickied": false, "created": 1441201794.0, "author_flair_text": null, "created_utc": 1441172994.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cunkwhd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "cube-drone", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cunk3zn", "score": 4, "approved_by": null, "downs": 0, "body": "That does sound pretty irritating. \n\nI'm going to elevate CDN-hosting images on my site's to-do list. DreamHost is not... very good. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That does sound pretty irritating. &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m going to elevate CDN-hosting images on my site&amp;#39;s to-do list. DreamHost is not... very good. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cunkwhd", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cunkwhd/", "num_reports": null, "stickied": false, "created": 1441179233.0, "author_flair_text": null, "created_utc": 1441150433.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cunk3zn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "m_0g", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cuneket", "score": 3, "approved_by": null, "downs": 0, "body": "It's primarily the comic image, though the rest of the page seemed slower than I would have expected the first time I tried loading it. I'm near Toronto.  It's fine now on my laptop.\n\nI am honestly a little sorry about that, but I was a bit annoyed after waiting literally two minutes to finish seeing the comic.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s primarily the comic image, though the rest of the page seemed slower than I would have expected the first time I tried loading it. I&amp;#39;m near Toronto.  It&amp;#39;s fine now on my laptop.&lt;/p&gt;\n\n&lt;p&gt;I am honestly a little sorry about that, but I was a bit annoyed after waiting literally two minutes to finish seeing the comic.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cunk3zn", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cunk3zn/", "num_reports": null, "stickied": false, "created": 1441177511.0, "author_flair_text": null, "created_utc": 1441148711.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "cuu9ds5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "dzh", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cuu91yy", "score": 1, "approved_by": null, "downs": 0, "body": "I understand your frustration, but that is technically solvable with infinite scroll or bunch of other techniques.\n\n30 megs these days is not a crazy number either.\n\nActually this inability to glance comics is the reason I leave all comic sites after about 5-7 clicks.\n\n", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I understand your frustration, but that is technically solvable with infinite scroll or bunch of other techniques.&lt;/p&gt;\n\n&lt;p&gt;30 megs these days is not a crazy number either.&lt;/p&gt;\n\n&lt;p&gt;Actually this inability to glance comics is the reason I leave all comic sites after about 5-7 clicks.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuu9ds5", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuu9ds5/", "num_reports": null, "stickied": false, "created": 1441731704.0, "author_flair_text": null, "created_utc": 1441702904.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cuu91yy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "cube-drone", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cuu8nb0", "score": 1, "approved_by": null, "downs": 0, "body": "Am I doing... Not having a gallery? To increase ad revenue? \n\nNo, I simply don't have a gallery because I've never seen a good comic website with a gallery. Writing a thumbnailer takes time, I don't see the value, and I'm not certain that I want to deliver all 30 megabytes of my comic to a user's desktop at once.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Am I doing... Not having a gallery? To increase ad revenue? &lt;/p&gt;\n\n&lt;p&gt;No, I simply don&amp;#39;t have a gallery because I&amp;#39;ve never seen a good comic website with a gallery. Writing a thumbnailer takes time, I don&amp;#39;t see the value, and I&amp;#39;m not certain that I want to deliver all 30 megabytes of my comic to a user&amp;#39;s desktop at once.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuu91yy", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuu91yy/", "num_reports": null, "stickied": false, "created": 1441730251.0, "author_flair_text": null, "created_utc": 1441701451.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cuu8nb0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "dzh", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cuu4lxz", "score": 1, "approved_by": null, "downs": 0, "body": "It would help desktop users :)\n\nBut seriously, are you doing this to increase ad revenue?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It would help desktop users :)&lt;/p&gt;\n\n&lt;p&gt;But seriously, are you doing this to increase ad revenue?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuu8nb0", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuu8nb0/", "num_reports": null, "stickied": false, "created": 1441728519.0, "author_flair_text": null, "created_utc": 1441699719.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cuu4lxz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "cube-drone", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cuu4a6a", "score": 1, "approved_by": null, "downs": 0, "body": "Gallery? How would having dozens of images help mobile users? ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Gallery? How would having dozens of images help mobile users? &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuu4lxz", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuu4lxz/", "num_reports": null, "stickied": false, "created": 1441715452.0, "author_flair_text": null, "created_utc": 1441686652.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cuu4a6a", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "dzh", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cuneket", "score": 1, "approved_by": null, "downs": 0, "body": "No zoom on mobile either. Also no gallery. You are basically begging to be scraped by an aggregate!", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No zoom on mobile either. Also no gallery. You are basically begging to be scraped by an aggregate!&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuu4a6a", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuu4a6a/", "num_reports": null, "stickied": false, "created": 1441714709.0, "author_flair_text": null, "created_utc": 1441685909.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cuneket", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "cube-drone", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cun7i5i", "score": 13, "approved_by": null, "downs": 0, "body": "That's bad. \n\nIs it the page itself that's taking forever, or the comic image? Are you on the east coast or in Europe? I'm guessing it might be an issue with the image content, because I'm getting a 30ms response from the webserver, but the images are taking hundreds of milliseconds each. (The images are on Dreamhost in California and I haven't considered CDN coverage yet, although I could look into it)\n\n**edit**: also you had to prefix \"humorous\" with \"moderately\" just so people don't think you like it _that_ much. ENJOY YOUR SLOW COMICS INTERNET STRANGER", "edited": 1441142126.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s bad. &lt;/p&gt;\n\n&lt;p&gt;Is it the page itself that&amp;#39;s taking forever, or the comic image? Are you on the east coast or in Europe? I&amp;#39;m guessing it might be an issue with the image content, because I&amp;#39;m getting a 30ms response from the webserver, but the images are taking hundreds of milliseconds each. (The images are on Dreamhost in California and I haven&amp;#39;t considered CDN coverage yet, although I could look into it)&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;edit&lt;/strong&gt;: also you had to prefix &amp;quot;humorous&amp;quot; with &amp;quot;moderately&amp;quot; just so people don&amp;#39;t think you like it &lt;em&gt;that&lt;/em&gt; much. ENJOY YOUR SLOW COMICS INTERNET STRANGER&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuneket", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuneket/", "num_reports": null, "stickied": false, "created": 1441168268.0, "author_flair_text": null, "created_utc": 1441139468.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cun7i5i", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "m_0g", "can_mod_post": false, "send_replies": true, "parent_id": "t3_3j8hgm", "score": 8, "approved_by": null, "downs": 0, "body": "Holy crap, these comics might be moderately humorous, but that page is taking for ever to load on my phone, even when its connected to WiFi...", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Holy crap, these comics might be moderately humorous, but that page is taking for ever to load on my phone, even when its connected to WiFi...&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cun7i5i", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cun7i5i/", "num_reports": null, "stickied": false, "created": 1441157583.0, "author_flair_text": null, "created_utc": 1441128783.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 8, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 32, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "cunomga", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "kurashu89", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cunhmab", "score": 6, "approved_by": null, "downs": 0, "body": "Logging. You want a single instance of a logger and everything shoves data into it. That's not to say *it* can't have sub loggers that it dispatches to. But everything goes through this one interface to shove data in.\n\nThat's also not to say that it shouldn't be dependency injected either. When you're running your tests and you get to `TestSiteExplodesWithBobbyTables` , you don't want to have every developer alerted that it hit the fan.\n\nSettings is another example. Maybe you want a single source of truth for your entire application's settings. Nothing's going to be written to it (except upon creation), but data will be pulled out. Again, obviously dependency inject it so you can test your system under different settings.\n\nThe thing with singletons is they're fantastic when they're either data sinks or data fonts, but not both. And as with any external thing, they should be provided in the constructor.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Logging. You want a single instance of a logger and everything shoves data into it. That&amp;#39;s not to say &lt;em&gt;it&lt;/em&gt; can&amp;#39;t have sub loggers that it dispatches to. But everything goes through this one interface to shove data in.&lt;/p&gt;\n\n&lt;p&gt;That&amp;#39;s also not to say that it shouldn&amp;#39;t be dependency injected either. When you&amp;#39;re running your tests and you get to &lt;code&gt;TestSiteExplodesWithBobbyTables&lt;/code&gt; , you don&amp;#39;t want to have every developer alerted that it hit the fan.&lt;/p&gt;\n\n&lt;p&gt;Settings is another example. Maybe you want a single source of truth for your entire application&amp;#39;s settings. Nothing&amp;#39;s going to be written to it (except upon creation), but data will be pulled out. Again, obviously dependency inject it so you can test your system under different settings.&lt;/p&gt;\n\n&lt;p&gt;The thing with singletons is they&amp;#39;re fantastic when they&amp;#39;re either data sinks or data fonts, but not both. And as with any external thing, they should be provided in the constructor.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cunomga", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cunomga/", "num_reports": null, "stickied": false, "created": 1441186709.0, "author_flair_text": null, "created_utc": 1441157909.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "cunjrvu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "borick", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cuniwxc", "score": 3, "approved_by": null, "downs": 0, "body": "Thank you! I just feel like proxy pattern has more moving parts, just seems more complicated! Singleton is just if var == null, define it :) So simple. \n\nIt doesn't have to be a global or method, it can be a shared object reference? Maybe that's bad. Not sure. :O\n\nDI (dependency injection?) also seems a bit dangerous, it might not keep one instance without also using a singleton!\n\nOf course, there's other options. Perhaps Proxy pattern is more maintainable. \n\nWhy one instance? Good question. Hard to answer that, in answering it, leads me to other possible patterns, Controller Pattern, or use a message queue/Producer/Consumer pattern. You seem to have a point there.\n\nI'll have to chew on this, thanks again.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank you! I just feel like proxy pattern has more moving parts, just seems more complicated! Singleton is just if var == null, define it :) So simple. &lt;/p&gt;\n\n&lt;p&gt;It doesn&amp;#39;t have to be a global or method, it can be a shared object reference? Maybe that&amp;#39;s bad. Not sure. :O&lt;/p&gt;\n\n&lt;p&gt;DI (dependency injection?) also seems a bit dangerous, it might not keep one instance without also using a singleton!&lt;/p&gt;\n\n&lt;p&gt;Of course, there&amp;#39;s other options. Perhaps Proxy pattern is more maintainable. &lt;/p&gt;\n\n&lt;p&gt;Why one instance? Good question. Hard to answer that, in answering it, leads me to other possible patterns, Controller Pattern, or use a message queue/Producer/Consumer pattern. You seem to have a point there.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ll have to chew on this, thanks again.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cunjrvu", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cunjrvu/", "num_reports": null, "stickied": false, "created": 1441176791.0, "author_flair_text": null, "created_utc": 1441147991.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "cunpr77", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "dnew", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cuniwxc", "score": 2, "approved_by": null, "downs": 0, "body": "&gt; Why not use DI?\n\nDI isn't contradictory with a singleton pattern. Indeed, it's built into Guice (for example) with the Singleton scope. The fact it's a singleton doesn't keep you from having multiple references to it or make you store those references in a global.\n\nIf you mock the singleton during testing, you're replacing it with a different singleton. That doesn't make the new thing not a singleton either? :-)\n\n&gt; When would that be the case?\n\nHere's an example: we have some documents to process. Users mark them as needing processing. We want to process them one at a time. What's the instance that keeps track of which document is being processed, the thread being used to do the processing, etc?\n\nOr an example from below, where there's a single-person game and there's a singleton to keep track of player state.", "edited": 1441160290.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Why not use DI?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;DI isn&amp;#39;t contradictory with a singleton pattern. Indeed, it&amp;#39;s built into Guice (for example) with the Singleton scope. The fact it&amp;#39;s a singleton doesn&amp;#39;t keep you from having multiple references to it or make you store those references in a global.&lt;/p&gt;\n\n&lt;p&gt;If you mock the singleton during testing, you&amp;#39;re replacing it with a different singleton. That doesn&amp;#39;t make the new thing not a singleton either? :-)&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;When would that be the case?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Here&amp;#39;s an example: we have some documents to process. Users mark them as needing processing. We want to process them one at a time. What&amp;#39;s the instance that keeps track of which document is being processed, the thread being used to do the processing, etc?&lt;/p&gt;\n\n&lt;p&gt;Or an example from below, where there&amp;#39;s a single-person game and there&amp;#39;s a singleton to keep track of player state.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cunpr77", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cunpr77/", "num_reports": null, "stickied": false, "created": 1441188761.0, "author_flair_text": null, "created_utc": 1441159961.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cuniwxc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "aerosole", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cunhpl2", "score": 1, "approved_by": null, "downs": 0, "body": "Thank you! I hope you don't mind if I comment on these points:\n\n* Assuming these objects access the singleton through a global variable or method, this seems like it would be a bad use for the pattern. Why not use DI? That way I don't have hidden dependencies and I can mock the singleton during testing. An if I need lazy initialization I can use a Proxy.\n* When would that be the case? Just create a single instance and use it. Why limit it artificially? Even the classic example of 'only one database' seems unreasonable. Why *not* two databases? It's not inconceivable. I already need a second one for writing my tests.\n* I personally never encountered a situation, where the cost of unnecessarily creating a single object once during the lifetime of the application was much of a performance hit. And if I would, I would use a proxy. It does not come with any of the drawbacks of a singleton.\n\nTo me Singleton screams bad maintainability, tight coupling, and difficult testing. In every single situation I encountered personally or was described to me up to now, the non-singleton solution seemed cleaner. \n\nBut like you said, it may be subjective. Different developers value different things and there are a lot of domains I am not familiar with. I'm always interested in different viewpoints, so thank you again!", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank you! I hope you don&amp;#39;t mind if I comment on these points:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Assuming these objects access the singleton through a global variable or method, this seems like it would be a bad use for the pattern. Why not use DI? That way I don&amp;#39;t have hidden dependencies and I can mock the singleton during testing. An if I need lazy initialization I can use a Proxy.&lt;/li&gt;\n&lt;li&gt;When would that be the case? Just create a single instance and use it. Why limit it artificially? Even the classic example of &amp;#39;only one database&amp;#39; seems unreasonable. Why &lt;em&gt;not&lt;/em&gt; two databases? It&amp;#39;s not inconceivable. I already need a second one for writing my tests.&lt;/li&gt;\n&lt;li&gt;I personally never encountered a situation, where the cost of unnecessarily creating a single object once during the lifetime of the application was much of a performance hit. And if I would, I would use a proxy. It does not come with any of the drawbacks of a singleton.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;To me Singleton screams bad maintainability, tight coupling, and difficult testing. In every single situation I encountered personally or was described to me up to now, the non-singleton solution seemed cleaner. &lt;/p&gt;\n\n&lt;p&gt;But like you said, it may be subjective. Different developers value different things and there are a lot of domains I am not familiar with. I&amp;#39;m always interested in different viewpoints, so thank you again!&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuniwxc", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuniwxc/", "num_reports": null, "stickied": false, "created": 1441175129.0, "author_flair_text": null, "created_utc": 1441146329.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cunhpl2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "borick", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cunhmab", "score": 3, "approved_by": null, "downs": 0, "body": "what comes to mind is lazy initialization of a shared variable\n\n- you want an object to be shared across multiple other objects\n- you want to ensure there's only one copy of the object\n- you don't want to have to initialize the object right away in case it doesn't end up being used at all, or for other performance reasons\n\nThat just screams singleton to me. Now of course, there's other ways to solve this too. Maybe better ways. But that's a bit subjective, singleton works!", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;what comes to mind is lazy initialization of a shared variable&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;you want an object to be shared across multiple other objects&lt;/li&gt;\n&lt;li&gt;you want to ensure there&amp;#39;s only one copy of the object&lt;/li&gt;\n&lt;li&gt;you don&amp;#39;t want to have to initialize the object right away in case it doesn&amp;#39;t end up being used at all, or for other performance reasons&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;That just screams singleton to me. Now of course, there&amp;#39;s other ways to solve this too. Maybe better ways. But that&amp;#39;s a bit subjective, singleton works!&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cunhpl2", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cunhpl2/", "num_reports": null, "stickied": false, "created": 1441173147.0, "author_flair_text": null, "created_utc": 1441144347.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "cuoi5l8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "brandjon", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cunhmab", "score": 1, "approved_by": null, "downs": 0, "body": "In Python, `None` (analogous to null and nil in other languages) is a singleton. It is the sole instance of `NoneType`, which can be verified by typing into the repl\n\n    None is type(None)()\n\nInternally, Python 3.4 has a `NameConstant` AST node to distinguish the keyword identifiers \"None\", \"True\", and \"False\" from other non-reserved identifiers. The developers named the field of this node \"singleton\".\n\nI've used singleton recently when defining an algorithm that works on a lattice of values. Mathematically speaking, a lattice is defined to have two special values that we call \"Top\" and \"Bottom\". I had a class for each different kind of value in the lattice, including a class for Top and a class for Bottom. I didn't want there to be multiple tops or bottoms, so I made them singletons. The upside is you can always use the python `is` operator (identity, not mere equality) to test for singleton values, which is more idiomatic.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In Python, &lt;code&gt;None&lt;/code&gt; (analogous to null and nil in other languages) is a singleton. It is the sole instance of &lt;code&gt;NoneType&lt;/code&gt;, which can be verified by typing into the repl&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;None is type(None)()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Internally, Python 3.4 has a &lt;code&gt;NameConstant&lt;/code&gt; AST node to distinguish the keyword identifiers &amp;quot;None&amp;quot;, &amp;quot;True&amp;quot;, and &amp;quot;False&amp;quot; from other non-reserved identifiers. The developers named the field of this node &amp;quot;singleton&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve used singleton recently when defining an algorithm that works on a lattice of values. Mathematically speaking, a lattice is defined to have two special values that we call &amp;quot;Top&amp;quot; and &amp;quot;Bottom&amp;quot;. I had a class for each different kind of value in the lattice, including a class for Top and a class for Bottom. I didn&amp;#39;t want there to be multiple tops or bottoms, so I made them singletons. The upside is you can always use the python &lt;code&gt;is&lt;/code&gt; operator (identity, not mere equality) to test for singleton values, which is more idiomatic.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuoi5l8", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuoi5l8/", "num_reports": null, "stickied": false, "created": 1441252863.0, "author_flair_text": null, "created_utc": 1441224063.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "cuse0xs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "thesmithdynasty", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cunhmab", "score": 1, "approved_by": null, "downs": 0, "body": "I like to have a logging class for debug / testing, often it's useful to only have one instance of the logger for your entire program to use.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I like to have a logging class for debug / testing, often it&amp;#39;s useful to only have one instance of the logger for your entire program to use.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuse0xs", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuse0xs/", "num_reports": null, "stickied": false, "created": 1441568713.0, "author_flair_text": null, "created_utc": 1441539913.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cunhmab", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "aerosole", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cune7mw", "score": 1, "approved_by": null, "downs": 0, "body": "Could you give a concrete example for appropriate Singleton use? I honestly can't think of one (not trolling).", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Could you give a concrete example for appropriate Singleton use? I honestly can&amp;#39;t think of one (not trolling).&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cunhmab", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cunhmab/", "num_reports": null, "stickied": false, "created": 1441173003.0, "author_flair_text": null, "created_utc": 1441144203.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cune7mw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "borick", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cun7fxh", "score": 4, "approved_by": null, "downs": 0, "body": "Exactly, I'm with you - It's great when used appropriately. I feel I've used it for time to time for exactly the reason it's for - you want to just guarantee one thing exists! And so I was confused about the negative perspective from the author on use of the singleton pattern, surely it has it's uses in the right cases! Thanks for your explanation.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Exactly, I&amp;#39;m with you - It&amp;#39;s great when used appropriately. I feel I&amp;#39;ve used it for time to time for exactly the reason it&amp;#39;s for - you want to just guarantee one thing exists! And so I was confused about the negative perspective from the author on use of the singleton pattern, surely it has it&amp;#39;s uses in the right cases! Thanks for your explanation.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cune7mw", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cune7mw/", "num_reports": null, "stickied": false, "created": 1441167734.0, "author_flair_text": null, "created_utc": 1441138934.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "cuo8hcg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "b1ackcat", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cuo88j1", "score": 1, "approved_by": null, "downs": 0, "body": "Again, it depends on what you need that bit of code to be doing. \n[Here](http://javarevisited.blogspot.com/2013/03/difference-between-singleton-pattern-vs-static-class-java.html) is a great write-up on the differences between static vs. singleton and when it's better to apply which approach. \n\nWhat it boils down to is if you need the more OOP type design, or if your class needs to carry state, use a singleton. If all you need is a collection of methods, use static.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Again, it depends on what you need that bit of code to be doing. \n&lt;a href=\"http://javarevisited.blogspot.com/2013/03/difference-between-singleton-pattern-vs-static-class-java.html\"&gt;Here&lt;/a&gt; is a great write-up on the differences between static vs. singleton and when it&amp;#39;s better to apply which approach. &lt;/p&gt;\n\n&lt;p&gt;What it boils down to is if you need the more OOP type design, or if your class needs to carry state, use a singleton. If all you need is a collection of methods, use static.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuo8hcg", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuo8hcg/", "num_reports": null, "stickied": false, "created": 1441237970.0, "author_flair_text": null, "created_utc": 1441209170.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "cuydjtc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "nonarkitten", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cuordr1", "score": 1, "approved_by": null, "downs": 0, "body": "Static classes exist in C# (a c-like language) to resolve the Catch-22 created by making everything a class. It has been shown that the singleton in C# can create a race condition if two threads try to instantiate it at the same time. In this language, I would say stay far away from the singleton pattern and stick with static (or sealed) classes. If you really-really need a \"reference\" to a static class in C# you can use the typeof operator; this could allow you to pass in a choice of static classes to another function or method in the same way you would a singleton.\n\n    // contrived example\n    Type myFileLogger = typeof(StaticFileLoggerClass);\n    Type mySyslogLogger = typeof(StaticSyslogLoggerClass);\n\n    public Log(Type staticLoggerClass, String myText) {\n        // should use a delegate here instead for performance\n        t.GetMethod(\"WriteLine\").Invoke(myText);\n    }", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Static classes exist in C# (a c-like language) to resolve the Catch-22 created by making everything a class. It has been shown that the singleton in C# can create a race condition if two threads try to instantiate it at the same time. In this language, I would say stay far away from the singleton pattern and stick with static (or sealed) classes. If you really-really need a &amp;quot;reference&amp;quot; to a static class in C# you can use the typeof operator; this could allow you to pass in a choice of static classes to another function or method in the same way you would a singleton.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// contrived example\nType myFileLogger = typeof(StaticFileLoggerClass);\nType mySyslogLogger = typeof(StaticSyslogLoggerClass);\n\npublic Log(Type staticLoggerClass, String myText) {\n    // should use a delegate here instead for performance\n    t.GetMethod(&amp;quot;WriteLine&amp;quot;).Invoke(myText);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuydjtc", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuydjtc/", "num_reports": null, "stickied": false, "created": 1442035933.0, "author_flair_text": null, "created_utc": 1442007133.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cuordr1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "ByteOutOfLife", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cuo88j1", "score": 1, "approved_by": null, "downs": 0, "body": "You can't declare a class static. Try it. Doesn't work in any c-like language that I know of. Maybe it works in something.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can&amp;#39;t declare a class static. Try it. Doesn&amp;#39;t work in any c-like language that I know of. Maybe it works in something.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuordr1", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuordr1/", "num_reports": null, "stickied": false, "created": 1441268626.0, "author_flair_text": null, "created_utc": 1441239826.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cuo88j1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Wibbles", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cuo1fbt", "score": 1, "approved_by": null, "downs": 0, "body": "But if there's only one instance of the class, why can't you declare it static and have all it's members static too? Then you don't need to pass it around, you just need to call the static members don't you?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;But if there&amp;#39;s only one instance of the class, why can&amp;#39;t you declare it static and have all it&amp;#39;s members static too? Then you don&amp;#39;t need to pass it around, you just need to call the static members don&amp;#39;t you?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuo88j1", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuo88j1/", "num_reports": null, "stickied": false, "created": 1441237594.0, "author_flair_text": null, "created_utc": 1441208794.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cuo1fbt", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "b1ackcat", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cuo15e8", "score": 2, "approved_by": null, "downs": 0, "body": "Static classes are for when you need to encapsulate a set of functions into a group, but it doesn't make logical sense to have an \"instance\" of that grouping. For example, Math libraries in various languages are typically statically defined. Having an instance of \"math\" doesn't make much sense, but if you have a Math class you'd probably expect sin, cos, tan, etc. functions to all be grouped under Math.&lt;whatever&gt;. \n\nOne of the benefits of singletons over static classes is that they *can* be instantiated and passed around to other methods as parameters. You can't do that with static classes.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Static classes are for when you need to encapsulate a set of functions into a group, but it doesn&amp;#39;t make logical sense to have an &amp;quot;instance&amp;quot; of that grouping. For example, Math libraries in various languages are typically statically defined. Having an instance of &amp;quot;math&amp;quot; doesn&amp;#39;t make much sense, but if you have a Math class you&amp;#39;d probably expect sin, cos, tan, etc. functions to all be grouped under Math.&amp;lt;whatever&amp;gt;. &lt;/p&gt;\n\n&lt;p&gt;One of the benefits of singletons over static classes is that they &lt;em&gt;can&lt;/em&gt; be instantiated and passed around to other methods as parameters. You can&amp;#39;t do that with static classes.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuo1fbt", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuo1fbt/", "num_reports": null, "stickied": false, "created": 1441224097.0, "author_flair_text": null, "created_utc": 1441195297.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cuo15e8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Wibbles", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cun7fxh", "score": 1, "approved_by": null, "downs": 0, "body": "If you could, why would you not create a static class?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you could, why would you not create a static class?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuo15e8", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuo15e8/", "num_reports": null, "stickied": false, "created": 1441223269.0, "author_flair_text": null, "created_utc": 1441194469.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "cuoqxio", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "ByteOutOfLife", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cun7fxh", "score": 1, "approved_by": null, "downs": 0, "body": "You can't make static classes. If you could make static classes they would be singletons. The \"singleton pattern\" could be any number of ways to create a single instance of a class. I use the method of putting a static member of ClassFoo in ClassFoo and having a function return a pointer to it. Also hide the constructer, ctor, dtor, ect (make them private). Anyway the point is there are loads of times you want to write a class for doing some thing instead of being a factory of objects that do things. I use singletons for graphics managers, input managers,  lots of managers. When your program needs to do a thing without creating lots of other things, use a singleton.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can&amp;#39;t make static classes. If you could make static classes they would be singletons. The &amp;quot;singleton pattern&amp;quot; could be any number of ways to create a single instance of a class. I use the method of putting a static member of ClassFoo in ClassFoo and having a function return a pointer to it. Also hide the constructer, ctor, dtor, ect (make them private). Anyway the point is there are loads of times you want to write a class for doing some thing instead of being a factory of objects that do things. I use singletons for graphics managers, input managers,  lots of managers. When your program needs to do a thing without creating lots of other things, use a singleton.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuoqxio", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuoqxio/", "num_reports": null, "stickied": false, "created": 1441267786.0, "author_flair_text": null, "created_utc": 1441238986.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cun7fxh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "b1ackcat", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cun4i98", "score": 32, "approved_by": null, "downs": 0, "body": "The singleton pattern is designed to code up a class in such a way that there is guaranteed to always only ever be ONE INSTANCE of it in memory. This can sometimes be useful for when you know you'll only need a single copy of something across your application, but don't want/can't make that class static. \n\nMany feel that singleton is an anti-pattern because it's somewhat easy to abuse, and can be used at times where it might not be appropriate, the end-result being code that's harder to test and maintain. \n\nIn my personal opinion, the singleton pattern is great when used appropriately, but figuring out WHEN it's appropriate can be somewhat tricky.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The singleton pattern is designed to code up a class in such a way that there is guaranteed to always only ever be ONE INSTANCE of it in memory. This can sometimes be useful for when you know you&amp;#39;ll only need a single copy of something across your application, but don&amp;#39;t want/can&amp;#39;t make that class static. &lt;/p&gt;\n\n&lt;p&gt;Many feel that singleton is an anti-pattern because it&amp;#39;s somewhat easy to abuse, and can be used at times where it might not be appropriate, the end-result being code that&amp;#39;s harder to test and maintain. &lt;/p&gt;\n\n&lt;p&gt;In my personal opinion, the singleton pattern is great when used appropriately, but figuring out WHEN it&amp;#39;s appropriate can be somewhat tricky.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cun7fxh", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cun7fxh/", "num_reports": null, "stickied": false, "created": 1441157491.0, "author_flair_text": null, "created_utc": 1441128691.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "cunpuc7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "dnew", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cunf91r", "score": 1, "approved_by": null, "downs": 0, "body": "You should distinguish between having a singleton instance of something, and having a single global reference to that instance. The former is quite handy sometimes, when that's the semantics of the thing you have the reference to. The latter is what's problematic, especially in the case where you can't replace that reference (because it's a compile-time constant, like a static class in Java, say).", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You should distinguish between having a singleton instance of something, and having a single global reference to that instance. The former is quite handy sometimes, when that&amp;#39;s the semantics of the thing you have the reference to. The latter is what&amp;#39;s problematic, especially in the case where you can&amp;#39;t replace that reference (because it&amp;#39;s a compile-time constant, like a static class in Java, say).&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cunpuc7", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cunpuc7/", "num_reports": null, "stickied": false, "created": 1441188920.0, "author_flair_text": null, "created_utc": 1441160120.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cunf91r", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "borick", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cuner5m", "score": 1, "approved_by": null, "downs": 0, "body": "After thinking about it though, I realized there's a number of cases where using a singleton might prevent some kind of scaffolding or additional automated testing. Maybe?\n\nBecause he doesn't say \"your code is garbage\" rather it's \"untestable.\"\n\nInteresting, great to think about this. I wish I had more opportunities for actual software design at my current job. Instead I'm knee-deep in legacy, security, crap. :O", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;After thinking about it though, I realized there&amp;#39;s a number of cases where using a singleton might prevent some kind of scaffolding or additional automated testing. Maybe?&lt;/p&gt;\n\n&lt;p&gt;Because he doesn&amp;#39;t say &amp;quot;your code is garbage&amp;quot; rather it&amp;#39;s &amp;quot;untestable.&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;Interesting, great to think about this. I wish I had more opportunities for actual software design at my current job. Instead I&amp;#39;m knee-deep in legacy, security, crap. :O&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cunf91r", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cunf91r/", "num_reports": null, "stickied": false, "created": 1441169300.0, "author_flair_text": null, "created_utc": 1441140500.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cuner5m", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "cube-drone", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cun4i98", "score": 3, "approved_by": null, "downs": 0, "body": "The global state inherent in singletons has a tendency to massively complicate testing. \n\nThis isn't to say that singletons aren't useful, or that they aren't the right solution in **some** situations, but nobody's going to laugh at a comic whose punchline is \"IF YOU'RE NOT CAREFUL WITH THIS SOFTWARE CONSTRUCTION TECHNIQUE YOU MIGHT HAVE TROUBLE WITH TESTING DOWN THE ROAD\" so instead we get this. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The global state inherent in singletons has a tendency to massively complicate testing. &lt;/p&gt;\n\n&lt;p&gt;This isn&amp;#39;t to say that singletons aren&amp;#39;t useful, or that they aren&amp;#39;t the right solution in &lt;strong&gt;some&lt;/strong&gt; situations, but nobody&amp;#39;s going to laugh at a comic whose punchline is &amp;quot;IF YOU&amp;#39;RE NOT CAREFUL WITH THIS SOFTWARE CONSTRUCTION TECHNIQUE YOU MIGHT HAVE TROUBLE WITH TESTING DOWN THE ROAD&amp;quot; so instead we get this. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuner5m", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuner5m/", "num_reports": null, "stickied": false, "created": 1441168551.0, "author_flair_text": null, "created_utc": 1441139751.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "cune9gx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "borick", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cun7a71", "score": 2, "approved_by": null, "downs": 0, "body": "This is great, thank you - I wasn't aware of these negative outlooks on the pattern, very useful :)", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is great, thank you - I wasn&amp;#39;t aware of these negative outlooks on the pattern, very useful :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cune9gx", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cune9gx/", "num_reports": null, "stickied": false, "created": 1441167812.0, "author_flair_text": null, "created_utc": 1441139012.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cun7a71", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "bashedice", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cun4i98", "score": 6, "approved_by": null, "downs": 0, "body": "The Singleton Pattern is/was a common pattern which was used when you only needed one object of a class for the entire program.\n\nIMO it is generally bad practice but often still used. \nThis sums it up quite nicely:\nhttp://stackoverflow.com/a/138012", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The Singleton Pattern is/was a common pattern which was used when you only needed one object of a class for the entire program.&lt;/p&gt;\n\n&lt;p&gt;IMO it is generally bad practice but often still used. \nThis sums it up quite nicely:\n&lt;a href=\"http://stackoverflow.com/a/138012\"&gt;http://stackoverflow.com/a/138012&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cun7a71", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cun7a71/", "num_reports": null, "stickied": false, "created": 1441157251.0, "author_flair_text": null, "created_utc": 1441128451.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 7, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "cun5i4g", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "HelperBot_", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cun5hrf", "score": 7, "approved_by": null, "downs": 0, "body": "Non-Mobile link: https://en.wikipedia.org/wiki/Singleton_pattern\n***\n^HelperBot_\u2122 ^v1.0 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^12011", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Non-Mobile link: &lt;a href=\"https://en.wikipedia.org/wiki/Singleton_pattern\"&gt;https://en.wikipedia.org/wiki/Singleton_pattern&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;sup&gt;HelperBot_\u2122&lt;/sup&gt; &lt;sup&gt;v1.0&lt;/sup&gt; &lt;sup&gt;&lt;a href=\"/r/HelperBot_\"&gt;/r/HelperBot_&lt;/a&gt;&lt;/sup&gt; &lt;sup&gt;I&lt;/sup&gt; &lt;sup&gt;am&lt;/sup&gt; &lt;sup&gt;a&lt;/sup&gt; &lt;sup&gt;bot.&lt;/sup&gt; &lt;sup&gt;Please&lt;/sup&gt; &lt;sup&gt;message&lt;/sup&gt; &lt;sup&gt;&lt;a href=\"/u/swim1929\"&gt;/u/swim1929&lt;/a&gt;&lt;/sup&gt; &lt;sup&gt;with&lt;/sup&gt; &lt;sup&gt;any&lt;/sup&gt; &lt;sup&gt;feedback&lt;/sup&gt; &lt;sup&gt;and/or&lt;/sup&gt; &lt;sup&gt;hate.&lt;/sup&gt; &lt;sup&gt;Counter:&lt;/sup&gt; &lt;sup&gt;12011&lt;/sup&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cun5i4g", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cun5i4g/", "num_reports": null, "stickied": false, "created": 1441154619.0, "author_flair_text": null, "created_utc": 1441125819.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 0, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "cuneb44", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "borick", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cun5hrf", "score": 0, "approved_by": null, "downs": 0, "body": "thanks, however the wiki page doesn't have anything like \"criticisms of it's use\" which I was looking for. The stackoverflow article posted by bashedice above is a great explanation of why you may not want to use the pattern in certain cases.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;thanks, however the wiki page doesn&amp;#39;t have anything like &amp;quot;criticisms of it&amp;#39;s use&amp;quot; which I was looking for. The stackoverflow article posted by bashedice above is a great explanation of why you may not want to use the pattern in certain cases.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cuneb44", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cuneb44/", "num_reports": null, "stickied": false, "created": 1441167882.0, "author_flair_text": null, "created_utc": 1441139082.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cun5hrf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "ddonuts4", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cun4i98", "score": 2, "approved_by": null, "downs": 0, "body": "https://en.m.wikipedia.org/wiki/Singleton_pattern (?)", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://en.m.wikipedia.org/wiki/Singleton_pattern\"&gt;https://en.m.wikipedia.org/wiki/Singleton_pattern&lt;/a&gt; (?)&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cun5hrf", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cun5hrf/", "num_reports": null, "stickied": false, "created": 1441154603.0, "author_flair_text": null, "created_utc": 1441125803.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 1, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cun4i98", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "borick", "can_mod_post": false, "send_replies": true, "parent_id": "t3_3j8hgm", "score": 8, "approved_by": null, "downs": 0, "body": "can anyone explain this comic to me? thanks :)", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;can anyone explain this comic to me? thanks :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cun4i98", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cun4i98/", "num_reports": null, "stickied": false, "created": 1441153119.0, "author_flair_text": null, "created_utc": 1441124319.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "cunpx19", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "dnew", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cunog0d", "score": 4, "approved_by": null, "downs": 0, "body": "Having a singleton representing the person playing your single-user game is entirely appropriate.\n\nWhat you *might* want to avoid is having no way of replacing that singleton with a different singleton. Don't make your singleton a static class (i.e., not \"Math\"). Make it one instance of an instantiated class. Then you can instantiate something that inherits from that class to override routines you want to (for example) fail while testing.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Having a singleton representing the person playing your single-user game is entirely appropriate.&lt;/p&gt;\n\n&lt;p&gt;What you &lt;em&gt;might&lt;/em&gt; want to avoid is having no way of replacing that singleton with a different singleton. Don&amp;#39;t make your singleton a static class (i.e., not &amp;quot;Math&amp;quot;). Make it one instance of an instantiated class. Then you can instantiate something that inherits from that class to override routines you want to (for example) fail while testing.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cunpx19", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cunpx19/", "num_reports": null, "stickied": false, "created": 1441189051.0, "author_flair_text": null, "created_utc": 1441160251.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cunog0d", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "NotADamsel", "can_mod_post": false, "send_replies": true, "parent_id": "t1_cund4nv", "score": 3, "approved_by": null, "downs": 0, "body": "I am a newbie (&lt;6mo experience) and I'm using a singleton in the game that I'm making to keep track of player stuff, because both the class I took (U of Helsinki MOOC) and Effective Java advocate for it. How would I go about changing it, if you don't mind helping me figure this out? ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am a newbie (&amp;lt;6mo experience) and I&amp;#39;m using a singleton in the game that I&amp;#39;m making to keep track of player stuff, because both the class I took (U of Helsinki MOOC) and Effective Java advocate for it. How would I go about changing it, if you don&amp;#39;t mind helping me figure this out? &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cunog0d", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cunog0d/", "num_reports": null, "stickied": false, "created": 1441186394.0, "author_flair_text": null, "created_utc": 1441157594.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "cund4nv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "[deleted]", "can_mod_post": false, "send_replies": true, "parent_id": "t3_3j8hgm", "score": 3, "approved_by": null, "downs": 0, "body": "[deleted]", "edited": 1466178103.0, "author_flair_css_class": null, "collapsed": true, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cund4nv", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cund4nv/", "num_reports": null, "stickied": false, "created": 1441166097.0, "author_flair_text": null, "created_utc": 1441137297.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "cunv5rx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "herazot", "can_mod_post": false, "send_replies": true, "parent_id": "t3_3j8hgm", "score": 1, "approved_by": null, "downs": 0, "body": "Not to be confused with its sibling, the Immutable Singleton fairy, who mostly creates platonic solids outside of space and time.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not to be confused with its sibling, the Immutable Singleton fairy, who mostly creates platonic solids outside of space and time.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cunv5rx", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cunv5rx/", "num_reports": null, "stickied": false, "created": 1441199871.0, "author_flair_text": null, "created_utc": 1441171071.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_3j8hgm", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "cunxj2s", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "donbrownmon", "can_mod_post": false, "send_replies": true, "parent_id": "t3_3j8hgm", "score": 1, "approved_by": null, "downs": 0, "body": "403 Forbidden", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;403 Forbidden&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_cunxj2s", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/3j8hgm/the_singleton_fairy/cunxj2s/", "num_reports": null, "stickied": false, "created": 1441207875.0, "author_flair_text": null, "created_utc": 1441179075.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}]