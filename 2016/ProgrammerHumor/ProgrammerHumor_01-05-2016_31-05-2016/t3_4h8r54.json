[{"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": 1, "children": [{"kind": "t3", "data": {"is_crosspostable": false, "subreddit_id": "t5_2tex6", "approved_at_utc": null, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "thumbnail_width": 140, "subreddit": "ProgrammerHumor", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "mod_note": null, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "saved": false, "id": "4h8r54", "banned_at_utc": null, "mod_reason_title": null, "view_count": null, "archived": true, "clicked": false, "no_follow": false, "author": "Ginden", "num_crossposts": 0, "link_flair_text": null, "can_mod_post": false, "send_replies": true, "pinned": false, "score": 2598, "approved_by": null, "over_18": false, "domain": "imgur.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/Oy_v278RTQHD04USWgsr5dpoPeNOgPwHQ3K6pTiQM-Y.jpg?s=d6b7b38386b5ed82784d38c081357074", "width": 494, "height": 640}, "resolutions": [{"url": "https://i.redditmedia.com/Oy_v278RTQHD04USWgsr5dpoPeNOgPwHQ3K6pTiQM-Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=8d7c9d846f48bf1d1a3bfa8288576fd9", "width": 108, "height": 139}, {"url": "https://i.redditmedia.com/Oy_v278RTQHD04USWgsr5dpoPeNOgPwHQ3K6pTiQM-Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=1fc4a4c67a619ffb6cf634ec54d59ab0", "width": 216, "height": 279}, {"url": "https://i.redditmedia.com/Oy_v278RTQHD04USWgsr5dpoPeNOgPwHQ3K6pTiQM-Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=71cda6d657923bffa65bbcb7bfe09cdf", "width": 320, "height": 414}], "variants": {}, "id": "c-WwSgjWs-No30IDaQakcLjLq-5HC1vTWDMFvECvqow"}], "enabled": false}, "num_comments": 175, "thumbnail": "https://b.thumbs.redditmedia.com/SHClphI7x6zN-syWNsLxejrMBuBWy1LqvFlb1sWCG0s.jpg", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "contest_mode": false, "gilded": 0, "locked": false, "downs": 0, "brand_safe": true, "subreddit_subscribers": 483233, "secure_media_embed": {}, "media_embed": {}, "post_hint": "link", "stickied": false, "can_gild": false, "thumbnail_height": 140, "parent_whitelist_status": "all_ads", "name": "t3_4h8r54", "spoiler": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/", "subreddit_type": "public", "whitelist_status": "all_ads", "report_reasons": null, "created": 1462132687.0, "url": "http://imgur.com/02vQquX", "author_flair_text": null, "quarantine": false, "title": "Enemy of the state", "created_utc": 1462103887.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "distinguished": null, "media": null, "upvote_ratio": 0.9, "mod_reports": [], "is_self": false, "visited": false, "num_reports": null, "is_video": false, "ups": 2598}}], "before": null}}, {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 280, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 51, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2ok94p", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "HeMan_Batman", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oiq0w", "score": 51, "approved_by": null, "downs": 0, "body": "Actually, more books", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Actually, more books&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ok94p", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ok94p/", "num_reports": null, "stickied": false, "created": 1462150417.0, "author_flair_text": null, "created_utc": 1462121617.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oiq0w", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "DrummerHead", "can_mod_post": false, "send_replies": true, "parent_id": "t3_4h8r54", "score": 280, "approved_by": null, "downs": 0, "body": "Is this one of the fabled \"programmerhumor posts that are actually funny and witty and involve programming knowledge\"?\n\nMore of this please", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is this one of the fabled &amp;quot;programmerhumor posts that are actually funny and witty and involve programming knowledge&amp;quot;?&lt;/p&gt;\n\n&lt;p&gt;More of this please&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oiq0w", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oiq0w/", "num_reports": null, "stickied": false, "created": 1462147834.0, "author_flair_text": null, "created_utc": 1462119034.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 118, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 338, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 56, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 268, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 87, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 55, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 69, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 17, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2ogism", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "PeenuttButler", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2og4i9", "score": 17, "approved_by": null, "downs": 0, "body": "Cool, TIL. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Cool, TIL. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ogism", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ogism/", "num_reports": null, "stickied": false, "created": 1462143903.0, "author_flair_text": null, "created_utc": 1462115103.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2og4i9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "tr4ce", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oflmy", "score": 69, "approved_by": null, "downs": 0, "body": "There is already a haskell to VHDL compiler: http://www.clash-lang.org/", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There is already a haskell to VHDL compiler: &lt;a href=\"http://www.clash-lang.org/\"&gt;http://www.clash-lang.org/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2og4i9", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2og4i9/", "num_reports": null, "stickied": false, "created": 1462143169.0, "author_flair_text": null, "created_utc": 1462114369.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 11, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2om7w9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Barley12", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oflmy", "score": 11, "approved_by": null, "downs": 0, "body": "Sounds like an FPGA", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sounds like an FPGA&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2om7w9", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2om7w9/", "num_reports": null, "stickied": false, "created": 1462153504.0, "author_flair_text": null, "created_utc": 1462124704.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2owe24", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "valbaca", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oflmy", "score": 6, "approved_by": null, "downs": 0, "body": "There's several chapters in the SICP that do exactly that ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s several chapters in the SICP that do exactly that &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2owe24", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2owe24/", "num_reports": null, "stickied": false, "created": 1462169519.0, "author_flair_text": null, "created_utc": 1462140719.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2oou0k", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "[deleted]", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oflmy", "score": 3, "approved_by": null, "downs": 0, "body": "I \"wrote\" an unconventional image processor in chisel running on top of scala which can be as functional as Haskell. Beware of those who cling to verilog and VHDL.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I &amp;quot;wrote&amp;quot; an unconventional image processor in chisel running on top of scala which can be as functional as Haskell. Beware of those who cling to verilog and VHDL.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": false, "subreddit": "ProgrammerHumor", "name": "t1_d2oou0k", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oou0k/", "num_reports": null, "stickied": false, "created": 1462157589.0, "author_flair_text": null, "created_utc": 1462128789.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oflmy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "PeenuttButler", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oep1z", "score": 55, "approved_by": null, "downs": 0, "body": "I'm an EE junior. I took digital IC design classes before I learn about functional programming, and this concept blew me away. The idea of functional programming is essentially how digital IC design works. \n\nIt also makes me imagine that one day, someone will figure out a way to turn those functional language into logic gates.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m an EE junior. I took digital IC design classes before I learn about functional programming, and this concept blew me away. The idea of functional programming is essentially how digital IC design works. &lt;/p&gt;\n\n&lt;p&gt;It also makes me imagine that one day, someone will figure out a way to turn those functional language into logic gates.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oflmy", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oflmy/", "num_reports": null, "stickied": false, "created": 1462142133.0, "author_flair_text": null, "created_utc": 1462113333.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 8, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 10, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2s6q79", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2s5dzb", "score": 1, "approved_by": null, "downs": 0, "body": "I mean I guess that works, but I don't see how that is any better than a Monad, seeing as the IO monad does pretty much exactly that: pass the world around.\n\nAnd before you say it is simpler, I will disagree, because while monads as an abstract concept are pretty complex, actually just using the IO monad is really easy. You can use `do` syntax, `&lt;$&gt;`, `&lt;*&gt;` `&gt;&gt;` `&gt;&gt;=` etc. the first of which being really easy, the rest not that bad either.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I mean I guess that works, but I don&amp;#39;t see how that is any better than a Monad, seeing as the IO monad does pretty much exactly that: pass the world around.&lt;/p&gt;\n\n&lt;p&gt;And before you say it is simpler, I will disagree, because while monads as an abstract concept are pretty complex, actually just using the IO monad is really easy. You can use &lt;code&gt;do&lt;/code&gt; syntax, &lt;code&gt;&amp;lt;$&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; etc. the first of which being really easy, the rest not that bad either.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2s6q79", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2s6q79/", "num_reports": null, "stickied": false, "created": 1462376948.0, "author_flair_text": null, "created_utc": 1462348148.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 9, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2s5dzb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "afraca", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2pfq1h", "score": 1, "approved_by": null, "downs": 0, "body": "Although a very intriguing approach, and pretty awesome, it's debatable whether this is the only clean option. \n\nAt the University of Nijmegen in the Netherlands they develop a rather unknown functional language called Clean :\nhttp://clean.cs.ru.nl/Clean\n\nI can't find it on mobile now, but I know they do explicit passing of the world state around, and it's not that horrible. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Although a very intriguing approach, and pretty awesome, it&amp;#39;s debatable whether this is the only clean option. &lt;/p&gt;\n\n&lt;p&gt;At the University of Nijmegen in the Netherlands they develop a rather unknown functional language called Clean :\n&lt;a href=\"http://clean.cs.ru.nl/Clean\"&gt;http://clean.cs.ru.nl/Clean&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I can&amp;#39;t find it on mobile now, but I know they do explicit passing of the world state around, and it&amp;#39;s not that horrible. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2s5dzb", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2s5dzb/", "num_reports": null, "stickied": false, "created": 1462372880.0, "author_flair_text": null, "created_utc": 1462344080.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 8, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2pfq1h", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2pctzg", "score": 3, "approved_by": null, "downs": 0, "body": "I mean that is obviously true, but at the same time you can't really cleanly do IO type stuff without a Monad or some more complex equivalent (Monads are actually pretty much the simplest way to model state in a pure functional programming language). By doing ALL work I meant more to emphasize the fact that it can solve any problem you can do in other language, now it might be more performant or less performant, but it will be doable and should never be significantly more difficult, and in my experience it is usually easier.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I mean that is obviously true, but at the same time you can&amp;#39;t really cleanly do IO type stuff without a Monad or some more complex equivalent (Monads are actually pretty much the simplest way to model state in a pure functional programming language). By doing ALL work I meant more to emphasize the fact that it can solve any problem you can do in other language, now it might be more performant or less performant, but it will be doable and should never be significantly more difficult, and in my experience it is usually easier.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2pfq1h", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2pfq1h/", "num_reports": null, "stickied": false, "created": 1462207600.0, "author_flair_text": null, "created_utc": 1462178800.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2pctzg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "nulloid", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oswch", "score": 10, "approved_by": null, "downs": 0, "body": "Monads and Turing-completeness don't really have anything to do with each other. Haskell would've been just as Turing-complete without monads.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Monads and Turing-completeness don&amp;#39;t really have anything to do with each other. Haskell would&amp;#39;ve been just as Turing-complete without monads.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2pctzg", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2pctzg/", "num_reports": null, "stickied": false, "created": 1462197897.0, "author_flair_text": null, "created_utc": 1462169097.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oswch", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oep1z", "score": 8, "approved_by": null, "downs": 0, "body": "&gt; it gets most work done\n\nAnd it can get ALL work done when you include things like Monads. What with it being turing complete and all.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;it gets most work done&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;And it can get ALL work done when you include things like Monads. What with it being turing complete and all.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oswch", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oswch/", "num_reports": null, "stickied": false, "created": 1462163884.0, "author_flair_text": null, "created_utc": 1462135084.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 14, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2ofk3r", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "gremy0", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oep1z", "score": 14, "approved_by": null, "downs": 0, "body": "I found some of the more abstract ways to introduce functional programming to be good fun. Like the [Clojure Koans](http://clojurescriptkoans.com/) or [The Little Schemer](https://www.amazon.co.uk/Little-Schemer-Daniel-P-Friedman/dp/0262560992)", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I found some of the more abstract ways to introduce functional programming to be good fun. Like the &lt;a href=\"http://clojurescriptkoans.com/\"&gt;Clojure Koans&lt;/a&gt; or &lt;a href=\"https://www.amazon.co.uk/Little-Schemer-Daniel-P-Friedman/dp/0262560992\"&gt;The Little Schemer&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ofk3r", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ofk3r/", "num_reports": null, "stickied": false, "created": 1462142044.0, "author_flair_text": null, "created_utc": 1462113244.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 9, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2p57s8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "hungry4pie", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2p44ih", "score": 9, "approved_by": null, "downs": 0, "body": "Yes, but that's true of imperative languages too. What's really neat with functional programming is the concept of higher order functions, where functions take functions as parameters. \n\n\nThe other neat aspects are discriminated unions e.g.\n\n\n    type Shape of\n    | Rectangle -&gt; (float height, float width)\n    | Circle -&gt; float Radius\n\n\nThen in a function you have a match expression, which is like a switch statement, but better, a function can take the type Shape and then do something based on what the shape is like:\n\n\n    let Area x =\n      match x with\n      | Rectangle -&gt; x.Width * x.Height\n      | Circle -&gt; PI * x.Radius^2\n\n\nAnd yet another neat feaure is function pipe-lining, the output of one function gets passed along to another function with `|&gt;`, and you can use multiple bars to indicate which argument it's being passed to e.g. `||&gt;` for the second argument.\n\n\nAnd I just realised I explained a bunch of functional concepts, without really answering your question.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, but that&amp;#39;s true of imperative languages too. What&amp;#39;s really neat with functional programming is the concept of higher order functions, where functions take functions as parameters. &lt;/p&gt;\n\n&lt;p&gt;The other neat aspects are discriminated unions e.g.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Shape of\n| Rectangle -&amp;gt; (float height, float width)\n| Circle -&amp;gt; float Radius\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then in a function you have a match expression, which is like a switch statement, but better, a function can take the type Shape and then do something based on what the shape is like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let Area x =\n  match x with\n  | Rectangle -&amp;gt; x.Width * x.Height\n  | Circle -&amp;gt; PI * x.Radius^2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And yet another neat feaure is function pipe-lining, the output of one function gets passed along to another function with &lt;code&gt;|&amp;gt;&lt;/code&gt;, and you can use multiple bars to indicate which argument it&amp;#39;s being passed to e.g. &lt;code&gt;||&amp;gt;&lt;/code&gt; for the second argument.&lt;/p&gt;\n\n&lt;p&gt;And I just realised I explained a bunch of functional concepts, without really answering your question.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p57s8", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p57s8/", "num_reports": null, "stickied": false, "created": 1462183691.0, "author_flair_text": null, "created_utc": 1462154891.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2p44ih", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Benlarge1", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oep1z", "score": 2, "approved_by": null, "downs": 0, "body": "So instead of doing something like \"x = 3\" you'd do \"x = (make3())\"?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So instead of doing something like &amp;quot;x = 3&amp;quot; you&amp;#39;d do &amp;quot;x = (make3())&amp;quot;?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p44ih", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p44ih/", "num_reports": null, "stickied": false, "created": 1462182176.0, "author_flair_text": null, "created_utc": 1462153376.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2pe95d", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "mnbvas", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oswll", "score": 3, "approved_by": null, "downs": 0, "body": "Since LISP was initially created as an alternative to the Turing machine for algorithm formalization (then a student of the creator implemented `eval` in assembly), I like to describe LISP as the assembly of functional programming. It even has self-modifying code, just like assembly.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Since LISP was initially created as an alternative to the Turing machine for algorithm formalization (then a student of the creator implemented &lt;code&gt;eval&lt;/code&gt; in assembly), I like to describe LISP as the assembly of functional programming. It even has self-modifying code, just like assembly.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2pe95d", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2pe95d/", "num_reports": null, "stickied": false, "created": 1462202217.0, "author_flair_text": null, "created_utc": 1462173417.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oswll", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "jiminiminimini", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oep1z", "score": 1, "approved_by": null, "downs": 0, "body": "Currently I have to work with LISP (LispWorks) so I'm learning the functional paradigm. It's fun so far, but I find Haskell clearer :)", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Currently I have to work with LISP (LispWorks) so I&amp;#39;m learning the functional paradigm. It&amp;#39;s fun so far, but I find Haskell clearer :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oswll", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oswll/", "num_reports": null, "stickied": false, "created": 1462163894.0, "author_flair_text": null, "created_utc": 1462135094.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oep1z", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "royalaid", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oe374", "score": 87, "approved_by": null, "downs": 0, "body": "To expand on this, your \"state\" becomes the series of functions applied to a value and you just toss around return values instead of a variable to hold them. Sometimes this isn't an ideal solution but as stated in the parent comment it gets most work done. Also if Haskell isn't your cup of tea, I find the [syntax](http://www.haskellforall.com/2014/10/how-to-desugar-haskell-code.html) to be quite opaque at times, you can also check any of the many dialects of LISP (I really like [Clojure](http://www.braveclojure.com/clojure-for-the-brave-and-true/)) or even [Javascript](http://eloquentjavascript.net/1st_edition/chapter6.html).", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;To expand on this, your &amp;quot;state&amp;quot; becomes the series of functions applied to a value and you just toss around return values instead of a variable to hold them. Sometimes this isn&amp;#39;t an ideal solution but as stated in the parent comment it gets most work done. Also if Haskell isn&amp;#39;t your cup of tea, I find the &lt;a href=\"http://www.haskellforall.com/2014/10/how-to-desugar-haskell-code.html\"&gt;syntax&lt;/a&gt; to be quite opaque at times, you can also check any of the many dialects of LISP (I really like &lt;a href=\"http://www.braveclojure.com/clojure-for-the-brave-and-true/\"&gt;Clojure&lt;/a&gt;) or even &lt;a href=\"http://eloquentjavascript.net/1st_edition/chapter6.html\"&gt;Javascript&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oep1z", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oep1z/", "num_reports": null, "stickied": false, "created": 1462140184.0, "author_flair_text": null, "created_utc": 1462111384.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 14, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 35, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2orid5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "roboticon", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oeznd", "score": 5, "approved_by": null, "downs": 0, "body": "Exactly, you'll get a lot better at using functional constructions like `map` in languages like Python or JavaScript.\n\nFor example, yesterday I wanted to parse an ISO date string, like `s = '2016-05-01T13:02:12.345678Z'`, and you don't need a `for` loop or another variable:\n\n`datetime.datetime(*map(int, re.split('[\\D]', s)[:-1]))`\n\nwhich, granted, may not seem readable at first, but you can use helper variables to break it up without really using state.", "edited": 1462133295.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Exactly, you&amp;#39;ll get a lot better at using functional constructions like &lt;code&gt;map&lt;/code&gt; in languages like Python or JavaScript.&lt;/p&gt;\n\n&lt;p&gt;For example, yesterday I wanted to parse an ISO date string, like &lt;code&gt;s = &amp;#39;2016-05-01T13:02:12.345678Z&amp;#39;&lt;/code&gt;, and you don&amp;#39;t need a &lt;code&gt;for&lt;/code&gt; loop or another variable:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;datetime.datetime(*map(int, re.split(&amp;#39;[\\D]&amp;#39;, s)[:-1]))&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;which, granted, may not seem readable at first, but you can use helper variables to break it up without really using state.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2orid5", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2orid5/", "num_reports": null, "stickied": false, "created": 1462161741.0, "author_flair_text": null, "created_utc": 1462132941.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oeznd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "likesdarkgreen", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oe5uc", "score": 35, "approved_by": null, "downs": 0, "body": "It won't be easy though. Stateful programming is a hard habit to break, and Haskell pretty much forces you out of it, and it gets hairy real fast, but once you start to get the hang of it, you start to see how overly complicated you tend to make things when approaching things in terms of mutating state. At the very least, it will make sense of a whole bunch of the new modern features you see in languages nowadays.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It won&amp;#39;t be easy though. Stateful programming is a hard habit to break, and Haskell pretty much forces you out of it, and it gets hairy real fast, but once you start to get the hang of it, you start to see how overly complicated you tend to make things when approaching things in terms of mutating state. At the very least, it will make sense of a whole bunch of the new modern features you see in languages nowadays.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oeznd", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oeznd/", "num_reports": null, "stickied": false, "created": 1462140830.0, "author_flair_text": null, "created_utc": 1462112030.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 52, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 9, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 27, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 12, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "more", "data": {"count": 0, "name": "t1__", "id": "_", "parent_id": "t1_d2p2a4o", "depth": 10, "children": []}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2p2a4o", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Relevant_Monstrosity", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2opyg3", "score": 1, "approved_by": null, "downs": 0, "body": "Is there a way to get type checking when writing JavaScript?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is there a way to get type checking when writing JavaScript?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p2a4o", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p2a4o/", "num_reports": null, "stickied": false, "created": 1462179265.0, "author_flair_text": null, "created_utc": 1462150465.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 9, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2opyg3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "mgattozzi", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ofjgp", "score": 12, "approved_by": null, "downs": 0, "body": "Best part is that it's type checked helping catch any errors you might have missed had you not created a case for an absence of a value.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Best part is that it&amp;#39;s type checked helping catch any errors you might have missed had you not created a case for an absence of a value.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2opyg3", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2opyg3/", "num_reports": null, "stickied": false, "created": 1462159339.0, "author_flair_text": null, "created_utc": 1462130539.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 8, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ofjgp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "brookllyn", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2of9aw", "score": 27, "approved_by": null, "downs": 0, "body": "It is a very neat type that allows you to safely represent the presence or absence of a value. It is no different than the Option type in Scala and similar to the Option type in Java. It forces the programmer to handle both conditions and is what generally replaces null in functional languages. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It is a very neat type that allows you to safely represent the presence or absence of a value. It is no different than the Option type in Scala and similar to the Option type in Java. It forces the programmer to handle both conditions and is what generally replaces null in functional languages. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ofjgp", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ofjgp/", "num_reports": null, "stickied": false, "created": 1462142010.0, "author_flair_text": null, "created_utc": 1462113210.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2pwzi8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "afraca", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2pb5ca", "score": 2, "approved_by": null, "downs": 0, "body": "To be pedantic, exceptions are still there in Haskell (https://wiki.haskell.org/Exception)", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;To be pedantic, exceptions are still there in Haskell (&lt;a href=\"https://wiki.haskell.org/Exception\"&gt;https://wiki.haskell.org/Exception&lt;/a&gt;)&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2pwzi8", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2pwzi8/", "num_reports": null, "stickied": false, "created": 1462241797.0, "author_flair_text": null, "created_utc": 1462212997.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 8, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d39z6b9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "JustFinishedBSG", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2pb5ca", "score": 1, "approved_by": null, "downs": 0, "body": "Stage 4: Either", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Stage 4: Either&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d39z6b9", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d39z6b9/", "num_reports": null, "stickied": false, "created": 1463587577.0, "author_flair_text": null, "created_utc": 1463558777.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 8, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2pb5ca", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Sampo", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2of9aw", "score": 4, "approved_by": null, "downs": 0, "body": "The evolution of error handling techniques:\n\nStage 1: A fuckton of if-then-else spaghetti  \nStage 2: Exceptions  \nStage 3: `Maybe` (i.e. the Option type)", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The evolution of error handling techniques:&lt;/p&gt;\n\n&lt;p&gt;Stage 1: A fuckton of if-then-else spaghetti&lt;br/&gt;\nStage 2: Exceptions&lt;br/&gt;\nStage 3: &lt;code&gt;Maybe&lt;/code&gt; (i.e. the Option type)&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2pb5ca", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2pb5ca/", "num_reports": null, "stickied": false, "created": 1462193678.0, "author_flair_text": null, "created_utc": 1462164878.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2phmfp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "kazagistar", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2of9aw", "score": 4, "approved_by": null, "downs": 0, "body": "It's a data structure that can store something or not, and is used to represent null able values, since values are not null able by default. It is defined like:\n\n    data Maybe a = None | Some a", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s a data structure that can store something or not, and is used to represent null able values, since values are not null able by default. It is defined like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data Maybe a = None | Some a\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2phmfp", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2phmfp/", "num_reports": null, "stickied": false, "created": 1462214876.0, "author_flair_text": null, "created_utc": 1462186076.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2p9fni", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "serendependy", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2of9aw", "score": 3, "approved_by": null, "downs": 0, "body": "Not a keyword, a data structure that \"maybe\" has a useful result. If it doesn't, you handle the error appropriately.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not a keyword, a data structure that &amp;quot;maybe&amp;quot; has a useful result. If it doesn&amp;#39;t, you handle the error appropriately.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p9fni", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p9fni/", "num_reports": null, "stickied": false, "created": 1462190148.0, "author_flair_text": null, "created_utc": 1462161348.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2of9aw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "2Punx2Furious", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2of873", "score": 9, "approved_by": null, "downs": 0, "body": "I'm guessing it's a keyword in Haskell?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m guessing it&amp;#39;s a keyword in Haskell?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2of9aw", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2of9aw/", "num_reports": null, "stickied": false, "created": 1462141410.0, "author_flair_text": null, "created_utc": 1462112610.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2of873", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "verandaguy", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oe5uc", "score": 52, "approved_by": null, "downs": 0, "body": "&gt;Maybe I won't use it much\n\nOh, you'll use `Maybe` plenty.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Maybe I won&amp;#39;t use it much&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Oh, you&amp;#39;ll use &lt;code&gt;Maybe&lt;/code&gt; plenty.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2of873", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2of873/", "num_reports": null, "stickied": false, "created": 1462141343.0, "author_flair_text": null, "created_utc": 1462112543.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 12, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 8, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 8, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2p8ivu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "eliasbagley", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ol0dq", "score": 8, "approved_by": null, "downs": 0, "body": "It could be a selection bias - FP is harder to grasp, hence only the best programmers will use it, and they will have lower error rates than average programmers. It's entirely likely that programmers who are able to grasp FP may have a similarly low error rate in imperative languages just because they are better programmers, not that language itself. Anyways, just speculating, but I'd love to see the research and if it's possible to control for this.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It could be a selection bias - FP is harder to grasp, hence only the best programmers will use it, and they will have lower error rates than average programmers. It&amp;#39;s entirely likely that programmers who are able to grasp FP may have a similarly low error rate in imperative languages just because they are better programmers, not that language itself. Anyways, just speculating, but I&amp;#39;d love to see the research and if it&amp;#39;s possible to control for this.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p8ivu", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p8ivu/", "num_reports": null, "stickied": false, "created": 1462188489.0, "author_flair_text": null, "created_utc": 1462159689.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 8, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ol0dq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Magnnus", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2okcwn", "score": 1, "approved_by": null, "downs": 0, "body": "I can't find the specific papers right now, but I've read a few that show lower error rates for programs written in functional languages. Stateful operators like the ++ (increment) operator have also been linked to higher error rates. If I had more time I'd search around for them.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I can&amp;#39;t find the specific papers right now, but I&amp;#39;ve read a few that show lower error rates for programs written in functional languages. Stateful operators like the ++ (increment) operator have also been linked to higher error rates. If I had more time I&amp;#39;d search around for them.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ol0dq", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ol0dq/", "num_reports": null, "stickied": false, "created": 1462151636.0, "author_flair_text": null, "created_utc": 1462122836.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 0, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 15, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 0, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "more", "data": {"count": 0, "name": "t1__", "id": "_", "parent_id": "t1_d2orfmv", "depth": 10, "children": []}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2orfmv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "HugoNikanor", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oo7ti", "score": 0, "approved_by": null, "downs": 0, "body": "Functional languages have a thing for weird syntax. I personally get really confused looking at Haskel, wondering what all these symbols mean. And Lisp have that little thing with polish notation and parenthesis, scaring away many newcomers.\n\nThere is nothing stopping a language from being purely functional with a syntax much close to c (since you are already able to write c in a purely functional maner).\n\nI know that there are some *\"nicer\"* functional languages, but none that I think of when I think *functional*.\n\nShould be noted that I personally write lisp and like it, but not Haskell.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Functional languages have a thing for weird syntax. I personally get really confused looking at Haskel, wondering what all these symbols mean. And Lisp have that little thing with polish notation and parenthesis, scaring away many newcomers.&lt;/p&gt;\n\n&lt;p&gt;There is nothing stopping a language from being purely functional with a syntax much close to c (since you are already able to write c in a purely functional maner).&lt;/p&gt;\n\n&lt;p&gt;I know that there are some &lt;em&gt;&amp;quot;nicer&amp;quot;&lt;/em&gt; functional languages, but none that I think of when I think &lt;em&gt;functional&lt;/em&gt;.&lt;/p&gt;\n\n&lt;p&gt;Should be noted that I personally write lisp and like it, but not Haskell.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2orfmv", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2orfmv/", "num_reports": null, "stickied": false, "created": 1462161625.0, "author_flair_text": null, "created_utc": 1462132825.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 9, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 0, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "more", "data": {"count": 0, "name": "t1__", "id": "_", "parent_id": "t1_d2oogzv", "depth": 10, "children": []}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oogzv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Beakerbite", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oo7ti", "score": 0, "approved_by": null, "downs": 0, "body": "I'm not advocating for switching to functional programming, simply arguing that statefulness leads to errors. You can use less state in stateful languages.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not advocating for switching to functional programming, simply arguing that statefulness leads to errors. You can use less state in stateful languages.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oogzv", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oogzv/", "num_reports": null, "stickied": false, "created": 1462157025.0, "author_flair_text": null, "created_utc": 1462128225.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 9, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oo7ti", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "the_great_ganonderp", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2on3ww", "score": 15, "approved_by": null, "downs": 0, "body": "Supporting a claim with \"it's just common sense/simple logic/whatever\" doesn't really hold up for a skeptical/\"hostile\" audience. It's also a pretty big leap from \"complexity is hard\", which basically everyone will agree with, to \"everyone should use functional styles/languages which restrict mutable state\". Who's to say those approaches actually reduce overall complexity? To someone who's ever looked at some Haskell code and thought \"WTF does `:&lt;|&gt;` mean\", or whatever, it may not ring true. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Supporting a claim with &amp;quot;it&amp;#39;s just common sense/simple logic/whatever&amp;quot; doesn&amp;#39;t really hold up for a skeptical/&amp;quot;hostile&amp;quot; audience. It&amp;#39;s also a pretty big leap from &amp;quot;complexity is hard&amp;quot;, which basically everyone will agree with, to &amp;quot;everyone should use functional styles/languages which restrict mutable state&amp;quot;. Who&amp;#39;s to say those approaches actually reduce overall complexity? To someone who&amp;#39;s ever looked at some Haskell code and thought &amp;quot;WTF does &lt;code&gt;:&amp;lt;|&amp;gt;&lt;/code&gt; mean&amp;quot;, or whatever, it may not ring true. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oo7ti", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oo7ti/", "num_reports": null, "stickied": false, "created": 1462156634.0, "author_flair_text": null, "created_utc": 1462127834.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 8, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2on3ww", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Beakerbite", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2okcwn", "score": 0, "approved_by": null, "downs": 0, "body": "It's just simple logic. The more states a system has, the more complex it becomes. The complex a system becomes, the harder it is for a human to fully understand it. This makes it easier for programmers to miss connections and introduce bugs.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s just simple logic. The more states a system has, the more complex it becomes. The complex a system becomes, the harder it is for a human to fully understand it. This makes it easier for programmers to miss connections and introduce bugs.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2on3ww", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2on3ww/", "num_reports": null, "stickied": false, "created": 1462154892.0, "author_flair_text": null, "created_utc": 1462126092.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 1, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2okcwn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "the_great_ganonderp", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ok8xg", "score": 8, "approved_by": null, "downs": 0, "body": "Do you have a citation for that \"well researched\" bit? I actually really like Haskell and I have fairly high confidence in the code I write in it, but I'd love to be able to point to objective proof of why others should learn it (and program with less mutable state in general).", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do you have a citation for that &amp;quot;well researched&amp;quot; bit? I actually really like Haskell and I have fairly high confidence in the code I write in it, but I&amp;#39;d love to be able to point to objective proof of why others should learn it (and program with less mutable state in general).&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2okcwn", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2okcwn/", "num_reports": null, "stickied": false, "created": 1462150588.0, "author_flair_text": null, "created_utc": 1462121788.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ok8xg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Magnnus", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oe5uc", "score": 12, "approved_by": null, "downs": 0, "body": "Even if you don't use it, it will make you a better programmer. It's well researched that stateful programming generally leads to more errors. Avoiding state when you don't really need it allows cleaner, more accurate, and easier to debug code.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Even if you don&amp;#39;t use it, it will make you a better programmer. It&amp;#39;s well researched that stateful programming generally leads to more errors. Avoiding state when you don&amp;#39;t really need it allows cleaner, more accurate, and easier to debug code.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ok8xg", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ok8xg/", "num_reports": null, "stickied": false, "created": 1462150408.0, "author_flair_text": null, "created_utc": 1462121608.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oe5uc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "2Punx2Furious", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oe374", "score": 14, "approved_by": null, "downs": 0, "body": "Yep, that's what I heard, and that's why I plan to learn Haskell. Maybe I won't use it much, but it will be nice to know it.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yep, that&amp;#39;s what I heard, and that&amp;#39;s why I plan to learn Haskell. Maybe I won&amp;#39;t use it much, but it will be nice to know it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oe5uc", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oe5uc/", "num_reports": null, "stickied": false, "created": 1462138992.0, "author_flair_text": null, "created_utc": 1462110192.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 7, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2ot0jb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oexqw", "score": 7, "approved_by": null, "downs": 0, "body": "Using Monads, it is actually a rather elegant way of modeling state, although you will get a much better explanation of a Monad and the IO Monad from googling than I could give you.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using Monads, it is actually a rather elegant way of modeling state, although you will get a much better explanation of a Monad and the IO Monad from googling than I could give you.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ot0jb", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ot0jb/", "num_reports": null, "stickied": false, "created": 1462164058.0, "author_flair_text": null, "created_utc": 1462135258.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2ouhd9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "2pxl", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oexqw", "score": 5, "approved_by": null, "downs": 0, "body": "It is and Haskell handles it via the IO Monad[1]. It is a bit of an exception but the language provides a lot of abstractions to make it easier to deal with.\n\n -1. https://wiki.haskell.org/IO_inside", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It is and Haskell handles it via the IO Monad[1]. It is a bit of an exception but the language provides a lot of abstractions to make it easier to deal with.&lt;/p&gt;\n\n&lt;p&gt;-1. &lt;a href=\"https://wiki.haskell.org/IO_inside\"&gt;https://wiki.haskell.org/IO_inside&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ouhd9", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ouhd9/", "num_reports": null, "stickied": false, "created": 1462166400.0, "author_flair_text": null, "created_utc": 1462137600.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "more", "data": {"count": 0, "name": "t1__", "id": "_", "parent_id": "t1_d2p1iyo", "depth": 10, "children": []}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2p1iyo", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "12tales", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2p0jbr", "score": 3, "approved_by": null, "downs": 0, "body": "Yeah, exactly. The `.` operator (and its close cousin `$`) make long strings of function applications much more readable by letting you avoid nested parentheses.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, exactly. The &lt;code&gt;.&lt;/code&gt; operator (and its close cousin &lt;code&gt;$&lt;/code&gt;) make long strings of function applications much more readable by letting you avoid nested parentheses.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p1iyo", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p1iyo/", "num_reports": null, "stickied": false, "created": 1462178057.0, "author_flair_text": null, "created_utc": 1462149257.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 9, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2p2y03", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Codile", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2p0jbr", "score": 3, "approved_by": null, "downs": 0, "body": "&gt; So if I understand correctly, f (g x) is effectively the same thing as f . g x?\n\nNo. Not exactly. You see, the parentheses are important because the composition operator combines two functions into one function that takes an argument, but when you don't use parentheses, you're combining a function with one that potentially can't take any more parameters because function application has higher precedence than function composition.\n\nTo demonstrate, here are a few examples:\n\nExample #1:\n\nLet's take this slowly, so, let's assume that the function g only takes one parameter\n\n    g :: Int -&gt; Int\n    g x = x + 5\n    \n    f :: Int -&gt; Int\n    f x = x * 2\n\nHere we have two simple functions, now let's do this\n\n   f(g x) :: Int\n\nObviously, the type of f(g x) is Int because all parameters have been supplied, so it'll just return (x+5)*2, but doing f . g 2 will not. In fact, it won't even compile. To understand this, we have to look at the type of (.)\n\n    (.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\n\nJust think of (b -&gt; c) as a function that takes one argument of any type and returns something of any type. So we can see that (.) takes two functions, one from b to c and one from a to b, and an argument a. Now, this could be somewhat confusing, so let's just assume that (.) only works with numbers.\n\n    (.) :: (Int -&gt; Int) -&gt; (Int -&gt; Int) -&gt; Int -&gt; Int\n\nSo, it takes two functions from int to int, one int value, and returns an int value. Now, we can substitute our f, g, and x in there. The parentheses around the operator allow me to use it in prefix notation.\n\n    (.) f g :: Int -&gt; Int\n    (.) f g x :: Int\n\nThis clearly matches up with the type of (.) If we supply two functions we get a function from Int to Int. If we supply two functions and a value, we get an Int. Now, let's look at the situation (f . g x).\n\nBecause function application has higher precedence, we can rewrite this as\n\n    f . (g x)\n\nor\n\n    (.) f (g x)\n\nNow, if we evaluate (g x) we get an Int, so we're giving (.) a function and one int. Obviously this doesn't match up with the type signature. However, your code can be saved with just one simple change. Add the ($) operator, which is essentially a weaker version of the whitespace function application.\n\nSo, your\n\n    f . g x\n\nbecomes\n\n    f . g $ x\n\nwhich compiles without errors, because it is essentially\n\n    (f . g) x\n\n\nThis was probably very confusing, and I knew I planned on explaining something using the actual function applications but I forgot already.\n\n&gt; I'm not sure why you got downvoted on the other comment.\n\nNo idea, maybe I got something wrong, but then it would be courteous to write a comment to clear up any confusion. Or maybe the person just doesn't like Haskell or is very butt hurt about something I do different than he/she. Dunno.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;So if I understand correctly, f (g x) is effectively the same thing as f . g x?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;No. Not exactly. You see, the parentheses are important because the composition operator combines two functions into one function that takes an argument, but when you don&amp;#39;t use parentheses, you&amp;#39;re combining a function with one that potentially can&amp;#39;t take any more parameters because function application has higher precedence than function composition.&lt;/p&gt;\n\n&lt;p&gt;To demonstrate, here are a few examples:&lt;/p&gt;\n\n&lt;p&gt;Example #1:&lt;/p&gt;\n\n&lt;p&gt;Let&amp;#39;s take this slowly, so, let&amp;#39;s assume that the function g only takes one parameter&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;g :: Int -&amp;gt; Int\ng x = x + 5\n\nf :: Int -&amp;gt; Int\nf x = x * 2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here we have two simple functions, now let&amp;#39;s do this&lt;/p&gt;\n\n&lt;p&gt;f(g x) :: Int&lt;/p&gt;\n\n&lt;p&gt;Obviously, the type of f(g x) is Int because all parameters have been supplied, so it&amp;#39;ll just return (x+5)*2, but doing f . g 2 will not. In fact, it won&amp;#39;t even compile. To understand this, we have to look at the type of (.)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(.) :: (b -&amp;gt; c) -&amp;gt; (a -&amp;gt; b) -&amp;gt; a -&amp;gt; c\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Just think of (b -&amp;gt; c) as a function that takes one argument of any type and returns something of any type. So we can see that (.) takes two functions, one from b to c and one from a to b, and an argument a. Now, this could be somewhat confusing, so let&amp;#39;s just assume that (.) only works with numbers.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(.) :: (Int -&amp;gt; Int) -&amp;gt; (Int -&amp;gt; Int) -&amp;gt; Int -&amp;gt; Int\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So, it takes two functions from int to int, one int value, and returns an int value. Now, we can substitute our f, g, and x in there. The parentheses around the operator allow me to use it in prefix notation.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(.) f g :: Int -&amp;gt; Int\n(.) f g x :: Int\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This clearly matches up with the type of (.) If we supply two functions we get a function from Int to Int. If we supply two functions and a value, we get an Int. Now, let&amp;#39;s look at the situation (f . g x).&lt;/p&gt;\n\n&lt;p&gt;Because function application has higher precedence, we can rewrite this as&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f . (g x)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(.) f (g x)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now, if we evaluate (g x) we get an Int, so we&amp;#39;re giving (.) a function and one int. Obviously this doesn&amp;#39;t match up with the type signature. However, your code can be saved with just one simple change. Add the ($) operator, which is essentially a weaker version of the whitespace function application.&lt;/p&gt;\n\n&lt;p&gt;So, your&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f . g x\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;becomes&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f . g $ x\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which compiles without errors, because it is essentially&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(f . g) x\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This was probably very confusing, and I knew I planned on explaining something using the actual function applications but I forgot already.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;I&amp;#39;m not sure why you got downvoted on the other comment.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;No idea, maybe I got something wrong, but then it would be courteous to write a comment to clear up any confusion. Or maybe the person just doesn&amp;#39;t like Haskell or is very butt hurt about something I do different than he/she. Dunno.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p2y03", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p2y03/", "num_reports": null, "stickied": false, "created": 1462180304.0, "author_flair_text": null, "created_utc": 1462151504.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 9, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2phrh4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "kazagistar", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2p0jbr", "score": 2, "approved_by": null, "downs": 0, "body": "    let h = f . g\n\nIs the same as\n\n    let h x = (f . g) x\n\nFunction application has a higher precedence then in fix operators. So you need Thr parens to indicate that you want to compose f and g first, and THEN pass in x.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;let h = f . g\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Is the same as&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let h x = (f . g) x\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Function application has a higher precedence then in fix operators. So you need Thr parens to indicate that you want to compose f and g first, and THEN pass in x.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2phrh4", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2phrh4/", "num_reports": null, "stickied": false, "created": 1462215344.0, "author_flair_text": null, "created_utc": 1462186544.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 9, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2p0jbr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "bacondev", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2p0d8f", "score": 3, "approved_by": null, "downs": 0, "body": "I'm not sure why you got downvoted on the other comment. It was helpful. So if I understand correctly, `f (g x)` is effectively the same thing as `f . g x`?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not sure why you got downvoted on the other comment. It was helpful. So if I understand correctly, &lt;code&gt;f (g x)&lt;/code&gt; is effectively the same thing as &lt;code&gt;f . g x&lt;/code&gt;?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p0jbr", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p0jbr/", "num_reports": null, "stickied": false, "created": 1462176522.0, "author_flair_text": null, "created_utc": 1462147722.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 8, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2p0d8f", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Codile", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ozmw0", "score": 4, "approved_by": null, "downs": 0, "body": "Good question. (of course I would forget to explain that). the (.) operator is the same as the mathematical function composition operator defined as (g . f)(x) = g(f(x)). This allows the programmer to glue two functions together to create a new one. It's useful with the (&gt;&gt;=) operator and to simplify functions. For example:\n\n    function x = f(g(x))\n\n becomes\n\n    function = f . g", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Good question. (of course I would forget to explain that). the (.) operator is the same as the mathematical function composition operator defined as (g . f)(x) = g(f(x)). This allows the programmer to glue two functions together to create a new one. It&amp;#39;s useful with the (&amp;gt;&amp;gt;=) operator and to simplify functions. For example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function x = f(g(x))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;becomes&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function = f . g\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p0d8f", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p0d8f/", "num_reports": null, "stickied": false, "created": 1462176251.0, "author_flair_text": null, "created_utc": 1462147451.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ozmw0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "bacondev", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ov6xk", "score": 3, "approved_by": null, "downs": 0, "body": "What does `putStrLn . reverse'` mean?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What does &lt;code&gt;putStrLn . reverse&amp;#39;&lt;/code&gt; mean?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ozmw0", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ozmw0/", "num_reports": null, "stickied": false, "created": 1462175047.0, "author_flair_text": null, "created_utc": 1462146247.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ov6xk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Codile", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oexqw", "score": 5, "approved_by": null, "downs": 0, "body": "By using monads. Now to make it easier to understand: Haskell requires you to use the IO type for input you receive, so when you read a string from stdin, that string has to has the type IO String. Also, every function that takes an IO type has to return one as well, and the main function always has the type IO() (which is an IO function that returns nothing.) Now, to use stateless functions with input data, haskell allows you to \"unpack\" the value from the IO type, so it turns from an IO String to a String that you can use in your function (say a function that reverses a string.) There's more to it, but this should be a good enough explanations. Here is a sample Haskell program to help you visualize it:\n\n    -- two '-' symbols initiate a one-line comment, similar to //\n    -- also, instead of parentheses, space is used to separate function name and function arguments, so instead of f(x), you have f x\n\n    main :: IO()\n    main = do -- \"do\" allows you to write monadic function in a procedural programming style\n      putStrLn \"enter string:\" -- putStrLn has type IO(). you can also explicitly ignore the return value with _ &lt;- putStrLn \"...\", which is mostly useful for functions that don't return (). this fact also becomes important when you do not want to use \"do\"\n      input &lt;- getLine -- getLine has type (IO String)\n      putStrLn (reverse' input)\n\n    reverse' :: String -&gt; String -- function takes a string and returns a string, String is an alias for [Char], so String is a list of chars\n    reverse' [] = [] -- match case where the list is empty as base case for recursion (if you compile with -Wall -Werror, which I would recommend, leaving this out will prevent the program to compile)\n    reverse' (x:xs) = reverse' xs ++ [x] -- (x:xs) splits the list of characters in (head:tail) where head is the first element in the list, and tail is the last, (++) joins strings, the rest is simple recursion\n\nHere you can see the output: http://ideone.com/VsCcPW\n\nNow, you can also write monadic functions without do. To do that, you mainly use the two operators/functions (&gt;&gt;) and (&gt;&gt;=). (&gt;&gt;) simply calls the function on the left, ignores the return value and then calls the one on the right. (&gt;&gt;=) also calls both functions, passes the return value of the left one to the right one. So here is the same code but using (&gt;&gt;) and (&gt;&gt;=):\n\n    main :: IO()\n    main = putStrLn \"enter string:\" &gt;&gt; getLine &gt;&gt;= putStrLn . reverse'\n\n    reverse' :: String -&gt; String\n    reverse' [] = []\n    reverse' (x:xs) = reverse' xs ++ [x]\n\nAnd here's this one: http://ideone.com/DZFQb7\n\nAs you can see, the (&gt;&gt;) operator is used where we would use \"_ &lt;- ...\" in do notation.\n\nAnd of course you can also use do and the operators (&gt;&gt;) and (&gt;&gt;=) with any other Monad, such as Maybe or lists (including Strings.)\n\nEDIT: I've probably oversimplified several things, but the code works, and I think my explanation is sufficient to explain the basics of how IO works in haskell.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;By using monads. Now to make it easier to understand: Haskell requires you to use the IO type for input you receive, so when you read a string from stdin, that string has to has the type IO String. Also, every function that takes an IO type has to return one as well, and the main function always has the type IO() (which is an IO function that returns nothing.) Now, to use stateless functions with input data, haskell allows you to &amp;quot;unpack&amp;quot; the value from the IO type, so it turns from an IO String to a String that you can use in your function (say a function that reverses a string.) There&amp;#39;s more to it, but this should be a good enough explanations. Here is a sample Haskell program to help you visualize it:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;-- two &amp;#39;-&amp;#39; symbols initiate a one-line comment, similar to //\n-- also, instead of parentheses, space is used to separate function name and function arguments, so instead of f(x), you have f x\n\nmain :: IO()\nmain = do -- &amp;quot;do&amp;quot; allows you to write monadic function in a procedural programming style\n  putStrLn &amp;quot;enter string:&amp;quot; -- putStrLn has type IO(). you can also explicitly ignore the return value with _ &amp;lt;- putStrLn &amp;quot;...&amp;quot;, which is mostly useful for functions that don&amp;#39;t return (). this fact also becomes important when you do not want to use &amp;quot;do&amp;quot;\n  input &amp;lt;- getLine -- getLine has type (IO String)\n  putStrLn (reverse&amp;#39; input)\n\nreverse&amp;#39; :: String -&amp;gt; String -- function takes a string and returns a string, String is an alias for [Char], so String is a list of chars\nreverse&amp;#39; [] = [] -- match case where the list is empty as base case for recursion (if you compile with -Wall -Werror, which I would recommend, leaving this out will prevent the program to compile)\nreverse&amp;#39; (x:xs) = reverse&amp;#39; xs ++ [x] -- (x:xs) splits the list of characters in (head:tail) where head is the first element in the list, and tail is the last, (++) joins strings, the rest is simple recursion\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here you can see the output: &lt;a href=\"http://ideone.com/VsCcPW\"&gt;http://ideone.com/VsCcPW&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Now, you can also write monadic functions without do. To do that, you mainly use the two operators/functions (&lt;strong&gt;) and (&lt;/strong&gt;=). (&lt;strong&gt;) simply calls the function on the left, ignores the return value and then calls the one on the right. (&lt;/strong&gt;=) also calls both functions, passes the return value of the left one to the right one. So here is the same code but using (&lt;strong&gt;) and (&lt;/strong&gt;=):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;main :: IO()\nmain = putStrLn &amp;quot;enter string:&amp;quot; &amp;gt;&amp;gt; getLine &amp;gt;&amp;gt;= putStrLn . reverse&amp;#39;\n\nreverse&amp;#39; :: String -&amp;gt; String\nreverse&amp;#39; [] = []\nreverse&amp;#39; (x:xs) = reverse&amp;#39; xs ++ [x]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And here&amp;#39;s this one: &lt;a href=\"http://ideone.com/DZFQb7\"&gt;http://ideone.com/DZFQb7&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;As you can see, the (&amp;gt;&amp;gt;) operator is used where we would use &amp;quot;_ &amp;lt;- ...&amp;quot; in do notation.&lt;/p&gt;\n\n&lt;p&gt;And of course you can also use do and the operators (&lt;strong&gt;) and (&lt;/strong&gt;=) with any other Monad, such as Maybe or lists (including Strings.)&lt;/p&gt;\n\n&lt;p&gt;EDIT: I&amp;#39;ve probably oversimplified several things, but the code works, and I think my explanation is sufficient to explain the basics of how IO works in haskell.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ov6xk", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ov6xk/", "num_reports": null, "stickied": false, "created": 1462167546.0, "author_flair_text": null, "created_utc": 1462138746.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2pfj2b", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "phySi0", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oexqw", "score": 1, "approved_by": null, "downs": 0, "body": "https://blog.jle.im/entry/io-monad-considered-harmful.html", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://blog.jle.im/entry/io-monad-considered-harmful.html\"&gt;https://blog.jle.im/entry/io-monad-considered-harmful.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2pfj2b", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2pfj2b/", "num_reports": null, "stickied": false, "created": 1462206829.0, "author_flair_text": null, "created_utc": 1462178029.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oexqw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "[deleted]", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oe374", "score": 6, "approved_by": null, "downs": 0, "body": "[deleted]", "edited": false, "author_flair_css_class": null, "collapsed": true, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oexqw", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oexqw/", "num_reports": null, "stickied": false, "created": 1462140718.0, "author_flair_text": null, "created_utc": 1462111918.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2oet5o", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "nsimic", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oe374", "score": 3, "approved_by": null, "downs": 0, "body": "i would also recommend: \nhttps://www.gitbook.com/book/drboolean/mostly-adequate-guide/details\n\n", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;i would also recommend: \n&lt;a href=\"https://www.gitbook.com/book/drboolean/mostly-adequate-guide/details\"&gt;https://www.gitbook.com/book/drboolean/mostly-adequate-guide/details&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oet5o", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oet5o/", "num_reports": null, "stickied": false, "created": 1462140434.0, "author_flair_text": null, "created_utc": 1462111634.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2om9a0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "AHemlockslie", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oe374", "score": 1, "approved_by": null, "downs": 0, "body": "I'm almost through with that book now. Down to the last few chapters. It's a great book. There are a lot of things about Haskell that seem really weird at first, but they all make a lot of sense once you understand. Understanding the last few chapters can get challenging, though. I breezed through until I got to functors and applicatives. I'm still getting through it and understanding it, but breezing is no longer the right word at all.\n\nAll in all, a very interesting take on programming that I really like. It's hard to get over the hurdle of learning the language, but I think it's going to be a very worthwhile endeavor.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m almost through with that book now. Down to the last few chapters. It&amp;#39;s a great book. There are a lot of things about Haskell that seem really weird at first, but they all make a lot of sense once you understand. Understanding the last few chapters can get challenging, though. I breezed through until I got to functors and applicatives. I&amp;#39;m still getting through it and understanding it, but breezing is no longer the right word at all.&lt;/p&gt;\n\n&lt;p&gt;All in all, a very interesting take on programming that I really like. It&amp;#39;s hard to get over the hurdle of learning the language, but I think it&amp;#39;s going to be a very worthwhile endeavor.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2om9a0", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2om9a0/", "num_reports": null, "stickied": false, "created": 1462153563.0, "author_flair_text": null, "created_utc": 1462124763.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2p41yz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "mushinnoshin", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oe374", "score": 1, "approved_by": null, "downs": 0, "body": "HaskellBook might be a better introduction than LYAH.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;HaskellBook might be a better introduction than LYAH.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p41yz", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p41yz/", "num_reports": null, "stickied": false, "created": 1462182066.0, "author_flair_text": null, "created_utc": 1462153266.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oe374", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "coder543", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwcv", "score": 268, "approved_by": null, "downs": 0, "body": "In a pure functional language, yes. And it is rather enlightening, actually. It's amazing how little mutable state you *really* need, and the solutions are often far more elegant.\n\n\"Learn You A Haskell\" is a good, gentle introduction into the mind-blowing world of functional programming. Learning FP can make you a better programmer in whatever language you typically use.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In a pure functional language, yes. And it is rather enlightening, actually. It&amp;#39;s amazing how little mutable state you &lt;em&gt;really&lt;/em&gt; need, and the solutions are often far more elegant.&lt;/p&gt;\n\n&lt;p&gt;&amp;quot;Learn You A Haskell&amp;quot; is a good, gentle introduction into the mind-blowing world of functional programming. Learning FP can make you a better programmer in whatever language you typically use.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oe374", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oe374/", "num_reports": null, "stickied": false, "created": 1462138824.0, "author_flair_text": null, "created_utc": 1462110024.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 46, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 29, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2og4om", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "2Punx2Furious", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ofysp", "score": 29, "approved_by": null, "downs": 0, "body": "&gt; so I have a better understanding not only of what my code does, but where the potential for bunny-murder is.\n\n/r/nocontext  ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;so I have a better understanding not only of what my code does, but where the potential for bunny-murder is.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=\"/r/nocontext\"&gt;/r/nocontext&lt;/a&gt;  &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2og4om", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2og4om/", "num_reports": null, "stickied": false, "created": 1462143178.0, "author_flair_text": null, "created_utc": 1462114378.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2oipe3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "iamdelf", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ofysp", "score": 2, "approved_by": null, "downs": 0, "body": "And if nothing else Haskell will teach you to think differently. I found that it was much easier to write and think about parallel code.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;And if nothing else Haskell will teach you to think differently. I found that it was much easier to write and think about parallel code.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oipe3", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oipe3/", "num_reports": null, "stickied": false, "created": 1462147802.0, "author_flair_text": null, "created_utc": 1462119002.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ofysp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "kahnpro", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwcv", "score": 46, "approved_by": null, "downs": 0, "body": "You can have them. It's just strictly controlled and reduced as much as possible. \n\nFunctional programming is all about side-effects. A function that mutates some variable, or makes http calls, is a hidden iceberg of complexity. They are hidden depenencies. Hidden inputs and outputs. Consider this function:\n\n    function add(x) {\n      fireNuclearMissiles();\n      y += x;\n    }\n\nIt looks like it only has one input, and no outputs. But in reality, it depends on the variable `y` being set, and not being `undefined`. It also seems like it fires off some nuclear missiles, so it also depends on some external missile-firing function. And `fireNuclearMissiles()` may do all sorts of crazy stuff, like end human civilization. And after this function runs, the state of the \"world\" has changed, so even though it doesn't look like it returns anything, it does have a hidden \"output\".\n\nHaskell lets us separate the \"pure\" code that doesn't have side-effects, and the \"impure\" code that does have these side-effects. It also documents these side-effects and \"hidden\" inputs and outputs in the type signatures, so they are no longer hidden. Then we put as much logic as possible into our pure code, and as little as possible into our impure code. To me there are (at least) two big wins:\n\n* Knowing wtf is going on. I know that a function `add :: Int -&gt; Int -&gt; Int` probably just adds two numbers and returns the result, and isn't going to murder cute bunnies. By reducing the surface area of your impure code, it's easier to manage and understand, so I have a better understanding not only of what my code does, but where the potential for bunny-murder is.\n\n* Optimization. The compiler can do *massive* optimizations to your pure code. Because it knows that your code doesn't rely on external side-effects, it can use mathematical rules to completely rewrite it without changing its output. It also helps garbage collection, since the object tree is a lot simpler. *In general*, new objects can only point to old objects. Laziness complicates this, but that's another matter not strictly related to functional programming.", "edited": 1462129633.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can have them. It&amp;#39;s just strictly controlled and reduced as much as possible. &lt;/p&gt;\n\n&lt;p&gt;Functional programming is all about side-effects. A function that mutates some variable, or makes http calls, is a hidden iceberg of complexity. They are hidden depenencies. Hidden inputs and outputs. Consider this function:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function add(x) {\n  fireNuclearMissiles();\n  y += x;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It looks like it only has one input, and no outputs. But in reality, it depends on the variable &lt;code&gt;y&lt;/code&gt; being set, and not being &lt;code&gt;undefined&lt;/code&gt;. It also seems like it fires off some nuclear missiles, so it also depends on some external missile-firing function. And &lt;code&gt;fireNuclearMissiles()&lt;/code&gt; may do all sorts of crazy stuff, like end human civilization. And after this function runs, the state of the &amp;quot;world&amp;quot; has changed, so even though it doesn&amp;#39;t look like it returns anything, it does have a hidden &amp;quot;output&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;Haskell lets us separate the &amp;quot;pure&amp;quot; code that doesn&amp;#39;t have side-effects, and the &amp;quot;impure&amp;quot; code that does have these side-effects. It also documents these side-effects and &amp;quot;hidden&amp;quot; inputs and outputs in the type signatures, so they are no longer hidden. Then we put as much logic as possible into our pure code, and as little as possible into our impure code. To me there are (at least) two big wins:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Knowing wtf is going on. I know that a function &lt;code&gt;add :: Int -&amp;gt; Int -&amp;gt; Int&lt;/code&gt; probably just adds two numbers and returns the result, and isn&amp;#39;t going to murder cute bunnies. By reducing the surface area of your impure code, it&amp;#39;s easier to manage and understand, so I have a better understanding not only of what my code does, but where the potential for bunny-murder is.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Optimization. The compiler can do &lt;em&gt;massive&lt;/em&gt; optimizations to your pure code. Because it knows that your code doesn&amp;#39;t rely on external side-effects, it can use mathematical rules to completely rewrite it without changing its output. It also helps garbage collection, since the object tree is a lot simpler. &lt;em&gt;In general&lt;/em&gt;, new objects can only point to old objects. Laziness complicates this, but that&amp;#39;s another matter not strictly related to functional programming.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ofysp", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ofysp/", "num_reports": null, "stickied": false, "created": 1462142870.0, "author_flair_text": null, "created_utc": 1462114070.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 7, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2p805d", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "12tales", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2p3bxw", "score": 3, "approved_by": null, "downs": 0, "body": "Yep, I'm familiar with all that. I wrote my post because your claim - that the lambda calculus is as powerful as a Turing machine - didn't make it explicit that the Turing machine is also as powerful as the lambda calculus. Somebody unfamiliar with the theory might reasonably come away with the assumption that the lambda calculus is superior to the Turing machine, as opposed to isomorphic.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yep, I&amp;#39;m familiar with all that. I wrote my post because your claim - that the lambda calculus is as powerful as a Turing machine - didn&amp;#39;t make it explicit that the Turing machine is also as powerful as the lambda calculus. Somebody unfamiliar with the theory might reasonably come away with the assumption that the lambda calculus is superior to the Turing machine, as opposed to isomorphic.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p805d", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p805d/", "num_reports": null, "stickied": false, "created": 1462187585.0, "author_flair_text": null, "created_utc": 1462158785.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2p3bxw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "lanemik", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2p1p0n", "score": 3, "approved_by": null, "downs": 0, "body": "This is what it means to be \"just as powerful\" in the context of languages. Turing machines, for example, are more powerful than Push Down Automata since a TM can recognize every language a PDA can recognize and (a whole lot) more. However, a single tape TM is just as powerful as a multi-tape TM since there is no language that a multi-tape TM can recognize that a single tape TM cannot recognize. (I realize these are mere assertions, but there are formal proofs to back all these statements up.)", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is what it means to be &amp;quot;just as powerful&amp;quot; in the context of languages. Turing machines, for example, are more powerful than Push Down Automata since a TM can recognize every language a PDA can recognize and (a whole lot) more. However, a single tape TM is just as powerful as a multi-tape TM since there is no language that a multi-tape TM can recognize that a single tape TM cannot recognize. (I realize these are mere assertions, but there are formal proofs to back all these statements up.)&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p3bxw", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p3bxw/", "num_reports": null, "stickied": false, "created": 1462180929.0, "author_flair_text": null, "created_utc": 1462152129.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2p1p0n", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "12tales", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ohs4f", "score": 2, "approved_by": null, "downs": 0, "body": "Even more than being just as powerful, I believe there's a formal proof out there that the lambda calculus and the Turing machine are the same thing. That is, the domains of the problems they can solve overlap exactly.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Even more than being just as powerful, I believe there&amp;#39;s a formal proof out there that the lambda calculus and the Turing machine are the same thing. That is, the domains of the problems they can solve overlap exactly.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p1p0n", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p1p0n/", "num_reports": null, "stickied": false, "created": 1462178325.0, "author_flair_text": null, "created_utc": 1462149525.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ohs4f", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "lanemik", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwcv", "score": 7, "approved_by": null, "downs": 0, "body": "Haven't gotten to the lambda calculus in class yet, it'll be in a few weeks, but I do know that lambda calculus (which is the basis of functional programming) is as powerful as a Turing machine (the basis of imperative programming), and hence there isn't anything a \"normal\" program can do that a functional program cannot do.\n\nOf course the machines themselves, our computers, are state-based and things like what is in memory or what is being displayed on the screen is subject to some change of state. So there has to be some interface to that. Some functional programming languages aren't purely functional and those that are, like Haskell, have a way to handle the differences (these are monads in Haskell). ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haven&amp;#39;t gotten to the lambda calculus in class yet, it&amp;#39;ll be in a few weeks, but I do know that lambda calculus (which is the basis of functional programming) is as powerful as a Turing machine (the basis of imperative programming), and hence there isn&amp;#39;t anything a &amp;quot;normal&amp;quot; program can do that a functional program cannot do.&lt;/p&gt;\n\n&lt;p&gt;Of course the machines themselves, our computers, are state-based and things like what is in memory or what is being displayed on the screen is subject to some change of state. So there has to be some interface to that. Some functional programming languages aren&amp;#39;t purely functional and those that are, like Haskell, have a way to handle the differences (these are monads in Haskell). &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ohs4f", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ohs4f/", "num_reports": null, "stickied": false, "created": 1462146188.0, "author_flair_text": null, "created_utc": 1462117388.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2ot4as", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2op20g", "score": 6, "approved_by": null, "downs": 0, "body": "But even that is technically not \"real\" state, as it is just a series of function calls with the \"state\" passed between them. Like you can write a State monad yourself in pure Haskell without ever using IO or unsafePerformIO.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;But even that is technically not &amp;quot;real&amp;quot; state, as it is just a series of function calls with the &amp;quot;state&amp;quot; passed between them. Like you can write a State monad yourself in pure Haskell without ever using IO or unsafePerformIO.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ot4as", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ot4as/", "num_reports": null, "stickied": false, "created": 1462164216.0, "author_flair_text": null, "created_utc": 1462135416.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2op20g", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "[deleted]", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oe3q3", "score": 1, "approved_by": null, "downs": 0, "body": "[deleted]", "edited": 1475442638.0, "author_flair_css_class": null, "collapsed": true, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": false, "subreddit": "ProgrammerHumor", "name": "t1_d2op20g", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2op20g/", "num_reports": null, "stickied": false, "created": 1462157936.0, "author_flair_text": null, "created_utc": 1462129136.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oe3q3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Cyph0n", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwcv", "score": 5, "approved_by": null, "downs": 0, "body": "Yes, you can't have mutable variables. But without state it's much easier to reason about your program's behavior.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, you can&amp;#39;t have mutable variables. But without state it&amp;#39;s much easier to reason about your program&amp;#39;s behavior.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oe3q3", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oe3q3/", "num_reports": null, "stickied": false, "created": 1462138857.0, "author_flair_text": null, "created_utc": 1462110057.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2pc9i8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "[deleted]", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2onerz", "score": 1, "approved_by": null, "downs": 0, "body": "It is so. I hope F# can take off in the .NET world. Although C# is a very mature language it is still limited by state. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It is so. I hope F# can take off in the .NET world. Although C# is a very mature language it is still limited by state. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": false, "subreddit": "ProgrammerHumor", "name": "t1_d2pc9i8", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2pc9i8/", "num_reports": null, "stickied": false, "created": 1462196401.0, "author_flair_text": null, "created_utc": 1462167601.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2onerz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "ABC_AlwaysBeCoding", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwcv", "score": 6, "approved_by": null, "downs": 0, "body": "Been doing Ruby for... a long time.\n\nMy conclusion is that state is bad and should be avoided at all costs due to its long term negative side effects on the code and your or your team's understanding of its increasingly complex effects on the world.\n\nI'm into Elixir now, it's based on Erlang but has Rubyish syntax. It's also purely functional.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Been doing Ruby for... a long time.&lt;/p&gt;\n\n&lt;p&gt;My conclusion is that state is bad and should be avoided at all costs due to its long term negative side effects on the code and your or your team&amp;#39;s understanding of its increasingly complex effects on the world.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m into Elixir now, it&amp;#39;s based on Erlang but has Rubyish syntax. It&amp;#39;s also purely functional.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2onerz", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2onerz/", "num_reports": null, "stickied": false, "created": 1462155368.0, "author_flair_text": null, "created_utc": 1462126568.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2orefy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "beerdude26", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwcv", "score": 5, "approved_by": null, "downs": 0, "body": "[Formally, it is exactly as powerful as the imperative programming paradigm](https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis).\n\nState and mutability are still possible, they are just modeled with pure functions - when you \"mutate\" a variable, a new value is written to the heap and the old one GCed. But functional programmers don't really use the emulations of mutability and state a lot, really. Which is good - it makes parallelization of a lot of code *really* simple. Data sharing between threads simply isn't a problem. Null references don't exist. It's nice.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis\"&gt;Formally, it is exactly as powerful as the imperative programming paradigm&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;State and mutability are still possible, they are just modeled with pure functions - when you &amp;quot;mutate&amp;quot; a variable, a new value is written to the heap and the old one GCed. But functional programmers don&amp;#39;t really use the emulations of mutability and state a lot, really. Which is good - it makes parallelization of a lot of code &lt;em&gt;really&lt;/em&gt; simple. Data sharing between threads simply isn&amp;#39;t a problem. Null references don&amp;#39;t exist. It&amp;#39;s nice.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2orefy", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2orefy/", "num_reports": null, "stickied": false, "created": 1462161572.0, "author_flair_text": null, "created_utc": 1462132772.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2ogizs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "NavarrB", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwcv", "score": 4, "approved_by": null, "downs": 0, "body": "There are cases where state is needed and cases where it isn't.\n\nThe best explanation for the usefulness of functional programming is the UNIX pipe operator. \n\nYou can still have variables of course, but the goal is that the same input for a function always returns the same output.\n\nUtilizing functional methodology where it should be and keeping your state machine small probably has profound results on the stability of a system.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There are cases where state is needed and cases where it isn&amp;#39;t.&lt;/p&gt;\n\n&lt;p&gt;The best explanation for the usefulness of functional programming is the UNIX pipe operator. &lt;/p&gt;\n\n&lt;p&gt;You can still have variables of course, but the goal is that the same input for a function always returns the same output.&lt;/p&gt;\n\n&lt;p&gt;Utilizing functional methodology where it should be and keeping your state machine small probably has profound results on the stability of a system.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ogizs", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ogizs/", "num_reports": null, "stickied": false, "created": 1462143914.0, "author_flair_text": null, "created_utc": 1462115114.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2oxrxv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "aaron552", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2owmib", "score": 4, "approved_by": null, "downs": 0, "body": "\n\n&gt;compilers are magic and they always know better than you.\n\n*Almost* always. Compiler bugs do exist, but the chances of running into one is generally astronomically low.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;compilers are magic and they always know better than you.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;em&gt;Almost&lt;/em&gt; always. Compiler bugs do exist, but the chances of running into one is generally astronomically low.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oxrxv", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oxrxv/", "num_reports": null, "stickied": false, "created": 1462171850.0, "author_flair_text": null, "created_utc": 1462143050.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 8, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "more", "data": {"count": 0, "name": "t1__", "id": "_", "parent_id": "t1_d2oy7r1", "depth": 10, "children": []}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oy7r1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "iTotzke", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ox7i1", "score": 2, "approved_by": null, "downs": 0, "body": "Blatantly wrong seems like a stretch. Blantly wrong here would be functional programs are almost always have less memory usage  than their imperative counter parts. [The answer is sometimes.](http://programmers.stackexchange.com/questions/180555/in-functional-programming-does-having-most-of-the-data-structures-immutable-req)\n\nThis is how I see it:\n\n&gt;So you could do something like this\n\nyes\n\n&gt;Wouldn't that use more memory since you're allocating 2 integers instead of just one?\n\nyes\\* *(if only assuming a naive compiler that doesn't look for things like this using lifetime analysis and whatnot.)*\n\n&gt;it could run faster\n\nyes\n\n&gt;compiler could do better optimizations\n\nyes *(this statement takes care of the 2nd one)*\n\n&gt;seems a bit counter-intuitive\n\nyes\n\n", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Blatantly wrong seems like a stretch. Blantly wrong here would be functional programs are almost always have less memory usage  than their imperative counter parts. &lt;a href=\"http://programmers.stackexchange.com/questions/180555/in-functional-programming-does-having-most-of-the-data-structures-immutable-req\"&gt;The answer is sometimes.&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This is how I see it:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;So you could do something like this&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;yes&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Wouldn&amp;#39;t that use more memory since you&amp;#39;re allocating 2 integers instead of just one?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;yes* &lt;em&gt;(if only assuming a naive compiler that doesn&amp;#39;t look for things like this using lifetime analysis and whatnot.)&lt;/em&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;it could run faster&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;yes&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;compiler could do better optimizations&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;yes &lt;em&gt;(this statement takes care of the 2nd one)&lt;/em&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;seems a bit counter-intuitive&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;yes&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oy7r1", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oy7r1/", "num_reports": null, "stickied": false, "created": 1462172602.0, "author_flair_text": null, "created_utc": 1462143802.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 9, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ox7i1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2owmib", "score": 2, "approved_by": null, "downs": 0, "body": "&gt; aren't the best kind of correct\n\nThat is hardly the same as blatantly wrong and not at all in a benign way. It is just straight up misinformation, and it may turn some people away from functional programming for no good reason, as a good compiler makes functional programming pretty darn memory efficient.\n", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;aren&amp;#39;t the best kind of correct&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;That is hardly the same as blatantly wrong and not at all in a benign way. It is just straight up misinformation, and it may turn some people away from functional programming for no good reason, as a good compiler makes functional programming pretty darn memory efficient.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ox7i1", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ox7i1/", "num_reports": null, "stickied": false, "created": 1462170880.0, "author_flair_text": null, "created_utc": 1462142080.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 8, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2owmib", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "iTotzke", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oukw6", "score": 1, "approved_by": null, "downs": 0, "body": "For off handed questions, I'm a fan of giving big picture answers even if they aren't the best kind of correct. That and compilers are magic and they always know better than you.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;For off handed questions, I&amp;#39;m a fan of giving big picture answers even if they aren&amp;#39;t the best kind of correct. That and compilers are magic and they always know better than you.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2owmib", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2owmib/", "num_reports": null, "stickied": false, "created": 1462169914.0, "author_flair_text": null, "created_utc": 1462141114.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oukw6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2om5n0", "score": 5, "approved_by": null, "downs": 0, "body": "Only assuming a naive compiler that doesn't look for things like this using lifetime analysis and whatnot.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Only assuming a naive compiler that doesn&amp;#39;t look for things like this using lifetime analysis and whatnot.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oukw6", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oukw6/", "num_reports": null, "stickied": false, "created": 1462166555.0, "author_flair_text": null, "created_utc": 1462137755.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2om5n0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "iTotzke", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2om23b", "score": 6, "approved_by": null, "downs": 0, "body": "yes", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;yes&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2om5n0", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2om5n0/", "num_reports": null, "stickied": false, "created": 1462153409.0, "author_flair_text": null, "created_utc": 1462124609.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2p2dxa", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "bacondev", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2om23b", "score": 4, "approved_by": null, "downs": 0, "body": "Possibly, but this can easily be fixed in some cases. Consider this factorial function:\n\n    def fact(n):\n        product = 1\n\n        while n &gt; 0:\n            product *= n\n            n -= 1\n\n        return product\n\n^(I'm using Python syntax for readability, but these examples don't apply to Python since Python doesn't have tail recursion elimination.)\n\nNothing too crazy going on there, but let's try this recursively:\n\n    def fact(n):\n        if n == 0:\n            return 1\n\n        return n * fact(n - 1)\n\nEvery time that we call `fact` we are creating an entirely new environment which includes its own `n`. So this uses a linear amount of memory as compared to the constant amount of memory in the first example. But we're not using state! So how can we do both? How can we not waste memory but not use state? The answer lies in tail recursion elimination.\n\nConsider the previous example. The return value is `n` times the return value of `fact(n - 1)`. In order to return a value, it must evaluated `fact(n - 1)`. But then that function would need to evaluate `fact(n - 1)` before returning a value. And so on. This is nothing like a `while` loop. This next technique is a rather strange jump, but with practice it comes easily. What if you could structure the function such that the last function call returns the value that we want\u2014not the first function call? You can actually do this by reversing the order in which the calculations are done. You'll usually need a helper function to do this too.\n\n    def fact(n):\n        def helper(n, product):\n            if n == 0:\n                return product\n\n            return helper(n - 1, n * product)\n\n        return helper(n, 1)\n\nNotice that the return value of both functions is the direct result of the next function call. Also note that this is actually pretty similar to our `while` loop. With each step, we are updating `product` to be `product * n` and `n` to be `n - 1`. Now the compiler or interpreter takes care of the rest of the work for us. It can optimize `fact` to look like this:\n\n    def fact(n):\n        product = 1\n\n    top:\n        if n == 0:\n            return product\n\n        product *= n\n        n -= 1\n\n        goto top\n\nPython doesn't have `goto` statements or line labels, but you get the idea. Compare this to the first example. This is pretty much exactly the same. Notice that we are back to using constant memory. So we basically just wrote a `while` loop without using any state at all.\n\nBut what about more complicated cases? What about the function to calculate a Fibonacci number? The following is the classic definition of such a function:\n\n    def fib(n):\n        if n == 0:\n            return 0\n\n        if n == 1:\n            return 1\n\n        return fib(n - 1) + fib(n - 2)\n\nHow in the world do you take advantage of tail recursion elimination here? Well, the end goal is to make this act like a `while` loop, so let's think of how this would look as a `while` loop.\n\n    def fib(n):\n        if n == 0:\n            return 0\n\n        if n == 1:\n            return 1\n\n        a = 0\n        b = 1\n\n        while n &gt; 2:\n           a, b = b, a + b\n           n -= 1\n\n       return a + b\n\nSo now we see that we need three stateful variables, so that translates to us needing three formal parameters in our helper function:\n\n    def fib(n):\n        if n == 0:\n            return 0\n\n        if n == 1:\n            return 1\n\n        def helper(n, a, b):\n            if n == 2:\n                return a + b\n\n            return helper(n - 1, b, a + b)\n\n       return helper(n, 0, 1)\n\nAgain, our compiler or interpreter will handle the rest for us:\n\n    def fib(n):\n        if n == 0:\n            return 0\n\n        if n == 1:\n            return 1\n\n        a = 0\n        a = 1\n\n    top:\n        if n == 2:\n            return a + b\n\n        a, b = b, a + b\n        n -= 1\n\n        goto top\n\nAgain, compare this with our `while` loop implementation and notice that it's pretty much exactly the same thing. So the idea is to identity the state variables that you need so that you can create a function that has a copy of each state.\n\nSo now you might be asking why one would go through all of that effort to eliminate state. The big reason is memoization. Many functional programming languages memoize (or cache) the return values of function calls. For example, once I execute `fib(100)`, the program can memoize the return value and would never have to run those calculations ever again. With `fib(100)`, this isn't too much a problem as the iterative and tail recursive solutions are fairly cheap\u2014don't even bother trying to do that with the na\u00efve implementation\u2014but imagine `fib(1000000)`. That might take a few seconds. And then let's say that we want to do `fib(1000001)`. Do we really want to wait a few seconds for the program to redo all of those calculations that it's already done? This is where memoization comes in handy.\n\nFor many applications, this isn't particularly important since such calculations are rare. That's why you'll notice that Haskell and other functional programming languages are largely used in education and research. It doesn't often have many commercial benefits, especially since most commercial applications are very state heavy (e.g. databases, logging, authentication, GUIs, etc.). While that can all be done in Haskell via monads, it becomes a bit tedious to the point that you might as well program in an imperative programming language. Many languages such as Python recognize this and still offer functional features so that you can still get the benefits of functional programming while still using imperative styles.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Possibly, but this can easily be fixed in some cases. Consider this factorial function:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def fact(n):\n    product = 1\n\n    while n &amp;gt; 0:\n        product *= n\n        n -= 1\n\n    return product\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;sup&gt;I&amp;#39;m using Python syntax for readability, but these examples don&amp;#39;t apply to Python since Python doesn&amp;#39;t have tail recursion elimination.&lt;/sup&gt;&lt;/p&gt;\n\n&lt;p&gt;Nothing too crazy going on there, but let&amp;#39;s try this recursively:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def fact(n):\n    if n == 0:\n        return 1\n\n    return n * fact(n - 1)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Every time that we call &lt;code&gt;fact&lt;/code&gt; we are creating an entirely new environment which includes its own &lt;code&gt;n&lt;/code&gt;. So this uses a linear amount of memory as compared to the constant amount of memory in the first example. But we&amp;#39;re not using state! So how can we do both? How can we not waste memory but not use state? The answer lies in tail recursion elimination.&lt;/p&gt;\n\n&lt;p&gt;Consider the previous example. The return value is &lt;code&gt;n&lt;/code&gt; times the return value of &lt;code&gt;fact(n - 1)&lt;/code&gt;. In order to return a value, it must evaluated &lt;code&gt;fact(n - 1)&lt;/code&gt;. But then that function would need to evaluate &lt;code&gt;fact(n - 1)&lt;/code&gt; before returning a value. And so on. This is nothing like a &lt;code&gt;while&lt;/code&gt; loop. This next technique is a rather strange jump, but with practice it comes easily. What if you could structure the function such that the last function call returns the value that we want\u2014not the first function call? You can actually do this by reversing the order in which the calculations are done. You&amp;#39;ll usually need a helper function to do this too.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def fact(n):\n    def helper(n, product):\n        if n == 0:\n            return product\n\n        return helper(n - 1, n * product)\n\n    return helper(n, 1)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Notice that the return value of both functions is the direct result of the next function call. Also note that this is actually pretty similar to our &lt;code&gt;while&lt;/code&gt; loop. With each step, we are updating &lt;code&gt;product&lt;/code&gt; to be &lt;code&gt;product * n&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt; to be &lt;code&gt;n - 1&lt;/code&gt;. Now the compiler or interpreter takes care of the rest of the work for us. It can optimize &lt;code&gt;fact&lt;/code&gt; to look like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def fact(n):\n    product = 1\n\ntop:\n    if n == 0:\n        return product\n\n    product *= n\n    n -= 1\n\n    goto top\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Python doesn&amp;#39;t have &lt;code&gt;goto&lt;/code&gt; statements or line labels, but you get the idea. Compare this to the first example. This is pretty much exactly the same. Notice that we are back to using constant memory. So we basically just wrote a &lt;code&gt;while&lt;/code&gt; loop without using any state at all.&lt;/p&gt;\n\n&lt;p&gt;But what about more complicated cases? What about the function to calculate a Fibonacci number? The following is the classic definition of such a function:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def fib(n):\n    if n == 0:\n        return 0\n\n    if n == 1:\n        return 1\n\n    return fib(n - 1) + fib(n - 2)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;How in the world do you take advantage of tail recursion elimination here? Well, the end goal is to make this act like a &lt;code&gt;while&lt;/code&gt; loop, so let&amp;#39;s think of how this would look as a &lt;code&gt;while&lt;/code&gt; loop.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def fib(n):\n    if n == 0:\n        return 0\n\n    if n == 1:\n        return 1\n\n    a = 0\n    b = 1\n\n    while n &amp;gt; 2:\n       a, b = b, a + b\n       n -= 1\n\n   return a + b\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So now we see that we need three stateful variables, so that translates to us needing three formal parameters in our helper function:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def fib(n):\n    if n == 0:\n        return 0\n\n    if n == 1:\n        return 1\n\n    def helper(n, a, b):\n        if n == 2:\n            return a + b\n\n        return helper(n - 1, b, a + b)\n\n   return helper(n, 0, 1)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Again, our compiler or interpreter will handle the rest for us:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def fib(n):\n    if n == 0:\n        return 0\n\n    if n == 1:\n        return 1\n\n    a = 0\n    a = 1\n\ntop:\n    if n == 2:\n        return a + b\n\n    a, b = b, a + b\n    n -= 1\n\n    goto top\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Again, compare this with our &lt;code&gt;while&lt;/code&gt; loop implementation and notice that it&amp;#39;s pretty much exactly the same thing. So the idea is to identity the state variables that you need so that you can create a function that has a copy of each state.&lt;/p&gt;\n\n&lt;p&gt;So now you might be asking why one would go through all of that effort to eliminate state. The big reason is memoization. Many functional programming languages memoize (or cache) the return values of function calls. For example, once I execute &lt;code&gt;fib(100)&lt;/code&gt;, the program can memoize the return value and would never have to run those calculations ever again. With &lt;code&gt;fib(100)&lt;/code&gt;, this isn&amp;#39;t too much a problem as the iterative and tail recursive solutions are fairly cheap\u2014don&amp;#39;t even bother trying to do that with the na\u00efve implementation\u2014but imagine &lt;code&gt;fib(1000000)&lt;/code&gt;. That might take a few seconds. And then let&amp;#39;s say that we want to do &lt;code&gt;fib(1000001)&lt;/code&gt;. Do we really want to wait a few seconds for the program to redo all of those calculations that it&amp;#39;s already done? This is where memoization comes in handy.&lt;/p&gt;\n\n&lt;p&gt;For many applications, this isn&amp;#39;t particularly important since such calculations are rare. That&amp;#39;s why you&amp;#39;ll notice that Haskell and other functional programming languages are largely used in education and research. It doesn&amp;#39;t often have many commercial benefits, especially since most commercial applications are very state heavy (e.g. databases, logging, authentication, GUIs, etc.). While that can all be done in Haskell via monads, it becomes a bit tedious to the point that you might as well program in an imperative programming language. Many languages such as Python recognize this and still offer functional features so that you can still get the benefits of functional programming while still using imperative styles.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p2dxa", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p2dxa/", "num_reports": null, "stickied": false, "created": 1462179436.0, "author_flair_text": null, "created_utc": 1462150636.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2oug2d", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oqcpo", "score": 6, "approved_by": null, "downs": 0, "body": "&gt; unless you have some very sophisticated logic to retire no-longer-used variables before they pile up too high.\n\ne.g: GHC", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;unless you have some very sophisticated logic to retire no-longer-used variables before they pile up too high.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;e.g: GHC&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oug2d", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oug2d/", "num_reports": null, "stickied": false, "created": 1462166346.0, "author_flair_text": null, "created_utc": 1462137546.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2oqrbl", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "lanemik", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oqcpo", "score": 5, "approved_by": null, "downs": 0, "body": "This is why garbage collectors were invented. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is why garbage collectors were invented. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oqrbl", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oqrbl/", "num_reports": null, "stickied": false, "created": 1462160584.0, "author_flair_text": null, "created_utc": 1462131784.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oqcpo", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Bounty1Berry", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2one7f", "score": 1, "approved_by": null, "downs": 0, "body": "Memory is plentiful but cache space isn't.  A series of x_n=x_n-1+1 operations will toich more addresses than x=x+1 operations, blowing out your cache, unless you have some very sophisticated logic to retire no-longer-used variables before they pile up too high.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Memory is plentiful but cache space isn&amp;#39;t.  A series of x_n=x_n-1+1 operations will toich more addresses than x=x+1 operations, blowing out your cache, unless you have some very sophisticated logic to retire no-longer-used variables before they pile up too high.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oqcpo", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oqcpo/", "num_reports": null, "stickied": false, "created": 1462159947.0, "author_flair_text": null, "created_utc": 1462131147.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2one7f", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Beakerbite", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2om23b", "score": 4, "approved_by": null, "downs": 0, "body": "Functional programming is very memory wasteful but we are in an age were memory is plentiful. It's a trade off between programmer time and the potential for bugs versus pure optimization. We already make that choice in other ways too, such as using managed languages like C#/Java.\n\nIt wouldn't be a good system to use if you were programming to specific hardware that had limited memory but you'd probably have to make other optimization choices that made the software more difficult to manage.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Functional programming is very memory wasteful but we are in an age were memory is plentiful. It&amp;#39;s a trade off between programmer time and the potential for bugs versus pure optimization. We already make that choice in other ways too, such as using managed languages like C#/Java.&lt;/p&gt;\n\n&lt;p&gt;It wouldn&amp;#39;t be a good system to use if you were programming to specific hardware that had limited memory but you&amp;#39;d probably have to make other optimization choices that made the software more difficult to manage.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2one7f", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2one7f/", "num_reports": null, "stickied": false, "created": 1462155341.0, "author_flair_text": null, "created_utc": 1462126541.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2ouj29", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2om23b", "score": 2, "approved_by": null, "downs": 0, "body": "The compiler can easily optimize those away so that under the covers `x = 5` `y = x - 3` is converted to `x = 5` `x -= 3` as long as you never reference `x` later on. And if that seems like a harsh requirement (not referencing `x` again) it is absolutely NOT, because if you had mutated `x` directly (such as in an imperative language) you would not be able to reference it again even if you really really wanted to.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The compiler can easily optimize those away so that under the covers &lt;code&gt;x = 5&lt;/code&gt; &lt;code&gt;y = x - 3&lt;/code&gt; is converted to &lt;code&gt;x = 5&lt;/code&gt; &lt;code&gt;x -= 3&lt;/code&gt; as long as you never reference &lt;code&gt;x&lt;/code&gt; later on. And if that seems like a harsh requirement (not referencing &lt;code&gt;x&lt;/code&gt; again) it is absolutely NOT, because if you had mutated &lt;code&gt;x&lt;/code&gt; directly (such as in an imperative language) you would not be able to reference it again even if you really really wanted to.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ouj29", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ouj29/", "num_reports": null, "stickied": false, "created": 1462166474.0, "author_flair_text": null, "created_utc": 1462137674.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2om23b", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "2Punx2Furious", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2olq7o", "score": 3, "approved_by": null, "downs": 0, "body": "So you could do something like\n\n    x = 5;\n    \n    y = x-3;\n    \n    //instead of \n    \n    x = x-3;\n\nWouldn't that use more memory since you're allocating 2 integers instad of just one?   \nAnyway, I can see how it could run faster, as another comment explained, the compiler could do better optimizations, still it seems a bit counter-intuitive.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So you could do something like&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;x = 5;\n\ny = x-3;\n\n//instead of \n\nx = x-3;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Wouldn&amp;#39;t that use more memory since you&amp;#39;re allocating 2 integers instad of just one?&lt;br/&gt;\nAnyway, I can see how it could run faster, as another comment explained, the compiler could do better optimizations, still it seems a bit counter-intuitive.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2om23b", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2om23b/", "num_reports": null, "stickied": false, "created": 1462153256.0, "author_flair_text": null, "created_utc": 1462124456.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2olq7o", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "iTotzke", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwcv", "score": 5, "approved_by": null, "downs": 0, "body": "If you need to \"modify\" a variable, you just create a new variable and use that one as if it was the first. \n\nThat way you don't have issues with other functions modifying your objects when you pass them to other functions.\n\nTypically these programs run much faster.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you need to &amp;quot;modify&amp;quot; a variable, you just create a new variable and use that one as if it was the first. &lt;/p&gt;\n\n&lt;p&gt;That way you don&amp;#39;t have issues with other functions modifying your objects when you pass them to other functions.&lt;/p&gt;\n\n&lt;p&gt;Typically these programs run much faster.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2olq7o", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2olq7o/", "num_reports": null, "stickied": false, "created": 1462152742.0, "author_flair_text": null, "created_utc": 1462123942.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2p1w0i", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "12tales", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oylnh", "score": 2, "approved_by": null, "downs": 0, "body": "&gt;That's because it's not the usual programming (which probably means iterative). It's easy to grok iterative, OOP, or declarative programming, because they have straightforward correspondents in the real world. FP does too, but it takes a bit of mind-bending.\n\nI've heard this before, and I don't think it's totally accurate. Pretty much ever math course you've had has taught you to solve problems in a functional style, for instance.\n\nI do recall reading a study that found that complete newcomers to programming had an easier time acclimating to FP than experienced OO programmers, so that's something. New paradigms might just be hard to grok for people who already 'know' how you're supposed to do stuff.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;That&amp;#39;s because it&amp;#39;s not the usual programming (which probably means iterative). It&amp;#39;s easy to grok iterative, OOP, or declarative programming, because they have straightforward correspondents in the real world. FP does too, but it takes a bit of mind-bending.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I&amp;#39;ve heard this before, and I don&amp;#39;t think it&amp;#39;s totally accurate. Pretty much ever math course you&amp;#39;ve had has taught you to solve problems in a functional style, for instance.&lt;/p&gt;\n\n&lt;p&gt;I do recall reading a study that found that complete newcomers to programming had an easier time acclimating to FP than experienced OO programmers, so that&amp;#39;s something. New paradigms might just be hard to grok for people who already &amp;#39;know&amp;#39; how you&amp;#39;re supposed to do stuff.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p1w0i", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p1w0i/", "num_reports": null, "stickied": false, "created": 1462178632.0, "author_flair_text": null, "created_utc": 1462149832.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oylnh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "kare_kano", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwcv", "score": 6, "approved_by": null, "downs": 0, "body": "That's because it's not the usual programming (which probably means iterative). It's easy to grok iterative, OOP, or declarative programming, because they have straightforward correspondents in the real world. FP does too, but it takes a bit of mind-bending.\n\nThink of FP like equations describing a mathematical system, or like a set of rules describing a mechanism with inputs, outputs, and transformations in between. This description doesn't \"do\" anything by itself, but once you start feeding numbers through the inputs you will get interesting (and useful) outputs, which can solve real programming problems. This approach has all kinds of specific advantages, such as being fast, reliable, and you can always hook up the outputs of one system to the inputs of another and get even more interesting results. And this is just the tip of the iceberg, we're talking mind-blowing stuff, like code/data duality and self-defining and self-modifying meta-languages.\n\nHere's a couple of pieces of introductory literature. [The Nature of Lisp](http://www.defmacro.org/ramblings/lisp.html) is a very nice intro to Lisp using other things for analogies. [Programming with Nothing](https://codon.com/programming-with-nothing) walks you through solving the FizzBuzz problem with Ruby, without using any numbers, booleans, strings, or lists (and it's actually a stealth introduction to lambda calculus).", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s because it&amp;#39;s not the usual programming (which probably means iterative). It&amp;#39;s easy to grok iterative, OOP, or declarative programming, because they have straightforward correspondents in the real world. FP does too, but it takes a bit of mind-bending.&lt;/p&gt;\n\n&lt;p&gt;Think of FP like equations describing a mathematical system, or like a set of rules describing a mechanism with inputs, outputs, and transformations in between. This description doesn&amp;#39;t &amp;quot;do&amp;quot; anything by itself, but once you start feeding numbers through the inputs you will get interesting (and useful) outputs, which can solve real programming problems. This approach has all kinds of specific advantages, such as being fast, reliable, and you can always hook up the outputs of one system to the inputs of another and get even more interesting results. And this is just the tip of the iceberg, we&amp;#39;re talking mind-blowing stuff, like code/data duality and self-defining and self-modifying meta-languages.&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s a couple of pieces of introductory literature. &lt;a href=\"http://www.defmacro.org/ramblings/lisp.html\"&gt;The Nature of Lisp&lt;/a&gt; is a very nice intro to Lisp using other things for analogies. &lt;a href=\"https://codon.com/programming-with-nothing\"&gt;Programming with Nothing&lt;/a&gt; walks you through solving the FizzBuzz problem with Ruby, without using any numbers, booleans, strings, or lists (and it&amp;#39;s actually a stealth introduction to lambda calculus).&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oylnh", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oylnh/", "num_reports": null, "stickied": false, "created": 1462173282.0, "author_flair_text": null, "created_utc": 1462144482.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2ol540", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "the_great_ganonderp", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwcv", "score": 3, "approved_by": null, "downs": 0, "body": "Haskell (and presumably many other functional languages) makes heavy use of persistent data structures e.g. inserting an element into a tree map returns a new tree map that re-uses the nodes of the old one except in the path to where the new node went. So, you can get a modified \"copy\" of an existing data structure pretty easily and relatively efficiently, but doing so doesn't change the old copy that may be referenced in other places in your program, including in other threads.\n\nThat by itself isn't very hard to understand. For me, the tricky thing about learning Haskell was understanding the various abstractions that it uses to mimic stateful programming (State, ST, ..), side effects (IO, ST), and monad transformer stacks in general. It's well worth it, though, and not just a curiosity; IMO Haskell is a powerful, practical choice for all sorts of real world applications.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell (and presumably many other functional languages) makes heavy use of persistent data structures e.g. inserting an element into a tree map returns a new tree map that re-uses the nodes of the old one except in the path to where the new node went. So, you can get a modified &amp;quot;copy&amp;quot; of an existing data structure pretty easily and relatively efficiently, but doing so doesn&amp;#39;t change the old copy that may be referenced in other places in your program, including in other threads.&lt;/p&gt;\n\n&lt;p&gt;That by itself isn&amp;#39;t very hard to understand. For me, the tricky thing about learning Haskell was understanding the various abstractions that it uses to mimic stateful programming (State, ST, ..), side effects (IO, ST), and monad transformer stacks in general. It&amp;#39;s well worth it, though, and not just a curiosity; IMO Haskell is a powerful, practical choice for all sorts of real world applications.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ol540", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ol540/", "num_reports": null, "stickied": false, "created": 1462151846.0, "author_flair_text": null, "created_utc": 1462123046.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2op9ox", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Booty_Bumping", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwcv", "score": 3, "approved_by": null, "downs": 0, "body": "With pure functional programming, basically yes. Haskell forces you to jump through some loops to do anything involving mutation, including I/O like editing files or making HTTP requests. All of this abstraction ensures a very safe program that can be multi-threaded without too many issues.\n\nMost languages with functional features aren't actually as strict as pure functional languages.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;With pure functional programming, basically yes. Haskell forces you to jump through some loops to do anything involving mutation, including I/O like editing files or making HTTP requests. All of this abstraction ensures a very safe program that can be multi-threaded without too many issues.&lt;/p&gt;\n\n&lt;p&gt;Most languages with functional features aren&amp;#39;t actually as strict as pure functional languages.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2op9ox", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2op9ox/", "num_reports": null, "stickied": false, "created": 1462158269.0, "author_flair_text": null, "created_utc": 1462129469.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2oqngd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "2Punx2Furious", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oqly5", "score": 1, "approved_by": null, "downs": 0, "body": "Good point.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Good point.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oqngd", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oqngd/", "num_reports": null, "stickied": false, "created": 1462160417.0, "author_flair_text": null, "created_utc": 1462131617.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oqly5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "foot_kisser", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwcv", "score": 3, "approved_by": null, "downs": 0, "body": "It's a limitation in the same way that not being allowed to use gotos is a limitation.  It prevents you from messing up in certain ways; most of the uses you would have made of the banned feature can be done with other features; and there are 2 kinds of languages, those that ban the feature entirely and those that have the feature, but strongly discourage its use except when absolutely necessary.  ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s a limitation in the same way that not being allowed to use gotos is a limitation.  It prevents you from messing up in certain ways; most of the uses you would have made of the banned feature can be done with other features; and there are 2 kinds of languages, those that ban the feature entirely and those that have the feature, but strongly discourage its use except when absolutely necessary.  &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oqly5", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oqly5/", "num_reports": null, "stickied": false, "created": 1462160352.0, "author_flair_text": null, "created_utc": 1462131552.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2ox5nt", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "ianme", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwcv", "score": 2, "approved_by": null, "downs": 0, "body": "Data can still be transformed, but the old value is always available to use. Immutable data structures are implemented with trees, so memory can be shared across versions of that data, and so that operations on immutable data have similar complexity as their mutable counterparts. This is a much better alternative to copy on write. \n\nThey still take up more space and they are still slightly slower, but they also have some huge advantages. For one thing, data never changes, so you can always expect a value to always be what it is. You can share it between threads and so on. Also, another thing that is overlooked is change detection. Want to see if a value has changed? Use reference equality. No need to do a deep comparison.\n\nObviously, computers are giant state machines, so stateless programming isn't always an option. But a lot of the times, a functional approach can yield simpler, easier to test code. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Data can still be transformed, but the old value is always available to use. Immutable data structures are implemented with trees, so memory can be shared across versions of that data, and so that operations on immutable data have similar complexity as their mutable counterparts. This is a much better alternative to copy on write. &lt;/p&gt;\n\n&lt;p&gt;They still take up more space and they are still slightly slower, but they also have some huge advantages. For one thing, data never changes, so you can always expect a value to always be what it is. You can share it between threads and so on. Also, another thing that is overlooked is change detection. Want to see if a value has changed? Use reference equality. No need to do a deep comparison.&lt;/p&gt;\n\n&lt;p&gt;Obviously, computers are giant state machines, so stateless programming isn&amp;#39;t always an option. But a lot of the times, a functional approach can yield simpler, easier to test code. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ox5nt", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ox5nt/", "num_reports": null, "stickied": false, "created": 1462170795.0, "author_flair_text": null, "created_utc": 1462141995.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2p9cm1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "serendependy", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwcv", "score": 2, "approved_by": null, "downs": 0, "body": "In Haskell and many other functional languages, you model \"statefulness\" with certain data structures. But honestly you need mutability much less than you'd think.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In Haskell and many other functional languages, you model &amp;quot;statefulness&amp;quot; with certain data structures. But honestly you need mutability much less than you&amp;#39;d think.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p9cm1", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p9cm1/", "num_reports": null, "stickied": false, "created": 1462189992.0, "author_flair_text": null, "created_utc": 1462161192.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": -9, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": -18, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 14, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2oic2f", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "l27_0_0_1", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ogj3a", "score": 14, "approved_by": null, "downs": 0, "body": "gr8 b8 m8 8/8", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;gr8 b8 m8 8/8&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oic2f", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oic2f/", "num_reports": null, "stickied": false, "created": 1462147160.0, "author_flair_text": null, "created_utc": 1462118360.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ogj3a", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Blurr11", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2og09v", "score": -18, "approved_by": null, "downs": 0, "body": "Don't worry it's a phase , like long hair. Everyone thinks it looks cool gives it a shot, decided that this is who they are now and then gets back to a proper language when they need to do something serious (&lt;- this is called baiting)", "edited": false, "author_flair_css_class": null, "collapsed": true, "is_submitter": false, "collapsed_reason": "comment score below threshold", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Don&amp;#39;t worry it&amp;#39;s a phase , like long hair. Everyone thinks it looks cool gives it a shot, decided that this is who they are now and then gets back to a proper language when they need to do something serious (&amp;lt;- this is called baiting)&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ogj3a", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ogj3a/", "num_reports": null, "stickied": false, "created": 1462143918.0, "author_flair_text": null, "created_utc": 1462115118.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2og09v", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "2Punx2Furious", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ofuj9", "score": 1, "approved_by": null, "downs": 0, "body": "ahha yeah, I'm getting so many replies.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;ahha yeah, I&amp;#39;m getting so many replies.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2og09v", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2og09v/", "num_reports": null, "stickied": false, "created": 1462142947.0, "author_flair_text": null, "created_utc": 1462114147.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ofuj9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Blurr11", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwcv", "score": -9, "approved_by": null, "downs": 0, "body": "Oh you poor child , you've set them off again. Don't worry you will learn. ", "edited": false, "author_flair_css_class": null, "collapsed": true, "is_submitter": false, "collapsed_reason": "comment score below threshold", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh you poor child , you&amp;#39;ve set them off again. Don&amp;#39;t worry you will learn. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ofuj9", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ofuj9/", "num_reports": null, "stickied": false, "created": 1462142629.0, "author_flair_text": null, "created_utc": 1462113829.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2odwcv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "2Punx2Furious", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odu4z", "score": 56, "approved_by": null, "downs": 0, "body": "So you can't have mutable variables? Can't modify anything? Maybe I'm misunderstanding, but it seems limited compared to \"normal\" programming.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So you can&amp;#39;t have mutable variables? Can&amp;#39;t modify anything? Maybe I&amp;#39;m misunderstanding, but it seems limited compared to &amp;quot;normal&amp;quot; programming.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2odwcv", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2odwcv/", "num_reports": null, "stickied": false, "created": 1462138378.0, "author_flair_text": null, "created_utc": 1462109578.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 7, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2okw20", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Artefact2", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odu4z", "score": 7, "approved_by": null, "downs": 0, "body": "There's more to it, it's actually a very clever name.\n\nSee, lambda calculus was invented by Alonzo Church. The title is also a play on words in regards to the separation of Church and State.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s more to it, it&amp;#39;s actually a very clever name.&lt;/p&gt;\n\n&lt;p&gt;See, lambda calculus was invented by Alonzo Church. The title is also a play on words in regards to the separation of Church and State.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2okw20", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2okw20/", "num_reports": null, "stickied": false, "created": 1462151442.0, "author_flair_text": null, "created_utc": 1462122642.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2ow7y9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "dimsuz", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odu4z", "score": 2, "approved_by": null, "downs": 0, "body": "This is not really true. You cannot program without state. Pure FP simply makes state explicit.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is not really true. You cannot program without state. Pure FP simply makes state explicit.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ow7y9", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ow7y9/", "num_reports": null, "stickied": false, "created": 1462169234.0, "author_flair_text": null, "created_utc": 1462140434.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2odu4z", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "brookllyn", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odqar", "score": 338, "approved_by": null, "downs": 0, "body": "Functional programming is all about removing state from your programs/functions and leaving them pure. Eg whenever you put any particular value in in you will always get the same value out.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Functional programming is all about removing state from your programs/functions and leaving them pure. Eg whenever you put any particular value in in you will always get the same value out.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2odu4z", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2odu4z/", "num_reports": null, "stickied": false, "created": 1462138225.0, "author_flair_text": null, "created_utc": 1462109425.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 18, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2odv0b", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "2Punx2Furious", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oduee", "score": 3, "approved_by": null, "downs": 0, "body": "Oh. Thanks. I really need to learn a functional programming language sooner or later.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh. Thanks. I really need to learn a functional programming language sooner or later.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2odv0b", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2odv0b/", "num_reports": null, "stickied": false, "created": 1462138284.0, "author_flair_text": null, "created_utc": 1462109484.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2ozcjs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "jewdai", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oduee", "score": 1, "approved_by": null, "downs": 0, "body": "it makes unit testing a breeze ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;it makes unit testing a breeze &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ozcjs", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ozcjs/", "num_reports": null, "stickied": false, "created": 1462174558.0, "author_flair_text": null, "created_utc": 1462145758.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oduee", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "doaderek", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odqar", "score": 18, "approved_by": null, "downs": 0, "body": "Functional programming is stateless", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Functional programming is stateless&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oduee", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oduee/", "num_reports": null, "stickied": false, "created": 1462138243.0, "author_flair_text": null, "created_utc": 1462109443.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 7, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 7, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2p23wn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "VodkaHaze", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2p19ge", "score": 1, "approved_by": null, "downs": 0, "body": "&gt; I'm pretty sure that praxeologist draw a strong distinction between pure hypothesis and historical analysis similar to theoretical and experimental physics.\n\nPoint is there's no experimental element to it. Even if you leave aside the ideological rejection of empirial evidence, verbal deduction doesn't lend itself to statistical testing the way a mathematical framework does. If something isn't rigidly defined in a mathematical sense, it's not consistently measurable.\n", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I&amp;#39;m pretty sure that praxeologist draw a strong distinction between pure hypothesis and historical analysis similar to theoretical and experimental physics.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Point is there&amp;#39;s no experimental element to it. Even if you leave aside the ideological rejection of empirial evidence, verbal deduction doesn&amp;#39;t lend itself to statistical testing the way a mathematical framework does. If something isn&amp;#39;t rigidly defined in a mathematical sense, it&amp;#39;s not consistently measurable.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p23wn", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p23wn/", "num_reports": null, "stickied": false, "created": 1462178987.0, "author_flair_text": null, "created_utc": 1462150187.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2p19ge", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "reluctantreddituser", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2p0fyg", "score": 6, "approved_by": null, "downs": 0, "body": "&gt; you do not accept empirical evidence to validate/disprove theorems.\n\nI'm pretty sure that praxeologist draw a strong distinction between pure hypothesis and historical analysis similar to theoretical and experimental physics.\n\nAnyway the point I was trying to get at is the play on *stateless* political economy and *stateless* programming languages.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;you do not accept empirical evidence to validate/disprove theorems.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I&amp;#39;m pretty sure that praxeologist draw a strong distinction between pure hypothesis and historical analysis similar to theoretical and experimental physics.&lt;/p&gt;\n\n&lt;p&gt;Anyway the point I was trying to get at is the play on &lt;em&gt;stateless&lt;/em&gt; political economy and &lt;em&gt;stateless&lt;/em&gt; programming languages.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p19ge", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p19ge/", "num_reports": null, "stickied": false, "created": 1462177639.0, "author_flair_text": null, "created_utc": 1462148839.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2p0fyg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "VodkaHaze", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oxdcj", "score": 7, "approved_by": null, "downs": 0, "body": "He also exclusively used [praxeology](https://en.wikipedia.org/wiki/Praxeology), the least scientific economic methodology in the history of the field. \n\nQuick breakdown: in praxeology, you deduce all your theorems a priori from axioms, and you do not accept empirical evidence to validate/disprove theorems. Theorems are what they are a priori. Also largely a rejection of math in favor of philosophy-style verbal arguments.\n\nLinking to Rothbard or Mises is the right-wing economics equivalent of linking to Marx in 2016. There's a reason these schools of thought are called \"heterodox economics\"; if their theories had proved useful they would be called \"economics\". All the solid aspects of Austrian economics have been integrated 50 years ago (like Hayek's work) and same for Marx a century ago.\n\nIf you like smaller-state stuff in modern economics the people you want to read are John Cochrane and Greg Mankiw, both of which are very respectable.", "edited": 1462147767.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;He also exclusively used &lt;a href=\"https://en.wikipedia.org/wiki/Praxeology\"&gt;praxeology&lt;/a&gt;, the least scientific economic methodology in the history of the field. &lt;/p&gt;\n\n&lt;p&gt;Quick breakdown: in praxeology, you deduce all your theorems a priori from axioms, and you do not accept empirical evidence to validate/disprove theorems. Theorems are what they are a priori. Also largely a rejection of math in favor of philosophy-style verbal arguments.&lt;/p&gt;\n\n&lt;p&gt;Linking to Rothbard or Mises is the right-wing economics equivalent of linking to Marx in 2016. There&amp;#39;s a reason these schools of thought are called &amp;quot;heterodox economics&amp;quot;; if their theories had proved useful they would be called &amp;quot;economics&amp;quot;. All the solid aspects of Austrian economics have been integrated 50 years ago (like Hayek&amp;#39;s work) and same for Marx a century ago.&lt;/p&gt;\n\n&lt;p&gt;If you like smaller-state stuff in modern economics the people you want to read are John Cochrane and Greg Mankiw, both of which are very respectable.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p0fyg", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p0fyg/", "num_reports": null, "stickied": false, "created": 1462176371.0, "author_flair_text": null, "created_utc": 1462147571.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oxdcj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "reluctantreddituser", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odqar", "score": 7, "approved_by": null, "downs": 0, "body": "Also to fill you in on Murry Rothbard, he was an economist who endorsed replacing the state (i.e. government, police, military, etc) with competing privately owned businesses. See /r/anarcho_capitalism for more.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Also to fill you in on Murry Rothbard, he was an economist who endorsed replacing the state (i.e. government, police, military, etc) with competing privately owned businesses. See &lt;a href=\"/r/anarcho_capitalism\"&gt;/r/anarcho_capitalism&lt;/a&gt; for more.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oxdcj", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oxdcj/", "num_reports": null, "stickied": false, "created": 1462171157.0, "author_flair_text": null, "created_utc": 1462142357.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2ov8ux", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "blanonymous", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oq434", "score": 6, "approved_by": null, "downs": 0, "body": "He was against the state", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;He was against the state&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ov8ux", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ov8ux/", "num_reports": null, "stickied": false, "created": 1462167632.0, "author_flair_text": null, "created_utc": 1462138832.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2pda4a", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "daterbase", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2p0qml", "score": 4, "approved_by": null, "downs": 0, "body": "LOL, it's Murray Rothbard but that is an hilarious resemblance and inside joke I'd never noticed before.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;LOL, it&amp;#39;s Murray Rothbard but that is an hilarious resemblance and inside joke I&amp;#39;d never noticed before.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2pda4a", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2pda4a/", "num_reports": null, "stickied": false, "created": 1462199171.0, "author_flair_text": null, "created_utc": 1462170371.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2p0qml", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "BeanzPatio", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oq434", "score": 3, "approved_by": null, "downs": 0, "body": "It's Gene Hackman, from the movie \"Enemy of the State\" \n\nhttp://iv1.lisimg.com/image/158453/520full-enemy-of-the-state-poster.jpg", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s Gene Hackman, from the movie &amp;quot;Enemy of the State&amp;quot; &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://iv1.lisimg.com/image/158453/520full-enemy-of-the-state-poster.jpg\"&gt;http://iv1.lisimg.com/image/158453/520full-enemy-of-the-state-poster.jpg&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p0qml", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p0qml/", "num_reports": null, "stickied": false, "created": 1462176849.0, "author_flair_text": null, "created_utc": 1462148049.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oq434", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "DAMN_it_Gary", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odwl0", "score": 3, "approved_by": null, "downs": 0, "body": "But is the guy in the picture related to the joke somehow? That's the part I don't get.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;But is the guy in the picture related to the joke somehow? That&amp;#39;s the part I don&amp;#39;t get.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oq434", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oq434/", "num_reports": null, "stickied": false, "created": 1462159581.0, "author_flair_text": null, "created_utc": 1462130781.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2odwl0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "BeanzPatio", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odqar", "score": 5, "approved_by": null, "downs": 0, "body": "The ideal of functional programming is to build state-less systems.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The ideal of functional programming is to build state-less systems.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2odwl0", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2odwl0/", "num_reports": null, "stickied": false, "created": 1462138393.0, "author_flair_text": null, "created_utc": 1462109593.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 13, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 11, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2ow0bb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oe3dw", "score": 11, "approved_by": null, "downs": 0, "body": "&gt; Stateless programming allows a designer to create a formal proof, but doing anything meaningful seems to require a math phd. It's to the point that even designers of safety critical systems don't consider it worth the money\n\nSuch a ridiculously wrong statement that I don't even know where to begin.\n\nI expected /r/ProgrammerHumor of all places to be computer and programming language literate enough to upvote complete and utter bullshit, but I guess I was wrong.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Stateless programming allows a designer to create a formal proof, but doing anything meaningful seems to require a math phd. It&amp;#39;s to the point that even designers of safety critical systems don&amp;#39;t consider it worth the money&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Such a ridiculously wrong statement that I don&amp;#39;t even know where to begin.&lt;/p&gt;\n\n&lt;p&gt;I expected &lt;a href=\"/r/ProgrammerHumor\"&gt;/r/ProgrammerHumor&lt;/a&gt; of all places to be computer and programming language literate enough to upvote complete and utter bullshit, but I guess I was wrong.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ow0bb", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ow0bb/", "num_reports": null, "stickied": false, "created": 1462168884.0, "author_flair_text": null, "created_utc": 1462140084.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 7, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2ow2c7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ol0ki", "score": 7, "approved_by": null, "downs": 0, "body": "He is totally wrong about that, and half of what he said honestly. Functional programming language and even pure functional programming languages (Haskell) are used in industry, even in ways that aren't safety-critical.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;He is totally wrong about that, and half of what he said honestly. Functional programming language and even pure functional programming languages (Haskell) are used in industry, even in ways that aren&amp;#39;t safety-critical.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ow2c7", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ow2c7/", "num_reports": null, "stickied": false, "created": 1462168975.0, "author_flair_text": null, "created_utc": 1462140175.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2rp86w", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Rudd-X", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2rh88d", "score": 1, "approved_by": null, "downs": 0, "body": "Correct.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Correct.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2rp86w", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2rp86w/", "num_reports": null, "stickied": false, "created": 1462346667.0, "author_flair_text": null, "created_utc": 1462317867.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2rh88d", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "scubascratch", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2rf0pb", "score": 1, "approved_by": null, "downs": 0, "body": "I think I just have a different definition of what the word unsafe means in the context of machinery. It is a real state which has to be accounted for, and a language definition of unsafe with regard to side effects is a different matter (which could also be useful) but the language notion of \"can not represent unsafe\" isn't a statement about what states of safety a machine can be in.\n", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think I just have a different definition of what the word unsafe means in the context of machinery. It is a real state which has to be accounted for, and a language definition of unsafe with regard to side effects is a different matter (which could also be useful) but the language notion of &amp;quot;can not represent unsafe&amp;quot; isn&amp;#39;t a statement about what states of safety a machine can be in.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2rh88d", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2rh88d/", "num_reports": null, "stickied": false, "created": 1462335699.0, "author_flair_text": null, "created_utc": 1462306899.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2rf0pb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Rudd-X", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2p4mte", "score": 1, "approved_by": null, "downs": 0, "body": "I said impossible to *represent*.  That augments your effectiveness at handling safe and unsafe states in the hardware.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I said impossible to &lt;em&gt;represent&lt;/em&gt;.  That augments your effectiveness at handling safe and unsafe states in the hardware.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2rf0pb", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2rf0pb/", "num_reports": null, "stickied": false, "created": 1462332874.0, "author_flair_text": null, "created_utc": 1462304074.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2p4mte", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "scubascratch", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ov9sh", "score": 1, "approved_by": null, "downs": 0, "body": "In a human safety system, there can definitely be unsafe states the hardware can be in. For example a system with moving parts might have an infrared light curtain detecting a person reaching in while the machine moves. If they reach in anyway, the light curtain detects this and sends a signal to a safety controller which shifts to an unsafe state (stopping motion or lasers etc).\nThere's no way to Haskell your way out of the inherent unsafe nature of some industrial systems.\n", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In a human safety system, there can definitely be unsafe states the hardware can be in. For example a system with moving parts might have an infrared light curtain detecting a person reaching in while the machine moves. If they reach in anyway, the light curtain detects this and sends a signal to a safety controller which shifts to an unsafe state (stopping motion or lasers etc).\nThere&amp;#39;s no way to Haskell your way out of the inherent unsafe nature of some industrial systems.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p4mte", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p4mte/", "num_reports": null, "stickied": false, "created": 1462182925.0, "author_flair_text": null, "created_utc": 1462154125.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ov9sh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Rudd-X", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ol0ki", "score": 1, "approved_by": null, "downs": 0, "body": "Interestingly enough, functional programming often has the side effect of making it *impossible* to represent unsafe states.  That is kind of the point of proper type systems, after all.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Interestingly enough, functional programming often has the side effect of making it &lt;em&gt;impossible&lt;/em&gt; to represent unsafe states.  That is kind of the point of proper type systems, after all.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ov9sh", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ov9sh/", "num_reports": null, "stickied": false, "created": 1462167675.0, "author_flair_text": null, "created_utc": 1462138875.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": -2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 0, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 0, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2pfqm9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2pdq4e", "score": 2, "approved_by": null, "downs": 0, "body": "Well then you aren't really answering my question, which was what would you RATHER they use. And I know you are a different person but you responded to my comment which contained the question.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well then you aren&amp;#39;t really answering my question, which was what would you RATHER they use. And I know you are a different person but you responded to my comment which contained the question.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2pfqm9", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2pfqm9/", "num_reports": null, "stickied": false, "created": 1462207668.0, "author_flair_text": null, "created_utc": 1462178868.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 8, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2pdq4e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "scubascratch", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2p7zs5", "score": 0, "approved_by": null, "downs": 0, "body": "No I am suggesting they are slow to embrace new ideas.\n", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No I am suggesting they are slow to embrace new ideas.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2pdq4e", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2pdq4e/", "num_reports": null, "stickied": false, "created": 1462200529.0, "author_flair_text": null, "created_utc": 1462171729.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 7, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2p7zs5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2p4eze", "score": 2, "approved_by": null, "downs": 0, "body": "&gt; Definitely C. You can still run into null pointers and buffer overflows but at least there won't be some insane garbage collector getting in the way of the emergency stop interrupt handler.\n\nI mean Haskell can do a ton more lifetime analysis than, say, Java, so really the GC should not have any issues like that. I would say the likelihood of someone fucking up a bunch of bullshit, dangerous, C is much more likely than Haskell's GC breaking shit.\n\n&gt; The languages in some of these systems seem like a bastard child of BASIC and some 8-bit assembly language. With threads added on later and the manual encouraging manipulation of the stack pointer. And 80 column hard limit on source.\n\nAnd that is a... good... thing? You are basically suggesting to continue down that line of thinking.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Definitely C. You can still run into null pointers and buffer overflows but at least there won&amp;#39;t be some insane garbage collector getting in the way of the emergency stop interrupt handler.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I mean Haskell can do a ton more lifetime analysis than, say, Java, so really the GC should not have any issues like that. I would say the likelihood of someone fucking up a bunch of bullshit, dangerous, C is much more likely than Haskell&amp;#39;s GC breaking shit.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;The languages in some of these systems seem like a bastard child of BASIC and some 8-bit assembly language. With threads added on later and the manual encouraging manipulation of the stack pointer. And 80 column hard limit on source.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;And that is a... good... thing? You are basically suggesting to continue down that line of thinking.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p7zs5", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p7zs5/", "num_reports": null, "stickied": false, "created": 1462187566.0, "author_flair_text": null, "created_utc": 1462158766.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2p4eze", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "scubascratch", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ow1cf", "score": 0, "approved_by": null, "downs": 0, "body": "Definitely C.\nYou can still run into null pointers and buffer overflows but at least there won't be some insane garbage collector getting in the way of the emergency stop interrupt handler.\n\nThe languages in some of these systems seem like a bastard child of BASIC and some 8-bit assembly language. With threads added on later and the manual encouraging manipulation of the stack pointer. And 80 column hard limit on source.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Definitely C.\nYou can still run into null pointers and buffer overflows but at least there won&amp;#39;t be some insane garbage collector getting in the way of the emergency stop interrupt handler.&lt;/p&gt;\n\n&lt;p&gt;The languages in some of these systems seem like a bastard child of BASIC and some 8-bit assembly language. With threads added on later and the manual encouraging manipulation of the stack pointer. And 80 column hard limit on source.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p4eze", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p4eze/", "num_reports": null, "stickied": false, "created": 1462182622.0, "author_flair_text": null, "created_utc": 1462153822.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ow1cf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tysonzero", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oovm9", "score": 3, "approved_by": null, "downs": 0, "body": "&gt; I'm not jumping for people to use Haskell in things where my life is on the line.\n\nWhat would you rather they use? Java? C++? C?!?!?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I&amp;#39;m not jumping for people to use Haskell in things where my life is on the line.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;What would you rather they use? Java? C++? C?!?!?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ow1cf", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ow1cf/", "num_reports": null, "stickied": false, "created": 1462168930.0, "author_flair_text": null, "created_utc": 1462140130.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2oy1qq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "aaron552", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oovm9", "score": 2, "approved_by": null, "downs": 0, "body": "Some Erlang systems have uptime in the decades - FP has been in heavy use in certain fields for a long time", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Some Erlang systems have uptime in the decades - FP has been in heavy use in certain fields for a long time&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oy1qq", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oy1qq/", "num_reports": null, "stickied": false, "created": 1462172315.0, "author_flair_text": null, "created_utc": 1462143515.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oovm9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "EmperorArthur", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ol0ki", "score": -2, "approved_by": null, "downs": 0, "body": "I was more referring to that formal proof.  Done correctly you can mathematically prove that the code does exactly what you say it's supposed to do.  Which is different than what it should actually do.\n\nBasically, it was the new buzzword for regulators, and was/is supposed to prove the developer was not negligent.  Especially if they were given a requirements doc by someone else.  The reasoning being, if you can prove you followed the spec then you're not liable, the person who wrote the specification document is.\n\nBut yeah, provability is nice, but it can make it much harder to handle thing when something breaks or a system goes out of control.  I'm not jumping for people to use Haskell in things where my life is on the line.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I was more referring to that formal proof.  Done correctly you can mathematically prove that the code does exactly what you say it&amp;#39;s supposed to do.  Which is different than what it should actually do.&lt;/p&gt;\n\n&lt;p&gt;Basically, it was the new buzzword for regulators, and was/is supposed to prove the developer was not negligent.  Especially if they were given a requirements doc by someone else.  The reasoning being, if you can prove you followed the spec then you&amp;#39;re not liable, the person who wrote the specification document is.&lt;/p&gt;\n\n&lt;p&gt;But yeah, provability is nice, but it can make it much harder to handle thing when something breaks or a system goes out of control.  I&amp;#39;m not jumping for people to use Haskell in things where my life is on the line.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oovm9", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oovm9/", "num_reports": null, "stickied": false, "created": 1462157660.0, "author_flair_text": null, "created_utc": 1462128860.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 1, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ol0ki", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "scubascratch", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oe3dw", "score": 3, "approved_by": null, "downs": 0, "body": "&gt; It's to the point that even designers of safety critical systems don't consider it worth the money.\n\nCan you expand on this or link to any publications? I am involved in the engineering of systems with physical safety requirements and as I read this thread I try to imagine how much more challenging it would be to fully and clearly represent safe vs unsafe states (using functional programming).", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;It&amp;#39;s to the point that even designers of safety critical systems don&amp;#39;t consider it worth the money.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Can you expand on this or link to any publications? I am involved in the engineering of systems with physical safety requirements and as I read this thread I try to imagine how much more challenging it would be to fully and clearly represent safe vs unsafe states (using functional programming).&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ol0ki", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ol0ki/", "num_reports": null, "stickied": false, "created": 1462151644.0, "author_flair_text": null, "created_utc": 1462122844.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": -4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2ov3bj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Tayl100", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oe3dw", "score": -4, "approved_by": null, "downs": 0, "body": "I always found it a little ironic that \"functional programming\" has much less functional value compared to many OO languages. Aside from theoretical proofs or silly challenges, languages like haskell probably hardly ever see the market. I suppose they aren't supposed to.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I always found it a little ironic that &amp;quot;functional programming&amp;quot; has much less functional value compared to many OO languages. Aside from theoretical proofs or silly challenges, languages like haskell probably hardly ever see the market. I suppose they aren&amp;#39;t supposed to.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ov3bj", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ov3bj/", "num_reports": null, "stickied": false, "created": 1462167378.0, "author_flair_text": null, "created_utc": 1462138578.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oe3dw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "EmperorArthur", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2odqar", "score": 13, "approved_by": null, "downs": 0, "body": "https://en.wikipedia.org/wiki/Functional_programming\n\nIt's basically a different way to write code.  There are no side effects, and things don't have memory.  Which means any time you call a function it outputs the same result.*  Sounds neat, until you realize that it's the exact opposite of Object Oriented design, i/o is considered a side effect, and almost everything you know about software design is useless.\n\nStateless programming allows a designer to create a formal proof, but doing anything meaningful seems to require a math phd.  It's to the point that even designers of safety critical systems don't consider it worth the money.\n\n*simplifying a bit", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Functional_programming\"&gt;https://en.wikipedia.org/wiki/Functional_programming&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s basically a different way to write code.  There are no side effects, and things don&amp;#39;t have memory.  Which means any time you call a function it outputs the same result.*  Sounds neat, until you realize that it&amp;#39;s the exact opposite of Object Oriented design, i/o is considered a side effect, and almost everything you know about software design is useless.&lt;/p&gt;\n\n&lt;p&gt;Stateless programming allows a designer to create a formal proof, but doing anything meaningful seems to require a math phd.  It&amp;#39;s to the point that even designers of safety critical systems don&amp;#39;t consider it worth the money.&lt;/p&gt;\n\n&lt;p&gt;*simplifying a bit&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oe3dw", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oe3dw/", "num_reports": null, "stickied": false, "created": 1462138836.0, "author_flair_text": null, "created_utc": 1462110036.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 1, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2odqar", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "2Punx2Furious", "can_mod_post": false, "send_replies": true, "parent_id": "t3_4h8r54", "score": 118, "approved_by": null, "downs": 0, "body": "I don't get it.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t get it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2odqar", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2odqar/", "num_reports": null, "stickied": false, "created": 1462137969.0, "author_flair_text": null, "created_utc": 1462109169.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 29, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 26, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2oo0mt", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "RenegadeMinds", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ofqol", "score": 26, "approved_by": null, "downs": 0, "body": "Kropotkin clears your registers because private memory is theft. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kropotkin clears your registers because private memory is theft. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oo0mt", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oo0mt/", "num_reports": null, "stickied": false, "created": 1462156325.0, "author_flair_text": null, "created_utc": 1462127525.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 30, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 24, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2ohqx1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "nivenkos", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ogl2y", "score": 24, "approved_by": null, "downs": 0, "body": "And keep the class system :P ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;And keep the class system :P &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ohqx1", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ohqx1/", "num_reports": null, "stickied": false, "created": 1462146130.0, "author_flair_text": null, "created_utc": 1462117330.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2ouvzy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Zennistrad", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ogl2y", "score": 4, "approved_by": null, "downs": 0, "body": "This. This right here is why I read the comments.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This. This right here is why I read the comments.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ouvzy", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ouvzy/", "num_reports": null, "stickied": false, "created": 1462167046.0, "author_flair_text": null, "created_utc": 1462138246.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ogl2y", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "d_rudy", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ofqol", "score": 30, "approved_by": null, "downs": 0, "body": "Yeah, otherwise I'd imagine this book would just circumvent state by calling it something else, like private contract variables.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, otherwise I&amp;#39;d imagine this book would just circumvent state by calling it something else, like private contract variables.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ogl2y", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ogl2y/", "num_reports": null, "stickied": false, "created": 1462144024.0, "author_flair_text": null, "created_utc": 1462115224.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ofqol", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "nivenkos", "can_mod_post": false, "send_replies": true, "parent_id": "t3_4h8r54", "score": 29, "approved_by": null, "downs": 0, "body": "s/Rothbard/Kropotkin", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;s/Rothbard/Kropotkin&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ofqol", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ofqol/", "num_reports": null, "stickied": false, "created": 1462142417.0, "author_flair_text": null, "created_utc": 1462113617.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 12, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2odstz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "jcalve34", "can_mod_post": false, "send_replies": true, "parent_id": "t3_4h8r54", "score": 12, "approved_by": null, "downs": 0, "body": "I'd read it", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d read it&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2odstz", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2odstz/", "num_reports": null, "stickied": false, "created": 1462138139.0, "author_flair_text": null, "created_utc": 1462109339.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 9, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2omj9p", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "TotesMessenger", "can_mod_post": false, "send_replies": true, "parent_id": "t3_4h8r54", "score": 9, "approved_by": null, "downs": 0, "body": "I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:\n\n- [/r/anarcho_capitalism] [Rothbard found in \\/r\\/ProgrammerHumor - Enemy of the state](https://np.reddit.com/r/Anarcho_Capitalism/comments/4haavy/rothbard_found_in_rprogrammerhumor_enemy_of_the/)\n\n- [/r/enoughlibertarianspam] [They've infiltrated \\/r\\/ProgrammerHumor](https://np.reddit.com/r/EnoughLibertarianSpam/comments/4hcvxe/theyve_infiltrated_rprogrammerhumor/)\n\n[](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*\n\n[](#bot)", "edited": 1462149544.0, "author_flair_css_class": "gre", "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m a bot, &lt;em&gt;bleep&lt;/em&gt;, &lt;em&gt;bloop&lt;/em&gt;. Someone has linked to this thread from another place on reddit:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;[&lt;a href=\"/r/anarcho_capitalism\"&gt;/r/anarcho_capitalism&lt;/a&gt;] &lt;a href=\"https://np.reddit.com/r/Anarcho_Capitalism/comments/4haavy/rothbard_found_in_rprogrammerhumor_enemy_of_the/\"&gt;Rothbard found in /r/ProgrammerHumor - Enemy of the state&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;[&lt;a href=\"/r/enoughlibertarianspam\"&gt;/r/enoughlibertarianspam&lt;/a&gt;] &lt;a href=\"https://np.reddit.com/r/EnoughLibertarianSpam/comments/4hcvxe/theyve_infiltrated_rprogrammerhumor/\"&gt;They&amp;#39;ve infiltrated /r/ProgrammerHumor&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;a href=\"#footer\"&gt;&lt;/a&gt;&lt;em&gt;&lt;sup&gt;If you follow any of the above links, please respect the rules of reddit and don&amp;#39;t vote in the other threads.&lt;/sup&gt; &lt;sup&gt;(&lt;a href=\"/r/TotesMessenger\"&gt;Info&lt;/a&gt;&lt;/sup&gt; &lt;sup&gt;/&lt;/sup&gt; &lt;sup&gt;&lt;a href=\"/message/compose?to=/r/TotesMessenger\"&gt;Contact&lt;/a&gt;)&lt;/sup&gt;&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"#bot\"&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2omj9p", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2omj9p/", "num_reports": null, "stickied": false, "created": 1462154002.0, "author_flair_text": "Green security clearance", "created_utc": 1462125202.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 20, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2okwrv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "[deleted]", "can_mod_post": false, "send_replies": true, "parent_id": "t3_4h8r54", "score": 20, "approved_by": null, "downs": 0, "body": "As a 2012 Ron Paul delegate, I find this hilarious.\n", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As a 2012 Ron Paul delegate, I find this hilarious.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": false, "subreddit": "ProgrammerHumor", "name": "t1_d2okwrv", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2okwrv/", "num_reports": null, "stickied": false, "created": 1462151474.0, "author_flair_text": null, "created_utc": 1462122674.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 10, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 32, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 31, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2oi3pl", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "d_rudy", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ohsjz", "score": 31, "approved_by": null, "downs": 0, "body": "&gt; \u201cC++ is the fullest expression of Haskell, and Haskell is the fullest expression of C++. Not only are they compatible, but you can't really have one without the other. True Haskell will be C++, and true C++ will be Haskell\u201d\n\n-- Murray Rothbard", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;\u201cC++ is the fullest expression of Haskell, and Haskell is the fullest expression of C++. Not only are they compatible, but you can&amp;#39;t really have one without the other. True Haskell will be C++, and true C++ will be Haskell\u201d&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;-- Murray Rothbard&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oi3pl", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oi3pl/", "num_reports": null, "stickied": false, "created": 1462146755.0, "author_flair_text": null, "created_utc": 1462117955.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 12, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2ohtuo", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "d_rudy", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ohsjz", "score": 12, "approved_by": null, "downs": 0, "body": "Nah, see this is TRUE haskell. That other thing was just a bastardization from the functional programming commies.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nah, see this is TRUE haskell. That other thing was just a bastardization from the functional programming commies.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ohtuo", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ohtuo/", "num_reports": null, "stickied": false, "created": 1462146274.0, "author_flair_text": null, "created_utc": 1462117474.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ohsjz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "NoGardE", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oh3a9", "score": 32, "approved_by": null, "downs": 0, "body": "I don't get it because this is a bastardization of C++ and Java and not Haskell. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t get it because this is a bastardization of C++ and Java and not Haskell. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ohsjz", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ohsjz/", "num_reports": null, "stickied": false, "created": 1462146211.0, "author_flair_text": null, "created_utc": 1462117411.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oh3a9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "d_rudy", "can_mod_post": false, "send_replies": true, "parent_id": "t3_4h8r54", "score": 10, "approved_by": null, "downs": 0, "body": "How Rothbard writes Haskell:\n\n    private class Mine {\n      private int security = 0;\n\n      private int do(int n) {\n         switch(n) {\n           case 0:\n             this.security = n+1;\n             cout &lt;&lt; \"Anarchy level:\" &lt;&lt; this.security;\n             break;\n          case 1:\n             this.security += n * 5;\n             cout &lt;&lt; \"Anarchy level:\" &lt;&lt; this.security; \n             break;\n          default:\n             this.security = 0;\n             cout &lt;&lt; \"Too much anarchy. Resetting\";\n             break;\n        }\n        return this.security;\n      }\n    }", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How Rothbard writes Haskell:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;private class Mine {\n  private int security = 0;\n\n  private int do(int n) {\n     switch(n) {\n       case 0:\n         this.security = n+1;\n         cout &amp;lt;&amp;lt; &amp;quot;Anarchy level:&amp;quot; &amp;lt;&amp;lt; this.security;\n         break;\n      case 1:\n         this.security += n * 5;\n         cout &amp;lt;&amp;lt; &amp;quot;Anarchy level:&amp;quot; &amp;lt;&amp;lt; this.security; \n         break;\n      default:\n         this.security = 0;\n         cout &amp;lt;&amp;lt; &amp;quot;Too much anarchy. Resetting&amp;quot;;\n         break;\n    }\n    return this.security;\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oh3a9", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oh3a9/", "num_reports": null, "stickied": false, "created": 1462144959.0, "author_flair_text": null, "created_utc": 1462116159.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 13, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2odl0p", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "SolarBear", "can_mod_post": false, "send_replies": true, "parent_id": "t3_4h8r54", "score": 13, "approved_by": null, "downs": 0, "body": "Programmers are not first world anarchists since they index things starting from zero. I guess Mr. Rothbard is a zeroth world anarchist?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Programmers are not first world anarchists since they index things starting from zero. I guess Mr. Rothbard is a zeroth world anarchist?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2odl0p", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2odl0p/", "num_reports": null, "stickied": false, "created": 1462137629.0, "author_flair_text": null, "created_utc": 1462108829.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2p0lg7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "BlackBrane", "can_mod_post": false, "send_replies": true, "parent_id": "t3_4h8r54", "score": 3, "approved_by": null, "downs": 0, "body": "Related: https://wiki.haskell.org/wikiupload/3/36/Haskell-logo-revolution.png", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Related: &lt;a href=\"https://wiki.haskell.org/wikiupload/3/36/Haskell-logo-revolution.png\"&gt;https://wiki.haskell.org/wikiupload/3/36/Haskell-logo-revolution.png&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p0lg7", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p0lg7/", "num_reports": null, "stickied": false, "created": 1462176616.0, "author_flair_text": null, "created_utc": 1462147816.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 8, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2omjxn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "kiujhytg2", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oibgf", "score": 8, "approved_by": null, "downs": 0, "body": "Haskell had state. However, it has controlled state. You can have functions that take a state object as some of its parameters, and returns the new state. Using the State Monad, you even have quite a nice syntax. However, you know that things are only stateful when they need to be, and that functions cannot have unexpected side effects.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell had state. However, it has controlled state. You can have functions that take a state object as some of its parameters, and returns the new state. Using the State Monad, you even have quite a nice syntax. However, you know that things are only stateful when they need to be, and that functions cannot have unexpected side effects.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2omjxn", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2omjxn/", "num_reports": null, "stickied": false, "created": 1462154030.0, "author_flair_text": null, "created_utc": 1462125230.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 7, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2osy7w", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "tikhonjelvis", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oibgf", "score": 7, "approved_by": null, "downs": 0, "body": "Functional programming is about *controlling* state, not eliminating it completely. The idea is simple:\n\n  * use mutable state if you need it for performance reasons or to model something that uses it directly (ie another language)\n  * do not use mutable state for incidental things like program organization, control flow, reactive systems... etc\n\nYou *can* use mutable variables in Haskell, they're just not the default. Instead they are statically limited in scope (and a bit verbose). \n\nThe advantage is that your code is neater by default and both you *and* the compiler can safely make all sorts of assumptions about it. Instead of having to rely on discipline and hope, you can rely on the *language* to keep track of what might have side effects and what won't. This makes the code much easier to refactor and understand.\n\nIn fact, honestly, your analogy is backwards: it's imperative languages that are throwing tools away. By having side effects possible *everywhere*, you can never make blanket assumptions about them. For example, you can't rewrite code liberally because changing the order of statements *might* change their effects. (This is actually useful: Haskell has a useful sort of loop fusion *as a library* while most other languages can't even manage it as a built-in compiler optimization.)\n\nFunctional languages like Haskell let you do functional programming by default *and take advantage of it*, while still allowing mutable variables where they make sense\u2014just by making them explicit in the type system. It's *strictly more expressive*.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Functional programming is about &lt;em&gt;controlling&lt;/em&gt; state, not eliminating it completely. The idea is simple:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;use mutable state if you need it for performance reasons or to model something that uses it directly (ie another language)&lt;/li&gt;\n&lt;li&gt;do not use mutable state for incidental things like program organization, control flow, reactive systems... etc&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;You &lt;em&gt;can&lt;/em&gt; use mutable variables in Haskell, they&amp;#39;re just not the default. Instead they are statically limited in scope (and a bit verbose). &lt;/p&gt;\n\n&lt;p&gt;The advantage is that your code is neater by default and both you &lt;em&gt;and&lt;/em&gt; the compiler can safely make all sorts of assumptions about it. Instead of having to rely on discipline and hope, you can rely on the &lt;em&gt;language&lt;/em&gt; to keep track of what might have side effects and what won&amp;#39;t. This makes the code much easier to refactor and understand.&lt;/p&gt;\n\n&lt;p&gt;In fact, honestly, your analogy is backwards: it&amp;#39;s imperative languages that are throwing tools away. By having side effects possible &lt;em&gt;everywhere&lt;/em&gt;, you can never make blanket assumptions about them. For example, you can&amp;#39;t rewrite code liberally because changing the order of statements &lt;em&gt;might&lt;/em&gt; change their effects. (This is actually useful: Haskell has a useful sort of loop fusion &lt;em&gt;as a library&lt;/em&gt; while most other languages can&amp;#39;t even manage it as a built-in compiler optimization.)&lt;/p&gt;\n\n&lt;p&gt;Functional languages like Haskell let you do functional programming by default &lt;em&gt;and take advantage of it&lt;/em&gt;, while still allowing mutable variables where they make sense\u2014just by making them explicit in the type system. It&amp;#39;s &lt;em&gt;strictly more expressive&lt;/em&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2osy7w", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2osy7w/", "num_reports": null, "stickied": false, "created": 1462163960.0, "author_flair_text": null, "created_utc": 1462135160.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 0, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 4, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2ome3k", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "the_great_ganonderp", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2olxjr", "score": 4, "approved_by": null, "downs": 0, "body": "That's not really what [anti-pattern](https://en.wikipedia.org/wiki/Anti-pattern) *means*, though.\n\nAnyway, Haskell includes mutable, shareable state. So its designers would presumably agree with you that sometimes it's the best (or only) way to solve a problem.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s not really what &lt;a href=\"https://en.wikipedia.org/wiki/Anti-pattern\"&gt;anti-pattern&lt;/a&gt; &lt;em&gt;means&lt;/em&gt;, though.&lt;/p&gt;\n\n&lt;p&gt;Anyway, Haskell includes mutable, shareable state. So its designers would presumably agree with you that sometimes it&amp;#39;s the best (or only) way to solve a problem.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ome3k", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ome3k/", "num_reports": null, "stickied": false, "created": 1462153771.0, "author_flair_text": null, "created_utc": 1462124971.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2om3ms", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "of_no_consequence", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2olxjr", "score": 1, "approved_by": null, "downs": 0, "body": "I'm not missing your point.  I get what you're saying.  There reasons of preparing for the future, and working with non diligent developers, are the reasons people disdain certain things.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not missing your point.  I get what you&amp;#39;re saying.  There reasons of preparing for the future, and working with non diligent developers, are the reasons people disdain certain things.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2om3ms", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2om3ms/", "num_reports": null, "stickied": false, "created": 1462153323.0, "author_flair_text": null, "created_utc": 1462124523.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2olxjr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "apieceoffruit", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2okq8o", "score": 0, "approved_by": null, "downs": 0, "body": "You seem to be misunderstanding my point.  I am not arguing in defence of the singleton.  I am arguing against its complete exclusion. \n\nAntipattern literally means 'is a mutually exclusive directly contrasting concept to a pattern'. \n\n...which it isn't.  Is it overused?  Is it used wrong in most cases? Do most people use it unaware of its implications? Does it often muddy your intention?  Yes to all of the above. \n\nIf that is the criteria them literally and ironic are anti-words.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You seem to be misunderstanding my point.  I am not arguing in defence of the singleton.  I am arguing against its complete exclusion. &lt;/p&gt;\n\n&lt;p&gt;Antipattern literally means &amp;#39;is a mutually exclusive directly contrasting concept to a pattern&amp;#39;. &lt;/p&gt;\n\n&lt;p&gt;...which it isn&amp;#39;t.  Is it overused?  Is it used wrong in most cases? Do most people use it unaware of its implications? Does it often muddy your intention?  Yes to all of the above. &lt;/p&gt;\n\n&lt;p&gt;If that is the criteria them literally and ironic are anti-words.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2olxjr", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2olxjr/", "num_reports": null, "stickied": false, "created": 1462153060.0, "author_flair_text": null, "created_utc": 1462124260.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2okq8o", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "of_no_consequence", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ojx69", "score": 2, "approved_by": null, "downs": 0, "body": "Yes, the book is an observation.  But truth is, over time, many software practices, sometimes more so certain settings, are anti patterns.  People have become judicious because certain uses have unwound over time for them.  It won't break in EVERY instance, but it's easier not to use them and not run the risk, than guarantee every person out there is so diligent.\n\nTake the singleton pattern specifically as it pertains to java.  There are many more arguments against them ranging from topics of testing, to singletons not being guaranteed to only exist as one copy in some very fun scenarios.", "edited": 1462122891.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, the book is an observation.  But truth is, over time, many software practices, sometimes more so certain settings, are anti patterns.  People have become judicious because certain uses have unwound over time for them.  It won&amp;#39;t break in EVERY instance, but it&amp;#39;s easier not to use them and not run the risk, than guarantee every person out there is so diligent.&lt;/p&gt;\n\n&lt;p&gt;Take the singleton pattern specifically as it pertains to java.  There are many more arguments against them ranging from topics of testing, to singletons not being guaranteed to only exist as one copy in some very fun scenarios.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2okq8o", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2okq8o/", "num_reports": null, "stickied": false, "created": 1462151182.0, "author_flair_text": null, "created_utc": 1462122382.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ojx69", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "apieceoffruit", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ojj2e", "score": 4, "approved_by": null, "downs": 0, "body": "I don't disagree that they can be harmful but by definition they are a pattern. The original book listed a number of noted patterns they saw in the wild and why they were used.  \n\nThe term anti pattern is rediculous. \n\nEverything CAN be harmful but there is a time and a place for everything.\n\nDepending on the scope of your project you can upgrade from singleton to service locator to dependency injection but sometimes. ...All you need is a singleton. I almost never use them for obvious reasons but they are a pattern.  Just like the null object pattern. \n\n Just because people don't like them and they have to be judicious with their use doesn't change what they are.  It simply warrents a warning.  \n\nAgain they are just a tool. Having a glue gun doesn't mean every problem should use it. And just because it can stick stuff together and can be dangerous if you use it wrong,\n\ndoesn't make it an 'antitool'.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t disagree that they can be harmful but by definition they are a pattern. The original book listed a number of noted patterns they saw in the wild and why they were used.  &lt;/p&gt;\n\n&lt;p&gt;The term anti pattern is rediculous. &lt;/p&gt;\n\n&lt;p&gt;Everything CAN be harmful but there is a time and a place for everything.&lt;/p&gt;\n\n&lt;p&gt;Depending on the scope of your project you can upgrade from singleton to service locator to dependency injection but sometimes. ...All you need is a singleton. I almost never use them for obvious reasons but they are a pattern.  Just like the null object pattern. &lt;/p&gt;\n\n&lt;p&gt;Just because people don&amp;#39;t like them and they have to be judicious with their use doesn&amp;#39;t change what they are.  It simply warrents a warning.  &lt;/p&gt;\n\n&lt;p&gt;Again they are just a tool. Having a glue gun doesn&amp;#39;t mean every problem should use it. And just because it can stick stuff together and can be dangerous if you use it wrong,&lt;/p&gt;\n\n&lt;p&gt;doesn&amp;#39;t make it an &amp;#39;antitool&amp;#39;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ojx69", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ojx69/", "num_reports": null, "stickied": false, "created": 1462149870.0, "author_flair_text": null, "created_utc": 1462121070.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ojj2e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "of_no_consequence", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oibgf", "score": 3, "approved_by": null, "downs": 0, "body": "http://c2.com/cgi/wiki?SingletonPattern - here's a giant discussion on singletons on why they can be considered harmful or an anti pattern.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://c2.com/cgi/wiki?SingletonPattern\"&gt;http://c2.com/cgi/wiki?SingletonPattern&lt;/a&gt; - here&amp;#39;s a giant discussion on singletons on why they can be considered harmful or an anti pattern.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ojj2e", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ojj2e/", "num_reports": null, "stickied": false, "created": 1462149210.0, "author_flair_text": null, "created_utc": 1462120410.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2p1we5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "kiujhytg2", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oibgf", "score": 1, "approved_by": null, "downs": 0, "body": "Haskell had state. However, it has controlled state. You can have functions that take a state object as some of its parameters, and returns the new state. Using the State Monad, you even have quite a nice syntax. However, you know that things are only stateful when they need to be, and that functions cannot have unexpected side effects.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell had state. However, it has controlled state. You can have functions that take a state object as some of its parameters, and returns the new state. Using the State Monad, you even have quite a nice syntax. However, you know that things are only stateful when they need to be, and that functions cannot have unexpected side effects.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p1we5", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p1we5/", "num_reports": null, "stickied": false, "created": 1462178650.0, "author_flair_text": null, "created_utc": 1462149850.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oibgf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "apieceoffruit", "can_mod_post": false, "send_replies": true, "parent_id": "t3_4h8r54", "score": 5, "approved_by": null, "downs": 0, "body": "I really don't understand this war on state systems.  Its like those who never use design patterns or think the singleton is an anti pattern.  \n\nIf you follow clean coding principles you should not have side effects anyway.  \n\nUse functional style when it makes sense,  use state when it makes sense. \n\n Don't throw the hammer away just because you found out the drill exists.  ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I really don&amp;#39;t understand this war on state systems.  Its like those who never use design patterns or think the singleton is an anti pattern.  &lt;/p&gt;\n\n&lt;p&gt;If you follow clean coding principles you should not have side effects anyway.  &lt;/p&gt;\n\n&lt;p&gt;Use functional style when it makes sense,  use state when it makes sense. &lt;/p&gt;\n\n&lt;p&gt;Don&amp;#39;t throw the hammer away just because you found out the drill exists.  &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oibgf", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oibgf/", "num_reports": null, "stickied": false, "created": 1462147129.0, "author_flair_text": null, "created_utc": 1462118329.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 1, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 0, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2odqho", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Cyph0n", "can_mod_post": false, "send_replies": true, "parent_id": "t3_4h8r54", "score": 0, "approved_by": null, "downs": 0, "body": "\"Side effects be damned! Oh, and Mona D. Roosevelt is the only one fit to rule us!\"", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;Side effects be damned! Oh, and Mona D. Roosevelt is the only one fit to rule us!&amp;quot;&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2odqho", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2odqho/", "num_reports": null, "stickied": false, "created": 1462137982.0, "author_flair_text": null, "created_utc": 1462109182.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": -3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d2peo2b", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "TheCocoanaut", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2pbpr0", "score": 5, "approved_by": null, "downs": 0, "body": "I've noticed this trend also, especially in the transhumanism community. \"I want it, if others can't get it, it's their problem, they should get better work then.\" duh.\n\nHappy may day, too!", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve noticed this trend also, especially in the transhumanism community. &amp;quot;I want it, if others can&amp;#39;t get it, it&amp;#39;s their problem, they should get better work then.&amp;quot; duh.&lt;/p&gt;\n\n&lt;p&gt;Happy may day, too!&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2peo2b", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2peo2b/", "num_reports": null, "stickied": false, "created": 1462203619.0, "author_flair_text": null, "created_utc": 1462174819.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2pbpr0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "d_rudy", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2okc8n", "score": 5, "approved_by": null, "downs": 0, "body": "Yeah, well most of us programmers are paid pretty well, so I guess one can get a little myopic about systemic issues of poverty and simplify it to \"but the government\"!\n\nAnyway, happy May Day...", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, well most of us programmers are paid pretty well, so I guess one can get a little myopic about systemic issues of poverty and simplify it to &amp;quot;but the government&amp;quot;!&lt;/p&gt;\n\n&lt;p&gt;Anyway, happy May Day...&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2pbpr0", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2pbpr0/", "num_reports": null, "stickied": false, "created": 1462195023.0, "author_flair_text": null, "created_utc": 1462166223.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": -2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 0, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": -1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2pesnb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "TheCocoanaut", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oz7gw", "score": 2, "approved_by": null, "downs": 0, "body": "Yes, I understand that. But afaict ancaps see this ideology as one of \"total freedom\", right? But that's only half the truth. If I can't pay any private \"enforcement divisions\" I can't enforce my right, thus am stuck in unequality. (This seems to be the way to go at least the guys over at /r/SocialismVCapitalism like to bring it to the table. There is more wrong with this, but I don't want to go into detail, as this is /r/programmerhumor.)\n\nI don't want to object ancap per se here, I object the usage of \"libertarism\" and \"anarchism\" in the context of capitalism, becaue it is neither. Both of these terms originally (and in big parts of the world are still) refered to socialistic ideologies. Ancap is not socialistic, not even left. So that's why I get rude ;) This just seems to be some internet trend, especially from americans. Here in europe I know one douchebag who refers to himself as ancap. Otherwise the term libertarian is used, I think.\n\nI think we should burry this discussion here, and maybe get it over to said sub, I don't want to hijack the thread. (Nor do I have the time for a meaningfull discussion, lots of work to do.)", "edited": 1462208049.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, I understand that. But afaict ancaps see this ideology as one of &amp;quot;total freedom&amp;quot;, right? But that&amp;#39;s only half the truth. If I can&amp;#39;t pay any private &amp;quot;enforcement divisions&amp;quot; I can&amp;#39;t enforce my right, thus am stuck in unequality. (This seems to be the way to go at least the guys over at &lt;a href=\"/r/SocialismVCapitalism\"&gt;/r/SocialismVCapitalism&lt;/a&gt; like to bring it to the table. There is more wrong with this, but I don&amp;#39;t want to go into detail, as this is &lt;a href=\"/r/programmerhumor\"&gt;/r/programmerhumor&lt;/a&gt;.)&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t want to object ancap per se here, I object the usage of &amp;quot;libertarism&amp;quot; and &amp;quot;anarchism&amp;quot; in the context of capitalism, becaue it is neither. Both of these terms originally (and in big parts of the world are still) refered to socialistic ideologies. Ancap is not socialistic, not even left. So that&amp;#39;s why I get rude ;) This just seems to be some internet trend, especially from americans. Here in europe I know one douchebag who refers to himself as ancap. Otherwise the term libertarian is used, I think.&lt;/p&gt;\n\n&lt;p&gt;I think we should burry this discussion here, and maybe get it over to said sub, I don&amp;#39;t want to hijack the thread. (Nor do I have the time for a meaningfull discussion, lots of work to do.)&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2pesnb", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2pesnb/", "num_reports": null, "stickied": false, "created": 1462204081.0, "author_flair_text": null, "created_utc": 1462175281.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oz7gw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "omnipedia", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2omie4", "score": -1, "approved_by": null, "downs": 0, "body": "First time I've ever seen anarcho-capitalism called a half hearted approach, but in history even imperfect attempts can yield spectacular results- look at China and India over the past twenty years. They allowed capitalism and free markets even though the government is still overbearing.  This half hearted approach greatly improved the lives of over two billion people!", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First time I&amp;#39;ve ever seen anarcho-capitalism called a half hearted approach, but in history even imperfect attempts can yield spectacular results- look at China and India over the past twenty years. They allowed capitalism and free markets even though the government is still overbearing.  This half hearted approach greatly improved the lives of over two billion people!&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oz7gw", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oz7gw/", "num_reports": null, "stickied": false, "created": 1462174308.0, "author_flair_text": null, "created_utc": 1462145508.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 1, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2omie4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "TheCocoanaut", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2omdsi", "score": 0, "approved_by": null, "downs": 0, "body": "Yes, fuck him, because he and his \u201cfollowers\u201d re-use terminology to fancy some stupid ideology. Ancap is just freedom for those with money, non-poverty for those with money. NAP my ass. I don't object  fighting poverty or freedom at all, I object half-hearted approaches to this.\n\n/e: also, this discussion should not be here, check out /r/SocialismVCapitalism  or /r/CapitalismVSocialism. (Real anarchism is socialism, so that checks out!)", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, fuck him, because he and his \u201cfollowers\u201d re-use terminology to fancy some stupid ideology. Ancap is just freedom for those with money, non-poverty for those with money. NAP my ass. I don&amp;#39;t object  fighting poverty or freedom at all, I object half-hearted approaches to this.&lt;/p&gt;\n\n&lt;p&gt;/e: also, this discussion should not be here, check out &lt;a href=\"/r/SocialismVCapitalism\"&gt;/r/SocialismVCapitalism&lt;/a&gt;  or &lt;a href=\"/r/CapitalismVSocialism\"&gt;/r/CapitalismVSocialism&lt;/a&gt;. (Real anarchism is socialism, so that checks out!)&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2omie4", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2omie4/", "num_reports": null, "stickied": false, "created": 1462153963.0, "author_flair_text": null, "created_utc": 1462125163.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 1, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2omdsi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "omnipedia", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2okc8n", "score": -2, "approved_by": null, "downs": 0, "body": "He proved freedom not only is a moral good but is the path to ending poverty. But fuck him, right? We need more poverty!", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;He proved freedom not only is a moral good but is the path to ending poverty. But fuck him, right? We need more poverty!&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2omdsi", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2omdsi/", "num_reports": null, "stickied": false, "created": 1462153757.0, "author_flair_text": null, "created_utc": 1462124957.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 1, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2okc8n", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "TheCocoanaut", "can_mod_post": false, "send_replies": true, "parent_id": "t3_4h8r54", "score": -3, "approved_by": null, "downs": 0, "body": "Fuck Rothbard though.\n\n/e: TIL that this sub is full of ancaps. LOL.", "edited": 1462125200.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Fuck Rothbard though.&lt;/p&gt;\n\n&lt;p&gt;/e: TIL that this sub is full of ancaps. LOL.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2okc8n", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2okc8n/", "num_reports": null, "stickied": false, "created": 1462150559.0, "author_flair_text": null, "created_utc": 1462121759.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 1, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2pzw52", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "DuckRabbitMilkStout", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ol8a6", "score": 2, "approved_by": null, "downs": 0, "body": "    import Data.Char\n    map (\\x -&gt; chr (x - 1)) [66,116,116,105,112,109,102,47]", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;import Data.Char\nmap (\\x -&amp;gt; chr (x - 1)) [66,116,116,105,112,109,102,47]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2pzw52", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2pzw52/", "num_reports": null, "stickied": false, "created": 1462245488.0, "author_flair_text": null, "created_utc": 1462216688.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2q1470", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "mostly-idiot-savant", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2p5a1b", "score": 1, "approved_by": null, "downs": 0, "body": "It's common lisp but close! ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s common lisp but close! &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2q1470", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2q1470/", "num_reports": null, "stickied": false, "created": 1462247009.0, "author_flair_text": null, "created_utc": 1462218209.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2p5a1b", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "VassiliMikailovich", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2ol8a6", "score": 1, "approved_by": null, "downs": 0, "body": "Scheme represent, yo", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Scheme represent, yo&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2p5a1b", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2p5a1b/", "num_reports": null, "stickied": false, "created": 1462183776.0, "author_flair_text": null, "created_utc": 1462154976.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2ol8a6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "mostly-idiot-savant", "can_mod_post": false, "send_replies": true, "parent_id": "t3_4h8r54", "score": 1, "approved_by": null, "downs": 0, "body": "(map 'string (lambda (x) (code-char (1- x))) '(79 102 119 102 115 33 104 112 111 111 98 33 104 106 119 102 33 122 112 118 33 118 113 11 79 102 119 102 115 33 104 112 111 111 98 33 109 102 117 33 122 112 118 33 101 112 120 111 11 79 102 119 102 115 33 104 112 111 111 98 33 115 118 111 33 98 115 112 118 111 101 33 98 111 101 33 101 102 116 102 115 117 33 122 112 118 11 79 102 119 102 115 33 104 112 111 111 98 33 110 98 108 102 33 122 112 118 33 100 115 122 11 79 102 119 102 115 33 104 112 111 111 98 33 116 98 122 33 104 112 112 101 99 122 102 11 79 102 119 102 115 33 104 112 111 111 98 33 117 102 109 109 33 98 33 109 106 102 33 98 111 101 33 105 118 115 117 33 122 112 118) )", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;(map &amp;#39;string (lambda (x) (code-char (1- x))) &amp;#39;(79 102 119 102 115 33 104 112 111 111 98 33 104 106 119 102 33 122 112 118 33 118 113 11 79 102 119 102 115 33 104 112 111 111 98 33 109 102 117 33 122 112 118 33 101 112 120 111 11 79 102 119 102 115 33 104 112 111 111 98 33 115 118 111 33 98 115 112 118 111 101 33 98 111 101 33 101 102 116 102 115 117 33 122 112 118 11 79 102 119 102 115 33 104 112 111 111 98 33 110 98 108 102 33 122 112 118 33 100 115 122 11 79 102 119 102 115 33 104 112 111 111 98 33 116 98 122 33 104 112 112 101 99 122 102 11 79 102 119 102 115 33 104 112 111 111 98 33 117 102 109 109 33 98 33 109 106 102 33 98 111 101 33 105 118 115 117 33 122 112 118) )&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2ol8a6", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2ol8a6/", "num_reports": null, "stickied": false, "created": 1462151978.0, "author_flair_text": null, "created_utc": 1462123178.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": -1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2oybkw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "flarn2006", "can_mod_post": false, "send_replies": true, "parent_id": "t3_4h8r54", "score": -1, "approved_by": null, "downs": 0, "body": "Half-Life 3 confirmed.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Half-Life 3 confirmed.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oybkw", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oybkw/", "num_reports": null, "stickied": false, "created": 1462172789.0, "author_flair_text": null, "created_utc": 1462143989.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": -6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 14, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": -1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_4h8r54", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d2owarc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "cowboysauce", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2oqfc4", "score": 2, "approved_by": null, "downs": 0, "body": "It's the haskell logo, which is a combination of the bind operator (&gt;&gt;=) and lambda.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s the haskell logo, which is a combination of the bind operator (&amp;gt;&amp;gt;=) and lambda.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2owarc", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2owarc/", "num_reports": null, "stickied": false, "created": 1462169364.0, "author_flair_text": null, "created_utc": 1462140564.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2oqfc4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Bounty1Berry", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2okak5", "score": -1, "approved_by": null, "downs": 0, "body": "Yes, but the layout does significantly resemble the old Amtrak logo; was this deliberate?\n\n}There are many ways to illustrate a lambda which don't look like the Amtrak logo.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, but the layout does significantly resemble the old Amtrak logo; was this deliberate?&lt;/p&gt;\n\n&lt;p&gt;}There are many ways to illustrate a lambda which don&amp;#39;t look like the Amtrak logo.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2oqfc4", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2oqfc4/", "num_reports": null, "stickied": false, "created": 1462160060.0, "author_flair_text": null, "created_utc": 1462131260.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2okak5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Decker108", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d2of7sn", "score": 14, "approved_by": null, "downs": 0, "body": "Actually, it's the greek letter \"Lambda\", which is also a functional programming concept.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Actually, it&amp;#39;s the greek letter &amp;quot;Lambda&amp;quot;, which is also a functional programming concept.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2okak5", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2okak5/", "num_reports": null, "stickied": false, "created": 1462150483.0, "author_flair_text": null, "created_utc": 1462121683.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d2of7sn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "lindleyw", "can_mod_post": false, "send_replies": true, "parent_id": "t3_4h8r54", "score": -6, "approved_by": null, "downs": 0, "body": "The South African flag appears to have collided with the old \"pointless arrow\" Amtrak logo?", "edited": false, "author_flair_css_class": null, "collapsed": true, "is_submitter": false, "collapsed_reason": "comment score below threshold", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The South African flag appears to have collided with the old &amp;quot;pointless arrow&amp;quot; Amtrak logo?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d2of7sn", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/4h8r54/enemy_of_the_state/d2of7sn/", "num_reports": null, "stickied": false, "created": 1462141319.0, "author_flair_text": null, "created_utc": 1462112519.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}]