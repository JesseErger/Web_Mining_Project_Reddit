[{"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": 1, "children": [{"kind": "t3", "data": {"is_crosspostable": false, "subreddit_id": "t5_2tex6", "approved_at_utc": null, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "thumbnail_width": 140, "subreddit": "ProgrammerHumor", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "mod_note": null, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "saved": false, "id": "5ahxvs", "banned_at_utc": null, "mod_reason_title": null, "view_count": null, "archived": true, "clicked": false, "no_follow": false, "author": "gliph", "num_crossposts": 0, "link_flair_text": null, "can_mod_post": false, "send_replies": true, "pinned": false, "score": 200, "approved_by": null, "over_18": false, "domain": "i.imgur.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/YHkE61AdpXuidai0yDr-vE6vPz3G8jWFFJ7KO0AOsE0.png?s=92ae267e3e89ae406c4ce0ec4611afed", "width": 658, "height": 46}, "resolutions": [{"url": "https://i.redditmedia.com/YHkE61AdpXuidai0yDr-vE6vPz3G8jWFFJ7KO0AOsE0.png?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=f4df273e3ad55837e29519becb06d0c2", "width": 108, "height": 7}, {"url": "https://i.redditmedia.com/YHkE61AdpXuidai0yDr-vE6vPz3G8jWFFJ7KO0AOsE0.png?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=0d55a7ecb33f26247fad9b4dc46d8a3b", "width": 216, "height": 15}, {"url": "https://i.redditmedia.com/YHkE61AdpXuidai0yDr-vE6vPz3G8jWFFJ7KO0AOsE0.png?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=de86b3f77106e571b88ac6e27ff8cbba", "width": 320, "height": 22}, {"url": "https://i.redditmedia.com/YHkE61AdpXuidai0yDr-vE6vPz3G8jWFFJ7KO0AOsE0.png?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=0f5d67c5247eaeb322e6268ebaf3bb20", "width": 640, "height": 44}], "variants": {}, "id": "VR4Mg1-bvg-Zt18St7C370ebo6_k6dZtCopaVznyESk"}], "enabled": true}, "num_comments": 35, "thumbnail": "https://b.thumbs.redditmedia.com/lRoIPcPKoUFWvfZS_5NtkcUlq1nIoyRjcSt5_tOwhbY.jpg", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "contest_mode": false, "gilded": 0, "locked": false, "downs": 0, "brand_safe": true, "subreddit_subscribers": 483233, "secure_media_embed": {}, "media_embed": {}, "post_hint": "image", "stickied": false, "can_gild": false, "thumbnail_height": 9, "parent_whitelist_status": "all_ads", "name": "t3_5ahxvs", "spoiler": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/", "subreddit_type": "public", "whitelist_status": "all_ads", "report_reasons": null, "created": 1478016515.0, "url": "http://i.imgur.com/xMsCIIL.png", "author_flair_text": null, "quarantine": false, "title": "Getting in the Halloween spirit for a codewars problem", "created_utc": 1477987715.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "distinguished": null, "media": null, "upvote_ratio": 0.95, "mod_reports": [], "is_self": false, "visited": false, "num_reports": null, "is_video": false, "ups": 200}}], "before": null}}, {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 30, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 18, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d9gp9sx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "[deleted]", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9go4vh", "score": 18, "approved_by": null, "downs": 0, "body": "With [cppitertools](https://github.com/ryanhaining/cppitertools), one can\n\n    for(auto i: iter::range(400)) std::cout &lt;&lt; i &lt;&lt; '\\n';\n\nNot bad for a language which is considered much less readable than Python and potentially hundreds of times faster.\n\nAnd you can get rid of the iter:: by using `using iter::range`.\n\nEdit: since pass is spelled ';' in C++, equivalent to the above is\n\n    for(auto i: range(n));", "edited": 1478028192.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;With &lt;a href=\"https://github.com/ryanhaining/cppitertools\"&gt;cppitertools&lt;/a&gt;, one can&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for(auto i: iter::range(400)) std::cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &amp;#39;\\n&amp;#39;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Not bad for a language which is considered much less readable than Python and potentially hundreds of times faster.&lt;/p&gt;\n\n&lt;p&gt;And you can get rid of the iter:: by using &lt;code&gt;using iter::range&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Edit: since pass is spelled &amp;#39;;&amp;#39; in C++, equivalent to the above is&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for(auto i: range(n));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": false, "subreddit": "ProgrammerHumor", "name": "t1_d9gp9sx", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9gp9sx/", "num_reports": null, "stickied": false, "created": 1478032013.0, "author_flair_text": null, "created_utc": 1478003213.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"body": "Python's for loop really highlights the issue that for loops in most languages have. Generally speaking, what for loops usually *do* is getting a variable's value from A to B, whereas what we usually *want* from them is iterating over a collection. So we end up with things like:\n\n     for(int i = 0; i &lt; my_collection.size(); i++)\n\nThis has major issues. The first being the common use of the `int` datatype, which may or may not be big enough to cover the entire collection (`size_t` should be used, but `int` is so common that you stop noticing it as an error). The second is the fact that we're using the size as a stopping point, and it doesn't actually have anything to do with the index of the last element we loop over, except that it just so happens to be 1 above it. Finally, the only time the collection is mentioned here at all is by its size, the for loop in most languages doesn't deal with *elements* of the collection, even though that's what we're interested in -- most usually indices are of little to no interest. Your example itself will most often actually be something along the lines of:\n\n     a = [\"Hello\", \"world\", \"!\"]\n     # ...\n     for i in a:\n         print(i)", "subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 13, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d9h0oqh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "[deleted]", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9gqyfz", "score": 3, "approved_by": null, "downs": 0, "body": "There's also the issue of using iterators instead of looping with an index, which is often preferred if possible.", "edited": 1478027183.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s also the issue of using iterators instead of looping with an index, which is often preferred if possible.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": false, "subreddit": "ProgrammerHumor", "name": "t1_d9h0oqh", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9h0oqh/", "num_reports": null, "stickied": false, "created": 1478047672.0, "author_flair_text": null, "created_utc": 1478018872.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d9herr5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "Pinguinsan", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9gqyfz", "score": 3, "approved_by": null, "downs": 0, "body": "The example you showed is common in C, but I very rarely use it in modern C++. It's almost always range-based-for nowadays.  \n  \n    for (auto &amp;it : this-&gt;m_myCollection) {  \n        //Do stuff to each item  \n    }  \n", "edited": false, "author_flair_css_class": "red", "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The example you showed is common in C, but I very rarely use it in modern C++. It&amp;#39;s almost always range-based-for nowadays.  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for (auto &amp;amp;it : this-&amp;gt;m_myCollection) {  \n    //Do stuff to each item  \n}  \n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9herr5", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9herr5/", "num_reports": null, "stickied": false, "created": 1478063936.0, "author_flair_text": "Red security clearance", "created_utc": 1478035136.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d9i4ihn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "overactor", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9hj0h7", "score": 2, "approved_by": null, "downs": 0, "body": "I can't see that happening, something like\n\n    for (let entry : someMap) { }\n\nis likely the best we're going to get in the foreseeable future (hopefully Java 10).", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I can&amp;#39;t see that happening, something like&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for (let entry : someMap) { }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;is likely the best we&amp;#39;re going to get in the foreseeable future (hopefully Java 10).&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9i4ihn", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9i4ihn/", "num_reports": null, "stickied": false, "created": 1478105912.0, "author_flair_text": null, "created_utc": 1478077112.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9hj0h7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "gliph", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9hik0g", "score": 2, "approved_by": null, "downs": 0, "body": "It'd be nice. Ideally I'd like to be able to do\n\n    for (k, v : someMap) { }\n\nI love generics etc but I'd like inference once they've been declared.", "edited": 1478040778.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;d be nice. Ideally I&amp;#39;d like to be able to do&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for (k, v : someMap) { }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I love generics etc but I&amp;#39;d like inference once they&amp;#39;ve been declared.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9hj0h7", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9hj0h7/", "num_reports": null, "stickied": false, "created": 1478069300.0, "author_flair_text": null, "created_utc": 1478040500.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9hik0g", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "apemanzilla", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9ha0yg", "score": 3, "approved_by": null, "downs": 0, "body": "I know, but that map one is the real thing I wish they would change. Even with just type inference for variables in for loops it would be far less verbose.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I know, but that map one is the real thing I wish they would change. Even with just type inference for variables in for loops it would be far less verbose.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9hik0g", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9hik0g/", "num_reports": null, "stickied": false, "created": 1478068698.0, "author_flair_text": null, "created_utc": 1478039898.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d9i6rp1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "overactor", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9i6i47", "score": 1, "approved_by": null, "downs": 0, "body": "I'd write it like that too, possibly leaving `.stream()` on the top line.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d write it like that too, possibly leaving &lt;code&gt;.stream()&lt;/code&gt; on the top line.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9i6rp1", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9i6rp1/", "num_reports": null, "stickied": false, "created": 1478113626.0, "author_flair_text": null, "created_utc": 1478084826.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 6, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9i6i47", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "gliph", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9i4h6j", "score": 2, "approved_by": null, "downs": 0, "body": "Yes, and that's probably better practice. It also splits across lines better than my example.\n\n    someMap.entrySet()\n      .stream()\n      .map(e -&gt; e.getKey() + \": \" + e.getValue())\n      .forEach(System.out::println);", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, and that&amp;#39;s probably better practice. It also splits across lines better than my example.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;someMap.entrySet()\n  .stream()\n  .map(e -&amp;gt; e.getKey() + &amp;quot;: &amp;quot; + e.getValue())\n  .forEach(System.out::println);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9i6i47", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9i6i47/", "num_reports": null, "stickied": false, "created": 1478112840.0, "author_flair_text": null, "created_utc": 1478084040.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9i4h6j", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "overactor", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9ha0yg", "score": 2, "approved_by": null, "downs": 0, "body": "would\n\n    someMap.entrySet().stream().map(e -&gt; e.getKey() + \": \" + e.getValue()).forEach(System.out::println);\n\ncompile?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;would&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;someMap.entrySet().stream().map(e -&amp;gt; e.getKey() + &amp;quot;: &amp;quot; + e.getValue()).forEach(System.out::println);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;compile?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9i4h6j", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9i4h6j/", "num_reports": null, "stickied": false, "created": 1478105782.0, "author_flair_text": null, "created_utc": 1478076982.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9ha0yg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "gliph", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9h8c0e", "score": 3, "approved_by": null, "downs": 0, "body": "You can do that in Java! Actually in two ways, now.\n\nA little verbose but very clear foreach of a map:\n\n    for (final Map.Entry&lt;KeyType, ValueType&gt; entry : someMap.entrySet()) { System.out.println(entry.getKey() + \": \" + entry.getValue()); }\n\nAnd now with `Stream forEach`, though you can't directly assign to variables and there are problems with exceptions.\n\n    someMap.entrySet().stream().forEach(e -&gt; System.out.println(e.getKey() + \": \" + e.getValue()));\n\nAdmittedly, streams are a lot more elegant on `Collection` classes (like List, Set), because Java doesn't have nice syntax for tuples and entries.\n\nFor example, it's really not bad to iterate over the elements of an array or list with foreach:\n\n    for (final String s : someStringList) { ... }", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can do that in Java! Actually in two ways, now.&lt;/p&gt;\n\n&lt;p&gt;A little verbose but very clear foreach of a map:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for (final Map.Entry&amp;lt;KeyType, ValueType&amp;gt; entry : someMap.entrySet()) { System.out.println(entry.getKey() + &amp;quot;: &amp;quot; + entry.getValue()); }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And now with &lt;code&gt;Stream forEach&lt;/code&gt;, though you can&amp;#39;t directly assign to variables and there are problems with exceptions.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;someMap.entrySet().stream().forEach(e -&amp;gt; System.out.println(e.getKey() + &amp;quot;: &amp;quot; + e.getValue()));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Admittedly, streams are a lot more elegant on &lt;code&gt;Collection&lt;/code&gt; classes (like List, Set), because Java doesn&amp;#39;t have nice syntax for tuples and entries.&lt;/p&gt;\n\n&lt;p&gt;For example, it&amp;#39;s really not bad to iterate over the elements of an array or list with foreach:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for (final String s : someStringList) { ... }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9ha0yg", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9ha0yg/", "num_reports": null, "stickied": false, "created": 1478058433.0, "author_flair_text": null, "created_utc": 1478029633.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"body": "Python has that too. The equivalent of `pairs` would be `enumerate`, and you can use a convenient `iter(function, stop_value)` thing for a similar approach to yours. For instance, to go through a file in 256-byte chunks:\n\n    for buffer in iter(lambda: my_file.read(256), b''):\n        # Do something here...\n        \nThis essentially reads: call `my_file.read(256)` and, if the return value is not an empty binary string, assign the result to buffer and perform whatever actions are in the loop body, then repeat. Also, what kind of a pattern is `%S+`? This doesn't look like a regular expression to me or anything of the sort. Did they come up with their own pattern-matching language?", "subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d9h9ej8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "TLM_A", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9h8c0e", "score": 2, "approved_by": null, "downs": 0, "author_cakeday": true, "edited": 1478116710.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python has that too. The equivalent of &lt;code&gt;pairs&lt;/code&gt; would be &lt;code&gt;enumerate&lt;/code&gt;, and you can use a convenient &lt;code&gt;iter(function, stop_value)&lt;/code&gt; thing for a similar approach to yours. For instance, to go through a file in 256-byte chunks:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for buffer in iter(lambda: my_file.read(256), b&amp;#39;&amp;#39;):\n    # Do something here...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This essentially reads: call &lt;code&gt;my_file.read(256)&lt;/code&gt; and, if the return value is not an empty binary string, assign the result to buffer and perform whatever actions are in the loop body, then repeat. Also, what kind of a pattern is &lt;code&gt;%S+&lt;/code&gt;? This doesn&amp;#39;t look like a regular expression to me or anything of the sort. Did they come up with their own pattern-matching language?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9h9ej8", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9h9ej8/", "num_reports": null, "stickied": false, "created": 1478057714.0, "author_flair_text": null, "created_utc": 1478028914.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9h8c0e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "apemanzilla", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9gqyfz", "score": 1, "approved_by": null, "downs": 0, "body": "That's one of the neat things about Lua.\n\n    for key, value in pairs(table) do\n        ...\n    end\n\nYou can replace `pairs(table)` with any function, the idea is that the loop continues by assigning the variables to the return value(s) of the function until the function returns `nil`. It leads to some neat uses with pattern matching.\n\n    local str = \"a short example string\"\n    for word in str:gmatch(\"%S+\") do\n        print(word)\n    end", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s one of the neat things about Lua.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for key, value in pairs(table) do\n    ...\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can replace &lt;code&gt;pairs(table)&lt;/code&gt; with any function, the idea is that the loop continues by assigning the variables to the return value(s) of the function until the function returns &lt;code&gt;nil&lt;/code&gt;. It leads to some neat uses with pattern matching.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;local str = &amp;quot;a short example string&amp;quot;\nfor word in str:gmatch(&amp;quot;%S+&amp;quot;) do\n    print(word)\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9h8c0e", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9h8c0e/", "num_reports": null, "stickied": false, "created": 1478056485.0, "author_flair_text": null, "created_utc": 1478027685.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9gqyfz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "TLM_A", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9go4vh", "score": 13, "approved_by": null, "downs": 0, "author_cakeday": true, "edited": 1478006617.0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python&amp;#39;s for loop really highlights the issue that for loops in most languages have. Generally speaking, what for loops usually &lt;em&gt;do&lt;/em&gt; is getting a variable&amp;#39;s value from A to B, whereas what we usually &lt;em&gt;want&lt;/em&gt; from them is iterating over a collection. So we end up with things like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; for(int i = 0; i &amp;lt; my_collection.size(); i++)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This has major issues. The first being the common use of the &lt;code&gt;int&lt;/code&gt; datatype, which may or may not be big enough to cover the entire collection (&lt;code&gt;size_t&lt;/code&gt; should be used, but &lt;code&gt;int&lt;/code&gt; is so common that you stop noticing it as an error). The second is the fact that we&amp;#39;re using the size as a stopping point, and it doesn&amp;#39;t actually have anything to do with the index of the last element we loop over, except that it just so happens to be 1 above it. Finally, the only time the collection is mentioned here at all is by its size, the for loop in most languages doesn&amp;#39;t deal with &lt;em&gt;elements&lt;/em&gt; of the collection, even though that&amp;#39;s what we&amp;#39;re interested in -- most usually indices are of little to no interest. Your example itself will most often actually be something along the lines of:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; a = [&amp;quot;Hello&amp;quot;, &amp;quot;world&amp;quot;, &amp;quot;!&amp;quot;]\n # ...\n for i in a:\n     print(i)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9gqyfz", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9gqyfz/", "num_reports": null, "stickied": false, "created": 1478035191.0, "author_flair_text": null, "created_utc": 1478006391.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d9hajy1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "gliph", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9gtb1k", "score": 1, "approved_by": null, "downs": 0, "body": "You're totally right. This is IMO a big drawback of streams, but when you don't need those tools streams are pretty great.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You&amp;#39;re totally right. This is IMO a big drawback of streams, but when you don&amp;#39;t need those tools streams are pretty great.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9hajy1", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9hajy1/", "num_reports": null, "stickied": false, "created": 1478059046.0, "author_flair_text": null, "created_utc": 1478030246.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9gtb1k", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "kazagistar", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9gorqe", "score": 3, "approved_by": null, "downs": 0, "body": "If you need to throw checked exceptions it ruins all the usefulness of lamda based solutions like streams in Java, unfortunately. Dealing with the order or exceptions and sensible semantics for parallel execution was too hard I guess, and they just gave up.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you need to throw checked exceptions it ruins all the usefulness of lamda based solutions like streams in Java, unfortunately. Dealing with the order or exceptions and sensible semantics for parallel execution was too hard I guess, and they just gave up.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9gtb1k", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9gtb1k/", "num_reports": null, "stickied": false, "created": 1478038765.0, "author_flair_text": null, "created_utc": 1478009965.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d9hif7q", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "apemanzilla", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9h9a4u", "score": 2, "approved_by": null, "downs": 0, "body": "If you haven't yet check out xtend. It compiles to Java and is fully interoperable with it, and adds stuff like extension methods and operator overloading.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you haven&amp;#39;t yet check out xtend. It compiles to Java and is fully interoperable with it, and adds stuff like extension methods and operator overloading.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9hif7q", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9hif7q/", "num_reports": null, "stickied": false, "created": 1478068523.0, "author_flair_text": null, "created_utc": 1478039723.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9h9a4u", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "gliph", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9h8lc3", "score": 1, "approved_by": null, "downs": 0, "body": "No argument here! It would be really nice. I think unfortunately that we'll have to switch to another language to get these features.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No argument here! It would be really nice. I think unfortunately that we&amp;#39;ll have to switch to another language to get these features.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9h9a4u", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9h9a4u/", "num_reports": null, "stickied": false, "created": 1478057569.0, "author_flair_text": null, "created_utc": 1478028769.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9h8lc3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "apemanzilla", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9gorqe", "score": 2, "approved_by": null, "downs": 0, "body": "I wish it was almost the opposite, common `Stream` members being implemented as default methods in `Iterable`. I know it would go against a lot of the design and whatnot but being able to just call `myList.any(i -&gt; i.equals(\"example\"))` would be really useful for writing less verbose code.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I wish it was almost the opposite, common &lt;code&gt;Stream&lt;/code&gt; members being implemented as default methods in &lt;code&gt;Iterable&lt;/code&gt;. I know it would go against a lot of the design and whatnot but being able to just call &lt;code&gt;myList.any(i -&amp;gt; i.equals(&amp;quot;example&amp;quot;))&lt;/code&gt; would be really useful for writing less verbose code.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9h8lc3", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9h8lc3/", "num_reports": null, "stickied": false, "created": 1478056783.0, "author_flair_text": null, "created_utc": 1478027983.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d9i4s41", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "overactor", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9gorqe", "score": 2, "approved_by": null, "downs": 0, "body": "A bit of type inference could already improve the situation by quite a bit, imagine being able to write this:\n\n    for (let i : IntStream.range(0,n)::iterator) { }\n\nThis would allow a lot of (relatively) elegant flexibility without having to explicitly implement too many interfaces on standard classes or add extension methods (which I don't think will ever happen).\n\nPersonally, I don't see why `Stream` shouldn't implement `Iterable`; non destructive iteration is simply not a part of `Iterable`'s contract. We've got `Collection` for that (if I'm not mistaken).", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A bit of type inference could already improve the situation by quite a bit, imagine being able to write this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for (let i : IntStream.range(0,n)::iterator) { }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This would allow a lot of (relatively) elegant flexibility without having to explicitly implement too many interfaces on standard classes or add extension methods (which I don&amp;#39;t think will ever happen).&lt;/p&gt;\n\n&lt;p&gt;Personally, I don&amp;#39;t see why &lt;code&gt;Stream&lt;/code&gt; shouldn&amp;#39;t implement &lt;code&gt;Iterable&lt;/code&gt;; non destructive iteration is simply not a part of &lt;code&gt;Iterable&lt;/code&gt;&amp;#39;s contract. We&amp;#39;ve got &lt;code&gt;Collection&lt;/code&gt; for that (if I&amp;#39;m not mistaken).&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9i4s41", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9i4s41/", "num_reports": null, "stickied": false, "created": 1478106898.0, "author_flair_text": null, "created_utc": 1478078098.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9gorqe", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "gliph", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9go4vh", "score": 3, "approved_by": null, "downs": 0, "body": "I agree that is much more elegant.\n\nSome are asking for `Stream` to implement `Iterable`. Then you could do what you suggest in Java in a non-absurd way. The primary objection to having Stream implement Iterable is that you can't iterate more than once on the same Stream, but there are already Iterable classes in Java that behave this way.\n\nRight now, you can use `Stream.forEach` in most cases, or else use a classic for loop (e.g. you may need to assign inside the for loop, which is not allowed in forEach).", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I agree that is much more elegant.&lt;/p&gt;\n\n&lt;p&gt;Some are asking for &lt;code&gt;Stream&lt;/code&gt; to implement &lt;code&gt;Iterable&lt;/code&gt;. Then you could do what you suggest in Java in a non-absurd way. The primary objection to having Stream implement Iterable is that you can&amp;#39;t iterate more than once on the same Stream, but there are already Iterable classes in Java that behave this way.&lt;/p&gt;\n\n&lt;p&gt;Right now, you can use &lt;code&gt;Stream.forEach&lt;/code&gt; in most cases, or else use a classic for loop (e.g. you may need to assign inside the for loop, which is not allowed in forEach).&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9gorqe", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9gorqe/", "num_reports": null, "stickied": false, "created": 1478030911.0, "author_flair_text": null, "created_utc": 1478002111.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": -2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d9hwfv7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "juckele", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9ha94l", "score": 3, "approved_by": null, "downs": 0, "body": "If we're comparing the short python to the long Java, having the variable final is more verbose but also doing something the python is not doing.\n\nAnd yes, my IDE imports things for me. Java without an IDE is painful to write. Don't do it.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If we&amp;#39;re comparing the short python to the long Java, having the variable final is more verbose but also doing something the python is not doing.&lt;/p&gt;\n\n&lt;p&gt;And yes, my IDE imports things for me. Java without an IDE is painful to write. Don&amp;#39;t do it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9hwfv7", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9hwfv7/", "num_reports": null, "stickied": false, "created": 1478086398.0, "author_flair_text": null, "created_utc": 1478057598.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d9hdvxz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "[deleted]", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9hdpig", "score": 1, "approved_by": null, "downs": 0, "body": "Oh, I see what you mean. That seems like a valid use case.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh, I see what you mean. That seems like a valid use case.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": false, "subreddit": "ProgrammerHumor", "name": "t1_d9hdvxz", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9hdvxz/", "num_reports": null, "stickied": false, "created": 1478062866.0, "author_flair_text": null, "created_utc": 1478034066.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 5, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9hdpig", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "overactor", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9hcnlm", "score": 3, "approved_by": null, "downs": 0, "body": "Well, you typically don't want i to change except for when the i++ gets executed, but there is no way to guarantee that the body of the for-loop doesn't do so anyway.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well, you typically don&amp;#39;t want i to change except for when the i++ gets executed, but there is no way to guarantee that the body of the for-loop doesn&amp;#39;t do so anyway.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9hdpig", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9hdpig/", "num_reports": null, "stickied": false, "created": 1478062650.0, "author_flair_text": null, "created_utc": 1478033850.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 1, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d9he09d", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "gliph", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9hcnlm", "score": 1, "approved_by": null, "downs": 0, "body": "Ideally, you want to be able to do something like this:\n\n    for (i from 0..n)\n      print(i);\n\nInside the foreach loop, you don't care about the other values of `i`. You care about this particular value. This is similar to why you don't use global variables to pass arguments into a function - it introduces externalities that complicate the problem.\n\nKnowing why we use `i`, it is easy to see why you don't want it to change: the code is simpler if `i` always represents the same thing.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ideally, you want to be able to do something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for (i from 0..n)\n  print(i);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Inside the foreach loop, you don&amp;#39;t care about the other values of &lt;code&gt;i&lt;/code&gt;. You care about this particular value. This is similar to why you don&amp;#39;t use global variables to pass arguments into a function - it introduces externalities that complicate the problem.&lt;/p&gt;\n\n&lt;p&gt;Knowing why we use &lt;code&gt;i&lt;/code&gt;, it is easy to see why you don&amp;#39;t want it to change: the code is simpler if &lt;code&gt;i&lt;/code&gt; always represents the same thing.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9he09d", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9he09d/", "num_reports": null, "stickied": false, "created": 1478063012.0, "author_flair_text": null, "created_utc": 1478034212.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 4, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9hcnlm", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "[deleted]", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9ha94l", "score": 1, "approved_by": null, "downs": 0, "body": "Why would you want to make the 'i' in the regular for loop final? That doesn't make much sense unless I'm missing something?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Why would you want to make the &amp;#39;i&amp;#39; in the regular for loop final? That doesn&amp;#39;t make much sense unless I&amp;#39;m missing something?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": false, "subreddit": "ProgrammerHumor", "name": "t1_d9hcnlm", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9hcnlm/", "num_reports": null, "stickied": false, "created": 1478061416.0, "author_flair_text": null, "created_utc": 1478032616.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9ha94l", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "gliph", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9gshvw", "score": 3, "approved_by": null, "downs": 0, "body": "That first version is what I wrote in the OP? Did you intend to write something else? The reason to use `final` is because it would be odd practice to reassign the element target of a foreach. Oh, and you have IntStream imported which is nice. This was the only place I used IntStream in the problem so I didn't import, although if you think it makes it clearer to `import` I wouldn't disagree with you.\n\nThe second version isn't equivalent as it isn't a foreach loop. In some sense, the fact that you *can't* make `i` `final` in the plain old for loop is a symptom of its inelegance.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That first version is what I wrote in the OP? Did you intend to write something else? The reason to use &lt;code&gt;final&lt;/code&gt; is because it would be odd practice to reassign the element target of a foreach. Oh, and you have IntStream imported which is nice. This was the only place I used IntStream in the problem so I didn&amp;#39;t import, although if you think it makes it clearer to &lt;code&gt;import&lt;/code&gt; I wouldn&amp;#39;t disagree with you.&lt;/p&gt;\n\n&lt;p&gt;The second version isn&amp;#39;t equivalent as it isn&amp;#39;t a foreach loop. In some sense, the fact that you &lt;em&gt;can&amp;#39;t&lt;/em&gt; make &lt;code&gt;i&lt;/code&gt; &lt;code&gt;final&lt;/code&gt; in the plain old for loop is a symptom of its inelegance.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9ha94l", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9ha94l/", "num_reports": null, "stickied": false, "created": 1478058698.0, "author_flair_text": null, "created_utc": 1478029898.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9gshvw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "juckele", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9go4vh", "score": -2, "approved_by": null, "downs": 0, "body": "OP's picture is also needlessly verbose. Normal version is still longer than python, but much shorter:\n\n    for(int i : (Iterable&lt;Integer&gt;IntStream.range(0,n)::iterator) {\n        ...\n    }\n\nAnd then there's the much faster version:\n\n    for(int i = 0; i &lt; n; i++) {\n        ...\n    }\n\nwhich is faster than the Java range version, and way faster than the python one.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;OP&amp;#39;s picture is also needlessly verbose. Normal version is still longer than python, but much shorter:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for(int i : (Iterable&amp;lt;Integer&amp;gt;IntStream.range(0,n)::iterator) {\n    ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And then there&amp;#39;s the much faster version:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for(int i = 0; i &amp;lt; n; i++) {\n    ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which is faster than the Java range version, and way faster than the python one.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9gshvw", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9gshvw/", "num_reports": null, "stickied": false, "created": 1478037606.0, "author_flair_text": null, "created_utc": 1478008806.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 1, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9go4vh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "HugoNikanor", "can_mod_post": false, "send_replies": true, "parent_id": "t3_5ahxvs", "score": 30, "approved_by": null, "downs": 0, "body": "But that's mostly scary because it's so much for so little. Some languages really write about all their `for` loops like this.\n\nFor example, Python:\n    \n    for x in range(n):\n        pass", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;But that&amp;#39;s mostly scary because it&amp;#39;s so much for so little. Some languages really write about all their &lt;code&gt;for&lt;/code&gt; loops like this.&lt;/p&gt;\n\n&lt;p&gt;For example, Python:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for x in range(n):\n    pass\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9go4vh", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9go4vh/", "num_reports": null, "stickied": false, "created": 1478029342.0, "author_flair_text": null, "created_utc": 1478000542.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 13, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 2, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": true, "replies": "", "user_reports": [], "saved": false, "id": "d9gzss4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "iStripOnTheSide", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9gze1a", "score": 2, "approved_by": null, "downs": 0, "body": "Ahh makes sense thanks!", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ahh makes sense thanks!&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9gzss4", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9gzss4/", "num_reports": null, "stickied": false, "created": 1478046642.0, "author_flair_text": null, "created_utc": 1478017842.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9gze1a", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "StrangelyTyped", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9gvzue", "score": 13, "approved_by": null, "downs": 0, "body": "* `java.util.IntStream.range(0, n)` - create an IntStream using the static [`range`](https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html#range-int-int-) method, that will stream all integers between 0 and `n`\n\n* `IntStream.range(...)::iterator` - (excuse my terminology here) take a reference to the [`iterator`](https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html#iterator--) method of the IntStream returned by the `range(...)` method, this results in a method reference that takes no arguments and has it's `this` bound to the previously returned IntStream object.\n\n* `(Iterable&lt;Integer&gt;)java.util...::iterator` - cast the method reference to an instance of the [Iterable](https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html) interface. This this interface has only one abstract method so it is a Functional Interface, and therefore method references and lambas can be cast to this interface provided they match the method signature of the abstract method, in this case [`Iterator&lt;T&gt; iterator()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html#iterator--). (It's around this point I started experencing semantic satiation on the word iterator just FYI). Since the iterator method of IntStream matches that signature we can cast this method reference to this interface.\n\n* `for(final int i : ...){` - iterate over each Integer in that iterable which in turn pulls integers out of the IntStream, just like any normal iterable.\n\nAll this because for some reason BaseStream&lt;T, S&gt; doesn't extend Iterable&lt;T&gt; despite specifying an appropriate iterator method. Answers for that appear to be available in [this](http://stackoverflow.com/questions/20129762/why-does-streamt-not-implement-iterablet) SO post.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;java.util.IntStream.range(0, n)&lt;/code&gt; - create an IntStream using the static &lt;a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html#range-int-int-\"&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; method, that will stream all integers between 0 and &lt;code&gt;n&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;IntStream.range(...)::iterator&lt;/code&gt; - (excuse my terminology here) take a reference to the &lt;a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html#iterator--\"&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; method of the IntStream returned by the &lt;code&gt;range(...)&lt;/code&gt; method, this results in a method reference that takes no arguments and has it&amp;#39;s &lt;code&gt;this&lt;/code&gt; bound to the previously returned IntStream object.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;(Iterable&amp;lt;Integer&amp;gt;)java.util...::iterator&lt;/code&gt; - cast the method reference to an instance of the &lt;a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\"&gt;Iterable&lt;/a&gt; interface. This this interface has only one abstract method so it is a Functional Interface, and therefore method references and lambas can be cast to this interface provided they match the method signature of the abstract method, in this case &lt;a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html#iterator--\"&gt;&lt;code&gt;Iterator&amp;lt;T&amp;gt; iterator()&lt;/code&gt;&lt;/a&gt;. (It&amp;#39;s around this point I started experencing semantic satiation on the word iterator just FYI). Since the iterator method of IntStream matches that signature we can cast this method reference to this interface.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;for(final int i : ...){&lt;/code&gt; - iterate over each Integer in that iterable which in turn pulls integers out of the IntStream, just like any normal iterable.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;All this because for some reason BaseStream&amp;lt;T, S&amp;gt; doesn&amp;#39;t extend Iterable&amp;lt;T&amp;gt; despite specifying an appropriate iterator method. Answers for that appear to be available in &lt;a href=\"http://stackoverflow.com/questions/20129762/why-does-streamt-not-implement-iterablet\"&gt;this&lt;/a&gt; SO post.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9gze1a", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9gze1a/", "num_reports": null, "stickied": false, "created": 1478046168.0, "author_flair_text": null, "created_utc": 1478017368.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9gvzue", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "iStripOnTheSide", "can_mod_post": false, "send_replies": true, "parent_id": "t3_5ahxvs", "score": 5, "approved_by": null, "downs": 0, "body": "I'm just going to ask. I'm pretty sure I know how this works, but not 100%. Can somebody be nice enough to explain this?", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m just going to ask. I&amp;#39;m pretty sure I know how this works, but not 100%. Can somebody be nice enough to explain this?&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9gvzue", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9gvzue/", "num_reports": null, "stickied": false, "created": 1478042206.0, "author_flair_text": null, "created_utc": 1478013406.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 3, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 5, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": false, "replies": {"kind": "Listing", "data": {"after": null, "whitelist_status": "all_ads", "modhash": "", "dist": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tex6", "approved_at_utc": null, "ups": 6, "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id": "t3_5ahxvs", "likes": null, "no_follow": false, "replies": "", "user_reports": [], "saved": false, "id": "d9haee3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "gliph", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9h9m9p", "score": 6, "approved_by": null, "downs": 0, "body": "&gt; Edit: I was looking at the wrong version.\n\nStory of my life for Java API docs. I wish Google would return 8 by default. I've started typing \"java 8 X\" for searches now.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Edit: I was looking at the wrong version.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Story of my life for Java API docs. I wish Google would return 8 by default. I&amp;#39;ve started typing &amp;quot;java 8 X&amp;quot; for searches now.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9haee3", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9haee3/", "num_reports": null, "stickied": false, "created": 1478058865.0, "author_flair_text": null, "created_utc": 1478030065.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 3, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9h9m9p", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "dat_sylveon", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9h9dhs", "score": 6, "approved_by": null, "downs": 0, "body": "Huh, I don't see it in the docs. \n\nEdit: I was looking at the wrong version. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Huh, I don&amp;#39;t see it in the docs. &lt;/p&gt;\n\n&lt;p&gt;Edit: I was looking at the wrong version. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9h9m9p", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9h9m9p/", "num_reports": null, "stickied": false, "created": 1478057962.0, "author_flair_text": null, "created_utc": 1478029162.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 2, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9h9dhs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "gliph", "can_mod_post": false, "send_replies": true, "parent_id": "t1_d9gwy86", "score": 5, "approved_by": null, "downs": 0, "body": "Java 8 added some semblance of functional programming in the form of the stream api.\n\nLambdas, map, reduce, and more. It's actually really nice for a lot of tasks but still feels like a work in progress in other areas.", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": true, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java 8 added some semblance of functional programming in the form of the stream api.&lt;/p&gt;\n\n&lt;p&gt;Lambdas, map, reduce, and more. It&amp;#39;s actually really nice for a lot of tasks but still feels like a work in progress in other areas.&lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9h9dhs", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9h9dhs/", "num_reports": null, "stickied": false, "created": 1478057679.0, "author_flair_text": null, "created_utc": 1478028879.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 1, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}, "user_reports": [], "saved": false, "id": "d9gwy86", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "report_reasons": null, "author": "dat_sylveon", "can_mod_post": false, "send_replies": true, "parent_id": "t3_5ahxvs", "score": 3, "approved_by": null, "downs": 0, "body": "java.util.stream? That's new. ", "edited": false, "author_flair_css_class": null, "collapsed": false, "is_submitter": false, "collapsed_reason": null, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;java.util.stream? That&amp;#39;s new. &lt;/p&gt;\n&lt;/div&gt;", "subreddit_type": "public", "can_gild": true, "subreddit": "ProgrammerHumor", "name": "t1_d9gwy86", "score_hidden": false, "permalink": "/r/ProgrammerHumor/comments/5ahxvs/getting_in_the_halloween_spirit_for_a_codewars/d9gwy86/", "num_reports": null, "stickied": false, "created": 1478043344.0, "author_flair_text": null, "created_utc": 1478014544.0, "subreddit_name_prefixed": "r/ProgrammerHumor", "controversiality": 0, "depth": 0, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before": null}}]